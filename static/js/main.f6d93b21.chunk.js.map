{"version":3,"sources":["screens/home/index.tsx","screens/login/hooks/use-animation.ts","utils/theme.ts","utils/use-previous.ts","screens/welcome/styles.ts","interfaces/notification.interface.ts","screens/login/styles.ts","stores/notification/notification.actions.ts","stores/notification/notification.reducer.ts","stores/loader-banner/loader-banner.actions.ts","stores/notification/index.tsx","stores/loader-banner/loader-banner.reducer.ts","stores/loader-banner/index.tsx","screens/login/index.tsx","screens/welcome/hooks/use-animation.ts","screens/welcome/index.tsx","screens/register/hooks/use-animation.ts","screens/register/styles.ts","screens/register/index.tsx","components/app/styles.ts","components/app/index.tsx","components/notification/styles.ts","components/notification/index.tsx","components/loader-banner/styles.ts","components/loader-banner/index.tsx","components/styles/input.ts","components/password-input/styles.ts","components/password-input/index.tsx","components/authenticated-route/index.tsx","components/styles/button.ts","components/styles/social-media-button.ts","serviceWorker.ts","index.tsx"],"names":["Home","useAnimation","titleAnimation","useSpring","opacity","from","delay","subTitleAnimation","transform","emailFieldAnimation","pwFieldAnimation","loginButtonAnimation","socialMediaAnimation","titleIconAnimation","theme","vw","document","documentElement","clientWidth","vh","clientHeight","fontSize","defaultFontColor","primaryFontColor","successFontColor","dangerFontColor","warningFontColor","primaryColor","defaultColor","dark","dark06","darker","darker06","successColor","dangerColor","successBorderColor","dangerBorderColor","warningBorderColor","successBackgroundColor","dangerBackgroundColor","warningBackgroundColor","usePrevious","value","ref","React","current","NotificationType","WelcomeContainer","styled","div","WelcomeCircle","H1","h1","TitleContainer","TitleIcon","ControlsContainer","P","p","SocialMediaContainer","NotificationActions","LoginContainer","SubTitle","h2","LoaderBannerActions","notificationReducer","state","action","type","ADD","payload","RESET","DELETE","filter","noti","id","Error","initialState","NotificationStoreContext","notifications","dispatchNotification","useNotificationStore","loaderBannerReducer","START","isLoading","text","STOP","undefined","LoaderBannerContext","loaderBanner","dispatchIsLoading","useLoaderBannerStore","validationSchema","yup","shape","email","required","password","min","Login","formController","useFormik","initialValues","onSubmit","uuid","timeStamp","Date","now","Success","message","resetForm","isSubmitting","isValid","key","errors","setTimeout","Danger","isValidatingPrevious","isValidating","loginWithSocialMedia","platform","Warning","AP","animated","AH1","ASubTitle","ATitleIcon","ASocialMediaContainer","style","icon","faSignInAlt","width","height","name","placeholder","values","onChange","handleChange","touched","isInvalid","variant","onClick","handleSubmit","faFacebookF","size","faGoogle","faGithub","defaultButtonTransform","primaryButtonTransform","socialMediaContainerTransform","titleIconScale","Welcome","history","useHistory","set","moveTo","path","push","AWelcomeCircle","AControlsContainer","faTrophy","usernameFieldAnimation","confirmPWFieldAnimation","registerButtonAnimation","RegisterContainer","username","max","matches","confirmPassword","oneOf","Register","faUserPlus","AppContainer","BottomCircle","TopCircle","InnerCircle","App","basename","exact","render","screen","userLoggedIn","NotificationContainer","NotificationText","strLenght","IconContainer","DeleteIconContainer","button","AIconContainer","ANotificationContainer","Notification","notificationAnimations","useTransition","map","n","index","y","leave","enter","update","config","default","friction","prevNotifications","length","newNotification","find","prevNoti","indexOf","notification","item","props","faExclamation","faInfo","faCheck","faTimes","Banner","LoaderContainer","Text","loaderAnimation","keyframes","Loader","innerLoaderAnimation","InnerLoader","ALoaderContainer","LoaderBanner","stlye","Input","input","PasswordInputContainer","EyeIconContainer","rest","showPW","setShowPW","inputRef","updateShowPW","show","focus","faEyeSlash","e","faEye","AuthenticatedRoute","to","Button","SocialMediaButton","Boolean","window","location","hostname","match","ReactDOM","children","Provider","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f6d93b21.chunk.js","sourcesContent":["import * as React from 'react';\r\n\r\ninterface IHomeProps { }\r\n\r\nconst Home: React.FC<IHomeProps> = () => {\r\n\r\n    return (\r\n        <div>{'Home'}</div>\r\n    );\r\n}\r\n\r\nexport default Home;","import { useSpring } from 'react-spring';\r\n\r\nconst useAnimation = () => {\r\n    const { opacity: titleAnimation } = useSpring({\r\n        opacity: 1,\r\n        from: { opacity: 0 },\r\n        delay: 0,\r\n    });\r\n    const { transform: subTitleAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 50\r\n    });\r\n    const { transform: emailFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 100\r\n    });\r\n    const { transform: pwFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 150\r\n    });\r\n    const { transform: loginButtonAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 200\r\n    });\r\n    const { transform: socialMediaAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 250\r\n    });\r\n    const { transform: titleIconAnimation } = useSpring({\r\n        transform: 'scale(1)',\r\n        from: { transform: 'scale(0)' },\r\n        delay: 300,\r\n    });\r\n\r\n    return {\r\n        titleAnimation,\r\n        pwFieldAnimation,\r\n        subTitleAnimation,\r\n        titleIconAnimation,\r\n        emailFieldAnimation,\r\n        loginButtonAnimation,\r\n        socialMediaAnimation,\r\n    };\r\n}\r\n\r\nexport default useAnimation;","const theme = {\r\n    vw: document.documentElement.clientWidth,\r\n    vh: document.documentElement.clientHeight,\r\n\r\n    fontSize: '16px',\r\n    defaultFontColor: '#fff',\r\n    primaryFontColor: '#0e9aa7',\r\n    successFontColor: '#155724',\r\n    dangerFontColor: '#721c24',\r\n    warningFontColor: '#856404',\r\n\r\n    primaryColor: '#3da4ab',\r\n    defaultColor: 'rgba(255,255,255,0.15)',\r\n    dark: 'rgba(48,48,48,1)',\r\n    dark06: 'rgba(48,48,48,0.6)',\r\n    darker: 'rgba(30,30,30,1)',\r\n    darker06: 'rgba(30,30,30,0.6)',\r\n    successColor: '#28a745',\r\n    dangerColor: '#dc3545',\r\n\r\n    // Notification theme\r\n    successBorderColor: '#c3e6cb',\r\n    dangerBorderColor: '#f5c6cb',\r\n    warningBorderColor: '#ffeeba',\r\n    successBackgroundColor: '#d4edda',\r\n    dangerBackgroundColor: '#f8d7da',\r\n    warningBackgroundColor: '#fff3cd',\r\n};\r\n\r\nexport default theme;","import * as React from 'react';\r\n\r\nconst usePrevious = <T extends any>(value: T) => {\r\n    const ref = React.useRef<T>();\r\n    React.useEffect(() => {\r\n        ref.current = value;\r\n    }, [value]);\r\n    return ref.current;\r\n};\r\n\r\nexport default usePrevious;","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\n\r\nexport const WelcomeContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: flex-end;\r\n`;\r\n\r\nexport const WelcomeCircle = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    width: ${theme.vw > theme.vh ? '100vw' : '100vh'};\r\n    height: ${theme.vw > theme.vh ? '100vw' : '100vh'};\r\n    padding-bottom: 5%;\r\n    border-radius: 50%;\r\n    box-shadow: inset -1px -1px 10px rgba(0,0,0,0.6), 5px 5px 25px rgba(0,0,0,0.6), -5px -5px 25px rgba(0,0,0,0.6);\r\n    background-color: ${theme.primaryColor};\r\n    background-image: linear-gradient(rgba(255,255,255,0.4), rgba(255,255,255,0));\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: center;\r\n\r\n    @media (max-width: 700px) {\r\n        padding-bottom: 20%;\r\n    }\r\n`;\r\n\r\nexport const H1 = styled.h1`\r\n    font-size: 3.5rem;\r\n    color: ${theme.defaultFontColor};\r\n    text-align: center;\r\n    letter-spacing: 2px;\r\n    margin-bottom: 2.5vh;\r\n\r\n    @media (max-width: 700px) {\r\n        font-size: 2.5rem;\r\n    }\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const TitleIcon = styled.div`\r\n    height: 5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: ${theme.defaultFontColor};\r\n\r\n    @media (max-width: 700px) {\r\n        height: 5rem;\r\n    }\r\n`;\r\n\r\nexport const ControlsContainer = styled.div`\r\n    width: 100%;\r\n    padding: 0 10vw 10vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nexport const P = styled.p`\r\n    font-size: 0.8rem;\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    color: ${theme.defaultFontColor};\r\n    margin: 1.5rem 0;\r\n    letter-spacing: 1px;\r\n    text-align: center;\r\n`;\r\n\r\nexport const SocialMediaContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;","import * as React from 'react';\r\nimport { IAction } from './action.interface';\r\nimport { NotificationActions } from '../stores/notification/notification.actions';\r\n\r\nexport enum NotificationType {\r\n    Danger = 'Danger',\r\n    Warning = 'Warning',\r\n    Success = 'Success',\r\n}\r\n\r\nexport interface INotification {\r\n    id: string;\r\n    message: string;\r\n    timeStamp: number;\r\n    type: NotificationType;\r\n}\r\n\r\nexport interface INotificationContext {\r\n    notifications: INotification[];\r\n    dispatchNotification: React.Dispatch<IAction<NotificationActions, INotification | undefined>>;\r\n}","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\n\r\nexport const LoginContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 15vh 10vw 1vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 15vh;\r\n`;\r\n\r\nexport const H1 = styled.h1`\r\n    font-size: 1.6rem;\r\n    color: ${theme.defaultFontColor};\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    margin-bottom: 1rem;\r\n    font-weight: 600;\r\n`;\r\n\r\nexport const TitleIcon = styled.div`\r\n    height: 4rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: ${theme.defaultFontColor};\r\n`;\r\n\r\nexport const SubTitle = styled.h2`\r\n    font-size: 1.6rem;\r\n    color: ${theme.primaryFontColor};\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    margin-bottom: 1rem;\r\n    font-weight: 600;\r\n`;","export enum NotificationActions {\r\n    ADD = 'ADD',\r\n    RESET = 'RESET',\r\n    DELETE = 'DELETE',\r\n};","import { IAction } from '../../interfaces/action.interface';\r\nimport { NotificationActions } from './notification.actions';\r\nimport { INotification } from '../../interfaces/notification.interface';\r\n\r\nexport const notificationReducer = (state: INotification[], action: IAction<NotificationActions, INotification | undefined>): INotification[] => {\r\n    switch (action.type) {\r\n        case NotificationActions.ADD:\r\n            if (action.payload) {\r\n                return [\r\n                    action.payload,\r\n                    ...state\r\n                ]\r\n            }\r\n            else return [...state];\r\n\r\n        case NotificationActions.RESET:\r\n            return [];\r\n\r\n        case NotificationActions.DELETE:\r\n            return [\r\n                ...state.filter(noti => noti.id !== action.payload?.id)\r\n            ];\r\n\r\n        default:\r\n            throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n}","export enum LoaderBannerActions {\r\n    STOP = 'STOP',\r\n    START = 'START',\r\n};","import * as React from 'react';\r\nimport { notificationReducer } from './notification.reducer';\r\nimport { INotification, INotificationContext } from '../../interfaces/notification.interface';\r\n\r\nconst initialState: INotification[] = [];\r\n\r\nconst NotificationStoreContext = React.createContext<INotificationContext>({ notifications: initialState, dispatchNotification: () => { } });\r\n\r\nexport const NotificationStoreProvider: React.FC<{}> = ({ children }) => {\r\n    const [notifications, dispatchNotification] = React.useReducer(notificationReducer, initialState);\r\n\r\n    return (\r\n        <NotificationStoreContext.Provider value={{ notifications, dispatchNotification }}>\r\n            {children}\r\n        </NotificationStoreContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useNotificationStore = () => React.useContext(NotificationStoreContext);\r\n\r\nexport * from './notification.actions';","import { IAction } from '../../interfaces/action.interface';\r\nimport { LoaderBannerActions } from './loader-banner.actions';\r\nimport { ILoaderBanner } from '../../interfaces/loader-banner.interface';\r\n\r\nexport const loaderBannerReducer = (state: ILoaderBanner, action: IAction<LoaderBannerActions, ILoaderBanner>): ILoaderBanner => {\r\n    switch (action.type) {\r\n        case LoaderBannerActions.START:\r\n            return {\r\n                isLoading: true,\r\n                text: action.payload.text || 'Loading...'\r\n            };\r\n\r\n        case LoaderBannerActions.STOP:\r\n            return {\r\n                isLoading: false,\r\n            }\r\n\r\n        default:\r\n            throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n}","import * as React from 'react';\r\nimport { loaderBannerReducer } from './loader-banner.reducer';\r\nimport { ILoaderBannerContext, ILoaderBanner } from '../../interfaces/loader-banner.interface';\r\n\r\nconst initialState: ILoaderBanner = {\r\n    text: undefined,\r\n    isLoading: false,\r\n};\r\n\r\nconst LoaderBannerContext = React.createContext<ILoaderBannerContext>({ loaderBanner: initialState, dispatchIsLoading: () => { } });\r\n\r\nexport const LoaderBannerStoreProvider: React.FC<{}> = ({ children }) => {\r\n    const [loaderBanner, dispatchIsLoading] = React.useReducer(loaderBannerReducer, initialState);\r\n\r\n    return (\r\n        <LoaderBannerContext.Provider value={{ loaderBanner, dispatchIsLoading }}>\r\n            {children}\r\n        </LoaderBannerContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useLoaderBannerStore = () => React.useContext(LoaderBannerContext);\r\n\r\nexport * from './loader-banner.actions';","import * as yup from 'yup';\r\nimport { uuid } from 'uuidv4';\r\nimport * as React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { useAnimation } from './hooks';\r\nimport { animated } from 'react-spring';\r\nimport { usePrevious } from '../../utils';\r\nimport { SocialMediaContainer, P } from '../welcome/styles';\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { NotificationType } from '../../interfaces/notification.interface';\r\nimport { LoginContainer, H1, SubTitle, TitleIcon, TitleContainer } from './styles';\r\nimport { Button, Input, SocialMediaButton, PasswordInput } from '../../components';\r\nimport { faGoogle, faFacebookF, faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { useNotificationStore, NotificationActions, useLoaderBannerStore, LoaderBannerActions } from '../../stores';\r\n\r\nconst validationSchema = yup.object().shape({\r\n    email: yup.string()\r\n        .required('Email is required!')\r\n        .email('Email is not valid!'),\r\n    password: yup.string()\r\n        .required('Password is required!')\r\n        .min(6, 'Password must be at least 6 characters!'),\r\n});\r\n\r\ninterface IFormValues {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ninterface ILoginProps { }\r\n\r\nconst Login: React.FC<ILoginProps> = () => {\r\n\r\n    const { dispatchNotification } = useNotificationStore();\r\n    const { dispatchIsLoading } = useLoaderBannerStore();\r\n\r\n    const {\r\n        titleAnimation,\r\n        pwFieldAnimation,\r\n        subTitleAnimation,\r\n        titleIconAnimation,\r\n        emailFieldAnimation,\r\n        socialMediaAnimation,\r\n        loginButtonAnimation,\r\n    } = useAnimation();\r\n\r\n    const formController = useFormik<IFormValues>({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n        onSubmit: ({ email, password }) => {\r\n            dispatchNotification({\r\n                type: NotificationActions.ADD,\r\n                payload: {\r\n                    id: uuid(),\r\n                    timeStamp: Date.now(),\r\n                    type: NotificationType.Success,\r\n                    message: 'Form submitted!! :)',\r\n                }\r\n            });\r\n            formController.resetForm();\r\n        },\r\n        validationSchema,\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        if (!formController.isSubmitting && !formController.isValid) {\r\n            for (const key in formController.errors) {\r\n                if (!!formController.errors[key]) {\r\n                    setTimeout(() => {\r\n                        dispatchNotification({\r\n                            type: NotificationActions.ADD,\r\n                            payload: {\r\n                                id: uuid(),\r\n                                timeStamp: Date.now(),\r\n                                type: NotificationType.Danger,\r\n                                message: formController.errors[key] as string,\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [formController.isSubmitting]);\r\n\r\n    const isValidatingPrevious = usePrevious(formController.isValidating);\r\n\r\n    React.useEffect(() => {\r\n        if (formController.isValidating) {\r\n            dispatchIsLoading({ type: LoaderBannerActions.START, payload: { isLoading: true, text: 'Logging in...' } });\r\n        }\r\n        else if (!formController.isValidating && isValidatingPrevious) {\r\n            dispatchIsLoading({ type: LoaderBannerActions.STOP, payload: { isLoading: false } });\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [formController.isValidating]);\r\n\r\n    const loginWithSocialMedia = (platform: ('Facebook' | 'GitHub' | 'Google')) => {\r\n        setTimeout(() => {\r\n            dispatchNotification({\r\n                type: NotificationActions.ADD,\r\n                payload: {\r\n                    id: uuid(),\r\n                    timeStamp: Date.now(),\r\n                    type: NotificationType.Warning,\r\n                    message: `Login with ${platform} is under development.`,\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const AP = animated(P);\r\n    const AH1 = animated(H1);\r\n    const ASubTitle = animated(SubTitle);\r\n    const ATitleIcon = animated(TitleIcon);\r\n    const ASocialMediaContainer = animated(SocialMediaContainer);\r\n\r\n    return (\r\n        <LoginContainer>\r\n            <TitleContainer>\r\n                <AH1 style={{ opacity: titleAnimation }}>{'welcome back'}</AH1>\r\n                <ATitleIcon style={{ transform: titleIconAnimation }}>\r\n                    <FontAwesomeIcon icon={faSignInAlt} style={{ width: '100%', height: '100%' }} />\r\n                </ATitleIcon>\r\n            </TitleContainer>\r\n            <ASubTitle style={{ transform: subTitleAnimation }}>{'login in'}</ASubTitle>\r\n            <Input\r\n                name={'email'}\r\n                placeholder={'email'}\r\n                value={formController.values.email}\r\n                onChange={formController.handleChange}\r\n                style={{ transform: emailFieldAnimation }}\r\n                isValid={!!(formController.touched.email && !formController.errors.email)}\r\n                isInvalid={!!(formController.touched.email && !!formController.errors.email)}\r\n            />\r\n            <PasswordInput\r\n                name={'password'}\r\n                placeholder={'password'}\r\n                value={formController.values.password}\r\n                onChange={formController.handleChange}\r\n                style={{ transform: pwFieldAnimation }}\r\n                isValid={!!(formController.touched.password && !formController.errors.password)}\r\n                isInvalid={!!(formController.touched.password && !!formController.errors.password)}\r\n            />\r\n            <Button\r\n                variant={'primary'}\r\n                onClick={formController.handleSubmit}\r\n                style={{ transform: loginButtonAnimation }}\r\n            >\r\n                {'Login'}\r\n            </Button>\r\n            <AP style={{ transform: socialMediaAnimation }}>{'or login using social media'}</AP>\r\n            <ASocialMediaContainer style={{ transform: socialMediaAnimation }}>\r\n                <SocialMediaButton onClick={() => loginWithSocialMedia('Facebook')}>\r\n                    <FontAwesomeIcon icon={faFacebookF} size={'2x'} />\r\n                </SocialMediaButton>\r\n                <SocialMediaButton onClick={() => loginWithSocialMedia('Google')}>\r\n                    <FontAwesomeIcon icon={faGoogle} size={'2x'} />\r\n                </SocialMediaButton>\r\n                <SocialMediaButton onClick={() => loginWithSocialMedia('GitHub')}>\r\n                    <FontAwesomeIcon icon={faGithub} size={'2x'} />\r\n                </SocialMediaButton>\r\n            </ASocialMediaContainer>\r\n        </LoginContainer>\r\n    );\r\n}\r\n\r\nexport default Login;","import { useSpring } from 'react-spring';\r\n\r\nconst useAnimation = () => {\r\n    const { transform: defaultButtonTransform } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px,600px, 0px)' },\r\n        delay: 200,\r\n    });\r\n\r\n    const { transform: primaryButtonTransform } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px,600px, 0px)' },\r\n        delay: 250,\r\n    });\r\n\r\n    const { transform: socialMediaContainerTransform } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px,600px, 0px)' },\r\n        delay: 300,\r\n    });\r\n\r\n    const { transform: titleIconScale } = useSpring({\r\n        transform: 'scale(1)',\r\n        from: { transform: 'scale(0)' },\r\n        delay: 450,\r\n    });\r\n\r\n    return {\r\n        titleIconScale,\r\n        defaultButtonTransform,\r\n        primaryButtonTransform,\r\n        socialMediaContainerTransform,\r\n    };\r\n}\r\n\r\nexport default useAnimation;","import { uuid } from 'uuidv4';\r\nimport * as React from 'react';\r\nimport { theme } from '../../utils';\r\nimport { useAnimation } from './hooks';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSpring, animated } from 'react-spring';\r\nimport { faTrophy } from '@fortawesome/free-solid-svg-icons';\r\nimport { Button, SocialMediaButton } from '../../components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { useNotificationStore, NotificationActions } from '../../stores';\r\nimport { NotificationType } from '../../interfaces/notification.interface';\r\nimport { faGoogle, faFacebookF, faGithub } from '@fortawesome/free-brands-svg-icons'\r\nimport { WelcomeContainer, WelcomeCircle, H1, ControlsContainer, P, SocialMediaContainer, TitleContainer, TitleIcon } from './styles';\r\n\r\ninterface IWelcomeProps { }\r\n\r\nconst Welcome: React.FC<IWelcomeProps> = () => {\r\n    const history = useHistory();\r\n    const { dispatchNotification } = useNotificationStore();\r\n\r\n    const { vh, vw } = theme;\r\n\r\n    const {\r\n        titleIconScale,\r\n        defaultButtonTransform,\r\n        primaryButtonTransform,\r\n        socialMediaContainerTransform,\r\n    } = useAnimation();\r\n\r\n    const [{ transform, opacity }, set] = useSpring(() => ({ transform: `translate3d(0,${vw > vh ? '-150vw' : '-150vh'},0)`, opacity: 1 }));\r\n    set({ transform: `translate3d(0,${vw > vh ? '-75vw' : '-50vh'},0)` });\r\n\r\n    const moveTo = (path: string) => {\r\n        set({ transform: `translate3d(0,${vw > vh ? '-120vw' : '-120vh'},0)`, opacity: 0 });\r\n        setTimeout(() => history.push(path), 400);\r\n    };\r\n\r\n    const loginWithSocialMedia = (platform: ('Facebook' | 'GitHub' | 'Google')) => {\r\n        dispatchNotification({\r\n            type: NotificationActions.ADD,\r\n            payload: {\r\n                id: uuid(),\r\n                timeStamp: Date.now(),\r\n                type: NotificationType.Warning,\r\n                message: `Login with ${platform} is under development.`,\r\n            }\r\n        });\r\n    }\r\n\r\n    const AP = animated(P);\r\n    const ATitleIcon = animated(TitleIcon);\r\n    const AWelcomeCircle = animated(WelcomeCircle);\r\n    const AControlsContainer = animated(ControlsContainer);\r\n    const ASocialMediaContainer = animated(SocialMediaContainer);\r\n\r\n    return (\r\n        <WelcomeContainer>\r\n            <AWelcomeCircle style={{ transform }}>\r\n                <TitleContainer>\r\n                    <H1>{'HOMiESCUP'}</H1>\r\n                    <ATitleIcon style={{ transform: titleIconScale }}>\r\n                        <FontAwesomeIcon icon={faTrophy} style={{ width: '100%', height: '100%' }} />\r\n                    </ATitleIcon>\r\n                </TitleContainer>\r\n            </AWelcomeCircle>\r\n            <AControlsContainer style={{ opacity }}>\r\n                <Button variant={'default'} style={{ transform: defaultButtonTransform }} onClick={() => moveTo('/login')}>\r\n                    {'Login'}\r\n                </Button>\r\n                <Button variant={'primary'} style={{ transform: primaryButtonTransform }} onClick={() => moveTo('/register')}>\r\n                    {'Create account'}\r\n                </Button>\r\n                <AP style={{ transform: socialMediaContainerTransform }}>{'or login using social media'}</AP>\r\n                <ASocialMediaContainer style={{ transform: socialMediaContainerTransform }}>\r\n                    <SocialMediaButton onClick={() => loginWithSocialMedia('Facebook')}>\r\n                        <FontAwesomeIcon icon={faFacebookF} size={'2x'} />\r\n                    </SocialMediaButton>\r\n                    <SocialMediaButton onClick={() => loginWithSocialMedia('Google')}>\r\n                        <FontAwesomeIcon icon={faGoogle} size={'2x'} />\r\n                    </SocialMediaButton>\r\n                    <SocialMediaButton onClick={() => loginWithSocialMedia('GitHub')}>\r\n                        <FontAwesomeIcon icon={faGithub} size={'2x'} />\r\n                    </SocialMediaButton>\r\n                </ASocialMediaContainer>\r\n            </AControlsContainer>\r\n        </WelcomeContainer>\r\n    );\r\n}\r\n\r\nexport default Welcome;","import { useSpring } from 'react-spring';\r\n\r\nconst useAnimation = () => {\r\n    const { opacity: titleAnimation } = useSpring({\r\n        opacity: 1,\r\n        from: { opacity: 0 },\r\n        delay: 0,\r\n    });\r\n    const { transform: subTitleAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 50\r\n    });\r\n    const { transform: usernameFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 100\r\n    });\r\n    const { transform: emailFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 150\r\n    });\r\n    const { transform: pwFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 200\r\n    });\r\n    const { transform: confirmPWFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 250\r\n    });\r\n    const { transform: registerButtonAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 300\r\n    });\r\n    const { transform: titleIconAnimation } = useSpring({\r\n        transform: 'scale(1)',\r\n        from: { transform: 'scale(0)' },\r\n        delay: 350,\r\n    });\r\n\r\n    return {\r\n        titleAnimation,\r\n        pwFieldAnimation,\r\n        subTitleAnimation,\r\n        titleIconAnimation,\r\n        emailFieldAnimation,\r\n        usernameFieldAnimation,\r\n        confirmPWFieldAnimation,\r\n        registerButtonAnimation,\r\n    };\r\n}\r\n\r\nexport default useAnimation;","import styled from 'styled-components';\r\n\r\nexport const RegisterContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 15vh 10vw 1vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n`;","import * as yup from 'yup';\r\nimport { uuid } from 'uuidv4';\r\nimport * as React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { useAnimation } from './hooks';\r\nimport { animated } from 'react-spring';\r\nimport { usePrevious } from '../../utils';\r\nimport { RegisterContainer } from './styles';\r\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { Button, Input, PasswordInput } from '../../components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { H1, TitleContainer, TitleIcon, SubTitle } from '../login/styles';\r\nimport { NotificationType } from '../../interfaces/notification.interface';\r\nimport { useNotificationStore, NotificationActions, useLoaderBannerStore, LoaderBannerActions } from '../../stores';\r\n\r\nconst validationSchema = yup.object().shape({\r\n    username: yup.string()\r\n        .required('Username is required!')\r\n        .min(6, 'Username must be at least 6 characters!')\r\n        .max(18, `Username must be less than 18 characters!`)\r\n        .matches(/^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/, 'Username is not valid!'),\r\n    email: yup.string()\r\n        .required('Email is required!')\r\n        .email('Email is not valid!'),\r\n    password: yup.string()\r\n        .required('Password is required!')\r\n        .min(6, 'Password must be at least 6 characters!'),\r\n    confirmPassword: yup.string()\r\n        .required('Confirm Password is required!')\r\n        .oneOf([yup.ref('password')], 'Passwords must match!')\r\n\r\n});\r\n\r\ninterface IFormValues {\r\n    username: string;\r\n    email: string;\r\n    password: string;\r\n    confirmPassword: string;\r\n}\r\n\r\ninterface IRegisterProps { }\r\n\r\nconst Register: React.FC<IRegisterProps> = () => {\r\n\r\n    const { dispatchNotification } = useNotificationStore();\r\n    const { dispatchIsLoading } = useLoaderBannerStore();\r\n\r\n    const {\r\n        titleAnimation,\r\n        pwFieldAnimation,\r\n        subTitleAnimation,\r\n        titleIconAnimation,\r\n        emailFieldAnimation,\r\n        usernameFieldAnimation,\r\n        confirmPWFieldAnimation,\r\n        registerButtonAnimation,\r\n    } = useAnimation();\r\n\r\n    const formController = useFormik<IFormValues>({\r\n        initialValues: {\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n        },\r\n        onSubmit: ({ username, email, password, confirmPassword }) => {\r\n            dispatchNotification({\r\n                type: NotificationActions.ADD,\r\n                payload: {\r\n                    id: uuid(),\r\n                    timeStamp: Date.now(),\r\n                    type: NotificationType.Success,\r\n                    message: 'Form submitted!! :)',\r\n                }\r\n            });\r\n            formController.resetForm();\r\n        },\r\n        validationSchema,\r\n    });\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (!formController.isSubmitting && !formController.isValid) {\r\n            for (const key in formController.errors) {\r\n                if (!!formController.errors[key]) {\r\n                    setTimeout(() => {\r\n                        dispatchNotification({\r\n                            type: NotificationActions.ADD,\r\n                            payload: {\r\n                                id: uuid(),\r\n                                timeStamp: Date.now(),\r\n                                type: NotificationType.Danger,\r\n                                message: formController.errors[key] as string,\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [formController.isSubmitting]);\r\n\r\n    const isValidatingPrevious = usePrevious(formController.isValidating);\r\n\r\n    React.useEffect(() => {\r\n        if (formController.isValidating) {\r\n            dispatchIsLoading({ type: LoaderBannerActions.START, payload: { isLoading: true, text: 'Logging in...' } });\r\n        }\r\n        else if (!formController.isValidating && isValidatingPrevious) {\r\n            dispatchIsLoading({ type: LoaderBannerActions.STOP, payload: { isLoading: false } });\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [formController.isValidating]);\r\n\r\n\r\n    const AH1 = animated(H1);\r\n    const ASubTitle = animated(SubTitle);\r\n    const ATitleIcon = animated(TitleIcon);\r\n\r\n    return (\r\n        <RegisterContainer>\r\n            <TitleContainer>\r\n                <AH1 style={{ opacity: titleAnimation }}>{'great idea'}</AH1>\r\n                <ATitleIcon style={{ transform: titleIconAnimation }}>\r\n                    <FontAwesomeIcon icon={faUserPlus} style={{ width: '100%', height: '100%' }} />\r\n                </ATitleIcon>\r\n            </TitleContainer>\r\n            <ASubTitle style={{ transform: subTitleAnimation }}>{'register now'}</ASubTitle>\r\n            <Input\r\n                name={'username'}\r\n                placeholder={'username'}\r\n                value={formController.values.username}\r\n                onChange={formController.handleChange}\r\n                style={{ transform: usernameFieldAnimation }}\r\n                isValid={!!(formController.touched.username && !formController.errors.username)}\r\n                isInvalid={!!(formController.touched.username && !!formController.errors.username)}\r\n            />\r\n            <Input\r\n                name={'email'}\r\n                placeholder={'email'}\r\n                value={formController.values.email}\r\n                onChange={formController.handleChange}\r\n                style={{ transform: emailFieldAnimation }}\r\n                isValid={!!(formController.touched.email && !formController.errors.email)}\r\n                isInvalid={!!(formController.touched.email && !!formController.errors.email)}\r\n            />\r\n            <PasswordInput\r\n                name={'password'}\r\n                placeholder={'password'}\r\n                value={formController.values.password}\r\n                onChange={formController.handleChange}\r\n                style={{ transform: pwFieldAnimation }}\r\n                isValid={!!(formController.touched.password && !formController.errors.password)}\r\n                isInvalid={!!(formController.touched.password && !!formController.errors.password)}\r\n            />\r\n            <PasswordInput\r\n                name={'confirmPassword'}\r\n                placeholder={'confirm password'}\r\n                onChange={formController.handleChange}\r\n                value={formController.values.confirmPassword}\r\n                style={{ transform: confirmPWFieldAnimation }}\r\n                isValid={!!(formController.touched.confirmPassword && !formController.errors.confirmPassword)}\r\n                isInvalid={!!(formController.touched.confirmPassword && !!formController.errors.confirmPassword)}\r\n            />\r\n            <Button\r\n                variant={'primary'}\r\n                onClick={formController.handleSubmit}\r\n                style={{ transform: registerButtonAnimation }}\r\n            >\r\n                {'register'}\r\n            </Button>\r\n        </RegisterContainer>\r\n    );\r\n}\r\n\r\nexport default Register;","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\n\r\nexport const AppContainer = styled.div`\r\n    position: relative;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-color: ${theme.dark};\r\n    background-image: linear-gradient(135deg, rgba(48,48,48,1) 0%, rgba(255,255,255,.05) 100%);\r\n`;\r\n\r\nexport const BottomCircle = styled.div`\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: -50vh;\r\n    width: 100vh;\r\n    height: 100vh;\r\n    border-radius: 50%;\r\n    background-color: ${theme.darker06};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    @media (min-width: 700px) {\r\n        width: 900px;\r\n        height: 900px;\r\n        bottom: -450px;\r\n    }\r\n`;\r\n\r\nexport const TopCircle = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: -50vh;\r\n    width: 100vh;\r\n    height: 100vh;\r\n    border-radius: 50%;\r\n    background-color: ${theme.darker06};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    @media (min-width: 700px) {\r\n        width: 900px;\r\n        height: 900px;\r\n        bottom: -450px;\r\n    }\r\n`;\r\n\r\nexport const InnerCircle = styled.div`\r\n    width: 70vh;\r\n    height: 70vh;\r\n    border-radius: 50%;\r\n    background-color: ${theme.dark};\r\n\r\n    @media (min-width: 700px) {\r\n        width: 600px;\r\n        height: 600px;\r\n    }\r\n`;","import * as React from 'react';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom';\r\nimport { Login, Home, Register, Welcome } from '../../screens';\r\nimport { AuthenticatedRoute, Notification, LoaderBanner } from '../';\r\nimport { AppContainer, BottomCircle, InnerCircle, TopCircle } from './styles';\r\n\r\ninterface IAppProps { }\r\n\r\nconst App: React.FC<IAppProps> = () => {\r\n\r\n    return (\r\n        <AppContainer>\r\n            <LoaderBanner />\r\n            <Notification />\r\n            <TopCircle>\r\n                <InnerCircle />\r\n            </TopCircle>\r\n            <BottomCircle>\r\n                <InnerCircle />\r\n            </BottomCircle>\r\n            <HashRouter basename=\"/\">\r\n                <Switch>\r\n                    <Route exact={true} path={'/login'} render={() => <Login />} />\r\n                    <Route exact={true} path={'/welcome'} render={() => <Welcome />} />\r\n                    <Route exact={true} path={'/register'} render={() => <Register />} />\r\n                    <AuthenticatedRoute exact={true} path={'/'} screen={<Home />} userLoggedIn={false} />\r\n                </Switch>\r\n            </HashRouter>\r\n        </AppContainer>\r\n    );\r\n}\r\n\r\n\r\nexport default App;","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\nimport { NotificationType } from '../../interfaces/notification.interface';\r\n\r\ninterface INotificationContainerProps {\r\n    type: NotificationType;\r\n}\r\n\r\nconst NotificationContainer = styled.div<INotificationContainerProps>`\r\n    position: absolute;\r\n    z-index: 100;\r\n    top: .5rem;\r\n    left: 50%;\r\n    width: 94vw;\r\n    height: 3.5rem;\r\n    background: ${({ type }) => type === NotificationType.Danger\r\n        ? theme.dangerBackgroundColor\r\n        : type === NotificationType.Success\r\n            ? theme.successBackgroundColor\r\n            : theme.warningBackgroundColor};\r\n    border-radius: 5px;\r\n    border: 2px solid;\r\n    border-color: ${({ type }) => type === NotificationType.Danger\r\n        ? theme.dangerBorderColor\r\n        : type === NotificationType.Success\r\n            ? theme.successBorderColor\r\n            : theme.warningBorderColor};\r\n    color: ${({ type }) => type === NotificationType.Danger\r\n        ? theme.dangerFontColor\r\n        : type === NotificationType.Success\r\n            ? theme.successFontColor\r\n            : theme.warningFontColor};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n`;\r\n\r\nconst NotificationText = styled.p<{ strLenght: number }>`\r\n    font-size: ${({ strLenght }) => strLenght > 27 ? '.75rem' : '1rem'};\r\n`;\r\n\r\nconst IconContainer = styled.div<INotificationContainerProps>`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 1.8rem;\r\n    height: 1.8rem;\r\n    border: 2px solid;\r\n    border-color: ${({ type }) => type === NotificationType.Danger\r\n        ? theme.dangerFontColor\r\n        : type === NotificationType.Success\r\n            ? theme.successFontColor\r\n            : theme.warningFontColor};\r\n    border-radius: 50%;\r\n    background: transparent;\r\n    color: ${({ type }) => type === NotificationType.Danger\r\n        ? theme.dangerFontColor\r\n        : type === NotificationType.Success\r\n            ? theme.successFontColor\r\n            : theme.warningFontColor};\r\n    margin: 0 .5rem 0 .3rem;\r\n`;\r\n\r\nconst DeleteIconContainer = styled.button`\r\n    all: unset;\r\n    cursor: pointer;\r\n    position: absolute;\r\n    top: 50%;\r\n    right: 1px;\r\n    border-radius: 50%;\r\n    transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst AIconContainer = animated(IconContainer);\r\nconst ANotificationText = animated(NotificationText);\r\nconst ADeleteIconContainer = animated(DeleteIconContainer);\r\nconst ANotificationContainer = animated(NotificationContainer);\r\n\r\nexport {\r\n    IconContainer,\r\n    AIconContainer,\r\n    NotificationText,\r\n    ANotificationText,\r\n    DeleteIconContainer,\r\n    ADeleteIconContainer,\r\n    NotificationContainer,\r\n    ANotificationContainer,\r\n};","import * as React from 'react';\r\nimport { usePrevious } from '../../utils';\r\nimport { useNotificationStore } from '../../stores';\r\nimport { config, useTransition } from 'react-spring';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { NotificationType } from '../../interfaces/notification.interface';\r\nimport { NotificationActions } from '../../stores/notification/notification.actions';\r\nimport { faCheck, faInfo, faExclamation, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { ANotificationContainer, NotificationText, AIconContainer, DeleteIconContainer } from './styles';\r\n\r\nconst NOTIFICATIONS_MAX_COUNT: number = 4;\r\n\r\ninterface INotificationProps { }\r\n\r\nconst Notification: React.FC<INotificationProps> = () => {\r\n\r\n    const { notifications, dispatchNotification } = useNotificationStore();\r\n\r\n    const notificationAnimations = useTransition(\r\n        (notifications.map((n, index) => (index < NOTIFICATIONS_MAX_COUNT) ? ({ ...n, y: index * 4 }) : null).filter(n => !!n) as any[]),\r\n        n => n.id,\r\n        {\r\n            from: { opacity: 0, transform: `translate(-50%, -4rem)` },\r\n            leave: { opacity: 0 },\r\n            enter: ({ y }) => ({ opacity: 1, transform: `translate(-50%, ${y}rem)` }),\r\n            update: ({ y }) => ({ opacity: 1, transform: `translate(-50%, ${y}rem)` }),\r\n            config: { ...config.default, friction: 16 }\r\n        }\r\n    );\r\n\r\n    const prevNotifications = usePrevious(notifications);\r\n\r\n    React.useEffect(() => {\r\n        if ((prevNotifications as any[])?.length < notifications?.length) {\r\n            const newNotification = notifications.find(noti => prevNotifications?.map(prevNoti => prevNoti.id).indexOf(noti.id) === -1);\r\n            setTimeout(() => dispatchNotification({ type: NotificationActions.DELETE, payload: newNotification }), 3500);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [notifications]);\r\n\r\n    return (\r\n        <>\r\n            {notificationAnimations.map(({ item: notification, props }) => {\r\n                const { opacity, transform } = props;\r\n                return (\r\n                    <ANotificationContainer key={notification.id} type={notification.type} style={{ transform, opacity }}>\r\n                        <AIconContainer type={notification.type}>\r\n                            <FontAwesomeIcon\r\n                                icon={\r\n                                    notification.type === NotificationType.Danger\r\n                                        ? faExclamation\r\n                                        : notification.type === NotificationType.Warning\r\n                                            ? faInfo\r\n                                            : faCheck\r\n                                }\r\n                            />\r\n                        </AIconContainer>\r\n                        <NotificationText strLenght={notification.message?.length}>{notification.message}</NotificationText>\r\n                        <DeleteIconContainer>\r\n                            <FontAwesomeIcon\r\n                                size={'lg'}\r\n                                icon={faTimes}\r\n                                onClick={() => dispatchNotification({\r\n                                    type: NotificationActions.DELETE,\r\n                                    payload: notification\r\n                                })}\r\n                            />\r\n                        </DeleteIconContainer>\r\n                    </ANotificationContainer>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Notification;","import styled, { keyframes } from 'styled-components';\r\nimport { animated } from 'react-spring';\r\nimport { theme } from '../../utils';\r\n\r\nconst Banner = styled.div`\r\n    position: absolute;\r\n    z-index: 100;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background: transparent;\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: flex-start;\r\n`;\r\n\r\nconst LoaderContainer = styled.div`\r\n    position: relative;\r\n    width: 1.8rem;\r\n    height: 1.8rem;\r\n    margin: .5rem;\r\n`;\r\n\r\nconst Text = styled.p`\r\n    height: 1.8rem;\r\n    font-weight: 600;\r\n    font-size: 1.2rem;\r\n    text-transform: uppercase;\r\n    color: rgba(255,255,255,.3);\r\n    margin-bottom: .25rem;\r\n`;\r\n\r\nconst loaderAnimation = keyframes`\r\n    from {\r\n        transform: rotate(0deg) translate(-50%, -50%);\r\n    }\r\n    to {\r\n        transform: rotate(360deg) translate(-50%, -50%);\r\n    }\r\n`;\r\n\r\nconst Loader = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: 1.8rem;\r\n    height: 1.8rem;\r\n    border-radius: 5px;\r\n    transform-origin: top left;\r\n    background: rgba(255,255,255,.3);\r\n    animation: ${loaderAnimation} 1s ease infinite;\r\n`;\r\n\r\nconst innerLoaderAnimation = keyframes`\r\n    0% {\r\n        transform: rotate(0deg) translate(-50%, -50%);\r\n    }\r\n    100% {\r\n        transform: rotate(-360deg) translate(-50%, -50%);\r\n    }\r\n`;\r\n\r\nconst InnerLoader = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: 1.2rem;\r\n    height: 1.2rem;\r\n    border-radius: 5px;\r\n    transform-origin: top left;\r\n    background: ${theme.primaryColor};\r\n    animation: ${innerLoaderAnimation} 1s ease infinite;\r\n`;\r\n\r\nconst ABanner = animated(Banner);\r\nconst ALoader = animated(Loader);\r\nconst AInnerLoader = animated(InnerLoader);\r\nconst ALoaderContainer = animated(LoaderContainer);\r\n\r\nexport {\r\n    Text,\r\n    Banner,\r\n    ABanner,\r\n    Loader,\r\n    ALoader,\r\n    InnerLoader,\r\n    AInnerLoader,\r\n    LoaderContainer,\r\n    ALoaderContainer,\r\n};","import * as React from 'react';\r\nimport { useSpring } from 'react-spring';\r\nimport { useLoaderBannerStore } from '../../stores';\r\nimport { Banner, Loader, InnerLoader, ALoaderContainer, Text } from './styles';\r\n\r\ninterface ILoaderBannerProps { }\r\n\r\nconst LoaderBanner: React.FC<ILoaderBannerProps> = () => {\r\n\r\n    const { opacity } = useSpring({\r\n        opacity: 1,\r\n        from: { opacity: 0 },\r\n    });\r\n\r\n    const { loaderBanner } = useLoaderBannerStore();\r\n\r\n    if (loaderBanner.isLoading) {\r\n        return (\r\n            <Banner>\r\n                <ALoaderContainer stlye={{ opacity }}>\r\n                    <Loader />\r\n                    <InnerLoader />\r\n                </ALoaderContainer>\r\n                <Text>{loaderBanner.text}</Text>\r\n            </Banner>\r\n        );\r\n    }\r\n    else return null;\r\n};\r\n\r\nexport default LoaderBanner;","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\nexport interface IInputProps {\r\n    isValid?: boolean;\r\n    isInvalid?: boolean;\r\n}\r\n\r\nconst Input = styled.input<IInputProps>`\r\n    all: unset;\r\n    position: relative;\r\n    box-sizing: border-box;\r\n    padding: .5rem;\r\n    padding-left: 1rem;\r\n    padding-right: ${({ type }) => type === 'password' ? '3rem' : '1rem'};\r\n    width: 100%;\r\n    height: 5.5vh;\r\n    color: ${theme.defaultFontColor};\r\n    margin-bottom: .7rem;\r\n    background-color: ${theme.defaultColor};\r\n    border: 1px solid;\r\n    border-color: ${({ isValid, isInvalid }) => isValid ? theme.successColor : isInvalid ? theme.dangerColor : 'transparent'};\r\n    \r\n    ::placeholder {\r\n        text-transform: uppercase;\r\n        color: ${theme.defaultFontColor};\r\n        letter-spacing: 1px;\r\n    }\r\n`;\r\n\r\nexport default animated(Input);","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\n\r\nexport const PasswordInputContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n`;\r\n\r\nexport const EyeIconContainer = styled.div`\r\n    z-index: 10;\r\n    position: absolute;\r\n    height: calc(100% - .7rem);\r\n    width: 3rem;\r\n    top: 0;\r\n    right: 0;\r\n    color: ${theme.defaultFontColor};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;","import * as React from 'react';\r\nimport { animated } from 'react-spring';\r\nimport Input, { IInputProps } from '../styles/input';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { EyeIconContainer, PasswordInputContainer } from './styles';\r\nimport { faEye, faEyeSlash } from '@fortawesome/free-regular-svg-icons';\r\n\r\ninterface IPasswordInput { }\r\n\r\nconst PasswordInput: React.FC<IPasswordInput & React.InputHTMLAttributes<HTMLInputElement> & IInputProps> = ({ style, ...rest }) => {\r\n\r\n    const [showPW, setShowPW] = React.useState<boolean>(false);\r\n\r\n    const inputRef = React.useRef<HTMLInputElement>();\r\n\r\n    const updateShowPW = (show: boolean) => {\r\n        inputRef.current?.focus();\r\n        setShowPW(show);\r\n    }\r\n\r\n    return (\r\n        <PasswordInputContainer style={{ ...style }}>\r\n            <EyeIconContainer>\r\n                {!showPW\r\n                    ? <FontAwesomeIcon\r\n                        icon={faEye}\r\n                        onClick={e => updateShowPW(true)}\r\n                        style={{ width: '1.5rem', height: '1.5rem' }}\r\n                    />\r\n                    : <FontAwesomeIcon\r\n                        icon={faEyeSlash}\r\n                        onClick={e => updateShowPW(false)}\r\n                        style={{ width: '1.5rem', height: '1.5rem' }}\r\n                    />\r\n                }\r\n            </EyeIconContainer>\r\n            <Input ref={inputRef} type={showPW ? 'text' : 'password'} {...rest} />\r\n        </PasswordInputContainer>\r\n    );\r\n}\r\n\r\nexport default animated(PasswordInput);","import * as React from 'react';\r\nimport { Route, RouteProps, Redirect } from 'react-router-dom';\r\n\r\ninterface IAuthenticatedRouteProps {\r\n    userLoggedIn: boolean;\r\n    screen: JSX.Element;\r\n}\r\n\r\nconst AuthenticatedRoute: React.FC<IAuthenticatedRouteProps & RouteProps> = ({ userLoggedIn, screen, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={() => userLoggedIn\r\n                ? screen\r\n                : <Redirect to={'/welcome'} />\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default AuthenticatedRoute;\r\n","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\ninterface IButtonProps {\r\n    variant: ('default' | 'primary');\r\n}\r\n\r\nconst Button = styled.button<IButtonProps>`\r\n    all: unset;\r\n    box-sizing: border-box;\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 5.5vh;\r\n    background-color: ${({ variant }) => variant === 'default' ? theme.defaultColor : theme.primaryColor};\r\n    color: ${theme.defaultFontColor};\r\n    text-transform: uppercase;\r\n    margin-bottom: 1.2vh;\r\n    font-weight: 700;\r\n    box-shadow: ${({ variant }) => variant === 'default' ? 'none' : '4px 4px 20px rgba(0,0,0,0.6)'}\r\n`;\r\n\r\nexport default animated(Button);","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\n\r\nconst SocialMediaButton = styled.button`\r\n    all: unset;\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 3rem;\r\n    height: 3rem;\r\n    border: 3px solid ${theme.defaultFontColor};\r\n    border-radius: 50%;\r\n    background: transparent;\r\n    color: ${theme.defaultFontColor};\r\n    margin: 0 .75rem;\r\n`;\r\n\r\nexport default SocialMediaButton;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components';\nimport * as serviceWorker from './serviceWorker';\nimport { NotificationStoreProvider, LoaderBannerStoreProvider } from './stores';\n\nReactDOM.render(\n    <LoaderBannerStoreProvider>\n        <NotificationStoreProvider>\n            <App />\n        </NotificationStoreProvider>\n    </LoaderBannerStoreProvider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}