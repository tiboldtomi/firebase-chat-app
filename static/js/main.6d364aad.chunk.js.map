{"version":3,"sources":["utils/theme.ts","constants/firebase-config.ts","utils/use-firebase.ts","utils/use-previous.ts","screens/home/styles.ts","stores/notification/notification.actions.ts","stores/auth/index.tsx","stores/notification/notification.reducer.ts","stores/loader-banner/loader-banner.actions.ts","stores/notification/index.tsx","stores/loader-banner/loader-banner.reducer.ts","interfaces/notification.interface.ts","stores/loader-banner/index.tsx","screens/home/index.tsx","screens/login/hooks/use-animation.ts","screens/welcome/styles.ts","screens/login/styles.ts","screens/login/index.tsx","screens/welcome/hooks/use-animation.ts","screens/welcome/index.tsx","screens/register/hooks/use-animation.ts","screens/register/styles.ts","screens/register/index.tsx","components/app/styles.ts","components/app/index.tsx","components/notification/styles.ts","components/notification/index.tsx","components/loader-banner/styles.ts","components/loader-banner/index.tsx","components/styles/input.ts","components/password-input/styles.ts","components/password-input/index.tsx","components/authenticated-route/index.tsx","components/styles/button.ts","components/styles/social-media-button.ts","serviceWorker.ts","index.tsx"],"names":["theme","vw","document","documentElement","clientWidth","vh","clientHeight","fontSize","defaultFontColor","primaryFontColor","successFontColor","dangerFontColor","warningFontColor","primaryColor","defaultColor","dark","dark06","darker","darker06","successColor","dangerColor","successBorderColor","dangerBorderColor","warningBorderColor","successBackgroundColor","dangerBackgroundColor","warningBackgroundColor","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","useFirebase","initializeApp","usePrevious","value","ref","React","current","NotificationActions","_HomeContainer","styled","div","_TitleContainer","_H1","h1","_TitleIcon","_SubTitle","h2","H1","animated","HomeContainer","AuthContext","currentUser","AuthStoreProvider","children","setCurrentUser","auth","onAuthStateChanged","user","Provider","useAuthStore","LoaderBannerActions","notificationReducer","state","action","type","ADD","payload","RESET","DELETE","filter","noti","id","Error","initialState","NotificationStoreContext","notifications","dispatchNotification","NotificationStoreProvider","useNotificationStore","NotificationType","loaderBannerReducer","START","isLoading","text","STOP","undefined","LoaderBannerContext","loaderBanner","dispatchIsLoading","LoaderBannerStoreProvider","useLoaderBannerStore","Home","variant","onClick","signOut","then","uuid","timeStamp","Date","now","Success","message","useAnimation","titleAnimation","useSpring","opacity","from","delay","subTitleAnimation","transform","emailFieldAnimation","pwFieldAnimation","loginButtonAnimation","socialMediaAnimation","titleIconAnimation","_WelcomeContainer","_WelcomeCircle","_ControlsContainer","_P","p","_SocialMediaContainer","P","TitleIcon","WelcomeCircle","TitleContainer","WelcomeContainer","ControlsContainer","SocialMediaContainer","_LoginContainer","SubTitle","LoginContainer","validationSchema","yup","shape","email","required","password","min","Login","formController","useFormik","initialValues","onSubmit","signInWithEmailAndPassword","resetForm","catch","Danger","isSubmitting","isValid","key","errors","setTimeout","loginWithSocialMedia","platform","Warning","to","style","icon","faSignInAlt","width","height","name","placeholder","values","onChange","handleChange","touched","isInvalid","handleSubmit","faFacebookF","size","faGoogle","faGithub","defaultButtonTransform","primaryButtonTransform","socialMediaContainerTransform","titleIconScale","Welcome","history","useHistory","set","moveTo","path","push","faTrophy","usernameFieldAnimation","confirmPWFieldAnimation","registerButtonAnimation","RegisterContainer","username","max","matches","confirmPassword","oneOf","Register","faUserPlus","AppContainer","BottomCircle","TopCircle","InnerCircle","App","basename","exact","render","screen","NotificationContainer","NotificationText","strLenght","IconContainer","DeleteIconContainer","button","AIconContainer","ANotificationContainer","Notification","notificationAnimations","useTransition","map","n","index","y","leave","enter","update","config","default","friction","prevNotifications","length","newNotification","find","prevNoti","indexOf","notification","item","props","faExclamation","faInfo","faCheck","faTimes","Banner","LoaderContainer","Text","loaderAnimation","keyframes","Loader","innerLoaderAnimation","InnerLoader","ALoaderContainer","LoaderBanner","stlye","Input","input","PasswordInputContainer","EyeIconContainer","label","rest","showPW","setShowPW","htmlFor","faEyeSlash","faEye","AuthenticatedRoute","Button","SocialMediaButton","Boolean","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6d364aad.chunk.js","sourcesContent":["const theme = {\r\n    vw: document.documentElement.clientWidth,\r\n    vh: document.documentElement.clientHeight,\r\n\r\n    fontSize: '16px',\r\n    defaultFontColor: '#fff',\r\n    primaryFontColor: '#0e9aa7',\r\n    successFontColor: '#155724',\r\n    dangerFontColor: '#721c24',\r\n    warningFontColor: '#856404',\r\n\r\n    primaryColor: '#3da4ab',\r\n    defaultColor: 'rgba(255,255,255,0.15)',\r\n    dark: 'rgba(48,48,48,1)',\r\n    dark06: 'rgba(48,48,48,0.6)',\r\n    darker: 'rgba(30,30,30,1)',\r\n    darker06: 'rgba(30,30,30,0.6)',\r\n    successColor: '#28a745',\r\n    dangerColor: '#dc3545',\r\n\r\n    // Notification theme\r\n    successBorderColor: '#c3e6cb',\r\n    dangerBorderColor: '#f5c6cb',\r\n    warningBorderColor: '#ffeeba',\r\n    successBackgroundColor: '#d4edda',\r\n    dangerBackgroundColor: '#f8d7da',\r\n    warningBackgroundColor: '#fff3cd',\r\n};\r\n\r\nexport default theme;","const firebaseConfig = {\r\n    apiKey: \"AIzaSyBs1gAvHKjBf9-qaZCkdstMTD0kRkH2QKU\",\r\n    authDomain: \"homiescup-89859.firebaseapp.com\",\r\n    databaseURL: \"https://homiescup-89859.firebaseio.com\",\r\n    projectId: \"homiescup-89859\",\r\n    storageBucket: \"homiescup-89859.appspot.com\",\r\n    messagingSenderId: \"300391296614\",\r\n    appId: \"1:300391296614:web:a5b1fb5a473994912887a7\",\r\n    measurementId: \"G-SEM8Q31KR9\"\r\n};\r\n\r\nexport default firebaseConfig;","import { initializeApp } from 'firebase';\r\nimport { firebaseConfig } from '../constants';\r\n\r\nconst useFirebase = initializeApp(firebaseConfig);\r\n\r\nexport default useFirebase;","import * as React from 'react';\r\n\r\nconst usePrevious = <T extends any>(value: T) => {\r\n    const ref = React.useRef<T>();\r\n    React.useEffect(() => {\r\n        ref.current = value;\r\n    }, [value]);\r\n    return ref.current;\r\n};\r\n\r\nexport default usePrevious;","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\nconst _HomeContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 15vh 10vw 1vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n`;\r\n\r\nconst _TitleContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 15vh;\r\n`;\r\n\r\nconst _H1 = styled.h1`\r\n    font-size: 1.6rem;\r\n    color: ${theme.defaultFontColor};\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    margin-bottom: 1rem;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _TitleIcon = styled.div`\r\n    height: 4rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: ${theme.defaultFontColor};\r\n`;\r\n\r\nconst _SubTitle = styled.h2`\r\n    font-size: 1.6rem;\r\n    color: ${theme.primaryFontColor};\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    margin-bottom: 1rem;\r\n    font-weight: 600;\r\n`;\r\n\r\nexport const H1 = animated(_H1);\r\nexport const SubTitle = animated(_SubTitle);\r\nexport const TitleIcon = animated(_TitleIcon);\r\nexport const HomeContainer = animated(_HomeContainer);\r\nexport const TitleContainer = animated(_TitleContainer);","export enum NotificationActions {\r\n    ADD = 'ADD',\r\n    RESET = 'RESET',\r\n    DELETE = 'DELETE',\r\n};","import * as React from 'react';\r\nimport { User } from 'firebase';\r\nimport { useFirebase } from '../../utils';\r\n\r\nexport const AuthContext = React.createContext<{ currentUser: User | null }>({ currentUser: null });\r\n\r\nexport const AuthStoreProvider: React.FC<{}> = ({ children }) => {\r\n\r\n    const [currentUser, setCurrentUser] = React.useState<User | null>(null);\r\n\r\n    React.useEffect(() => {\r\n        useFirebase.auth().onAuthStateChanged(user => setCurrentUser(user));\r\n    }, []);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ currentUser }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useAuthStore = () => React.useContext(AuthContext);","import { IAction } from '../../interfaces/action.interface';\r\nimport { NotificationActions } from './notification.actions';\r\nimport { INotification } from '../../interfaces/notification.interface';\r\n\r\nexport const notificationReducer = (state: INotification[], action: IAction<NotificationActions, INotification | undefined>): INotification[] => {\r\n    switch (action.type) {\r\n        case NotificationActions.ADD:\r\n            if (action.payload) {\r\n                return [\r\n                    action.payload,\r\n                    ...state\r\n                ]\r\n            }\r\n            else return [...state];\r\n\r\n        case NotificationActions.RESET:\r\n            return [];\r\n\r\n        case NotificationActions.DELETE:\r\n            return [\r\n                ...state.filter(noti => noti.id !== action.payload?.id)\r\n            ];\r\n\r\n        default:\r\n            throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n}","export enum LoaderBannerActions {\r\n    STOP = 'STOP',\r\n    START = 'START',\r\n};","import * as React from 'react';\r\nimport { notificationReducer } from './notification.reducer';\r\nimport { INotification, INotificationContext } from '../../interfaces/notification.interface';\r\n\r\nconst initialState: INotification[] = [];\r\n\r\nconst NotificationStoreContext = React.createContext<INotificationContext>({ notifications: initialState, dispatchNotification: () => { } });\r\n\r\nexport const NotificationStoreProvider: React.FC<{}> = ({ children }) => {\r\n    const [notifications, dispatchNotification] = React.useReducer(notificationReducer, initialState);\r\n\r\n    return (\r\n        <NotificationStoreContext.Provider value={{ notifications, dispatchNotification }}>\r\n            {children}\r\n        </NotificationStoreContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useNotificationStore = () => React.useContext(NotificationStoreContext);\r\n\r\nexport * from './notification.actions';","import { IAction } from '../../interfaces/action.interface';\r\nimport { LoaderBannerActions } from './loader-banner.actions';\r\nimport { ILoaderBanner } from '../../interfaces/loader-banner.interface';\r\n\r\nexport const loaderBannerReducer = (state: ILoaderBanner, action: IAction<LoaderBannerActions, ILoaderBanner>): ILoaderBanner => {\r\n    switch (action.type) {\r\n        case LoaderBannerActions.START:\r\n            return {\r\n                isLoading: true,\r\n                text: action.payload.text || 'Loading...'\r\n            };\r\n\r\n        case LoaderBannerActions.STOP:\r\n            return {\r\n                isLoading: false,\r\n            }\r\n\r\n        default:\r\n            throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n}","import * as React from 'react';\r\nimport { IAction } from './action.interface';\r\nimport { NotificationActions } from '../stores/notification/notification.actions';\r\n\r\nexport enum NotificationType {\r\n    Danger = 'Danger',\r\n    Warning = 'Warning',\r\n    Success = 'Success',\r\n}\r\n\r\nexport interface INotification {\r\n    id: string;\r\n    message: string;\r\n    timeStamp: number;\r\n    type: NotificationType;\r\n}\r\n\r\nexport interface INotificationContext {\r\n    notifications: INotification[];\r\n    dispatchNotification: React.Dispatch<IAction<NotificationActions, INotification | undefined>>;\r\n}","import * as React from 'react';\r\nimport { loaderBannerReducer } from './loader-banner.reducer';\r\nimport { ILoaderBannerContext, ILoaderBanner } from '../../interfaces/loader-banner.interface';\r\n\r\nconst initialState: ILoaderBanner = {\r\n    text: undefined,\r\n    isLoading: false,\r\n};\r\n\r\nconst LoaderBannerContext = React.createContext<ILoaderBannerContext>({ loaderBanner: initialState, dispatchIsLoading: () => { } });\r\n\r\nexport const LoaderBannerStoreProvider: React.FC<{}> = ({ children }) => {\r\n    const [loaderBanner, dispatchIsLoading] = React.useReducer(loaderBannerReducer, initialState);\r\n\r\n    return (\r\n        <LoaderBannerContext.Provider value={{ loaderBanner, dispatchIsLoading }}>\r\n            {children}\r\n        </LoaderBannerContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useLoaderBannerStore = () => React.useContext(LoaderBannerContext);\r\n\r\nexport * from './loader-banner.actions';","import { uuid } from 'uuidv4';\r\nimport * as React from 'react';\r\nimport { useFirebase } from '../../utils';\r\nimport { Button } from '../../components';\r\nimport { HomeContainer, H1 } from './styles';\r\nimport { useNotificationStore, NotificationActions } from '../../stores';\r\nimport { NotificationType } from '../../interfaces/notification.interface';\r\n\r\ninterface IHomeProps { }\r\n\r\nconst Home: React.FC<IHomeProps> = () => {\r\n\r\n    const { dispatchNotification } = useNotificationStore();\r\n\r\n    const logout = () => {\r\n        useFirebase.auth().signOut()\r\n            .then(() => {\r\n                dispatchNotification({\r\n                    type: NotificationActions.ADD,\r\n                    payload: {\r\n                        id: uuid(),\r\n                        timeStamp: Date.now(),\r\n                        type: NotificationType.Success,\r\n                        message: 'You have been successfully logged out!'\r\n                    }\r\n                });\r\n            });\r\n    }\r\n\r\n    return (\r\n        <HomeContainer>\r\n            <H1>{'Welcome!'}</H1>\r\n            <Button\r\n                variant={'default'}\r\n                onClick={() => logout()}\r\n            >\r\n                {'Sign out'}\r\n            </Button>\r\n        </HomeContainer>\r\n    );\r\n}\r\n\r\nexport default Home;","import { useSpring } from 'react-spring';\r\n\r\nconst useAnimation = () => {\r\n    const { opacity: titleAnimation } = useSpring({\r\n        opacity: 1,\r\n        from: { opacity: 0 },\r\n        delay: 0,\r\n    });\r\n    const { transform: subTitleAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 50\r\n    });\r\n    const { transform: emailFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 100\r\n    });\r\n    const { transform: pwFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 150\r\n    });\r\n    const { transform: loginButtonAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 200\r\n    });\r\n    const { transform: socialMediaAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 250\r\n    });\r\n    const { transform: titleIconAnimation } = useSpring({\r\n        transform: 'scale(1)',\r\n        from: { transform: 'scale(0)' },\r\n        delay: 300,\r\n    });\r\n\r\n    return {\r\n        titleAnimation,\r\n        pwFieldAnimation,\r\n        subTitleAnimation,\r\n        titleIconAnimation,\r\n        emailFieldAnimation,\r\n        loginButtonAnimation,\r\n        socialMediaAnimation,\r\n    };\r\n}\r\n\r\nexport default useAnimation;","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\nconst _WelcomeContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: flex-end;\r\n`;\r\n\r\nconst _WelcomeCircle = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    width: ${theme.vw > theme.vh ? '100vw' : '100vh'};\r\n    height: ${theme.vw > theme.vh ? '100vw' : '100vh'};\r\n    padding-bottom: 5%;\r\n    border-radius: 50%;\r\n    box-shadow: inset -1px -1px 10px rgba(0,0,0,0.6), 5px 5px 25px rgba(0,0,0,0.6), -5px -5px 25px rgba(0,0,0,0.6);\r\n    background-color: ${theme.primaryColor};\r\n    background-image: linear-gradient(rgba(255,255,255,0.4), rgba(255,255,255,0));\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: center;\r\n\r\n    @media (max-width: 700px) {\r\n        padding-bottom: 20%;\r\n    }\r\n`;\r\n\r\nconst _H1 = styled.h1`\r\n    font-size: 3.5rem;\r\n    color: ${theme.defaultFontColor};\r\n    text-align: center;\r\n        letter-spacing: 2px;\r\n        margin-bottom: 2.5vh;\r\n\r\n        @media (max-width: 700px) {\r\n            font-size: 2.5rem;\r\n        }\r\n`;\r\n\r\nconst _TitleContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n`;\r\n\r\nconst _TitleIcon = styled.div`\r\n    height: 5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: ${theme.defaultFontColor};\r\n\r\n    @media (max-width: 700px) {\r\n        height: 5rem;\r\n    }\r\n`;\r\n\r\nconst _ControlsContainer = styled.div`\r\n    width: 100%;\r\n    padding: 0 10vw 10vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nconst _P = styled.p`\r\n    font-size: 0.8rem;\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    color: ${theme.defaultFontColor};\r\n    margin: 1.5rem 0;\r\n    letter-spacing: 1px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _SocialMediaContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const P = animated(_P);\r\nexport const H1 = animated(_H1);\r\nexport const TitleIcon = animated(_TitleIcon);\r\nexport const WelcomeCircle = animated(_WelcomeCircle);\r\nexport const TitleContainer = animated(_TitleContainer);\r\nexport const WelcomeContainer = animated(_WelcomeContainer);\r\nexport const ControlsContainer = animated(_ControlsContainer);\r\nexport const SocialMediaContainer = animated(_SocialMediaContainer);","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\nconst _LoginContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 15vh 10vw 1vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n`;\r\n\r\nconst _TitleContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 15vh;\r\n`;\r\n\r\nconst _H1 = styled.h1`\r\n    font-size: 1.6rem;\r\n    color: ${theme.defaultFontColor};\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    margin-bottom: 1rem;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _TitleIcon = styled.div`\r\n    height: 4rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: ${theme.defaultFontColor};\r\n`;\r\n\r\nconst _SubTitle = styled.h2`\r\n    font-size: 1.6rem;\r\n    color: ${theme.primaryFontColor};\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    margin-bottom: 1rem;\r\n    font-weight: 600;\r\n`;\r\n\r\nexport const H1 = animated(_H1);\r\nexport const SubTitle = animated(_SubTitle);\r\nexport const TitleIcon = animated(_TitleIcon);\r\nexport const TitleContainer = animated(_TitleContainer);\r\nexport const LoginContainer = animated(_LoginContainer);","import * as yup from 'yup';\r\nimport { uuid } from 'uuidv4';\r\nimport * as React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { useAnimation } from './hooks';\r\nimport { useFirebase } from '../../utils';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { SocialMediaContainer, P } from '../welcome/styles';\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { NotificationType } from '../../interfaces/notification.interface';\r\nimport { LoginContainer, H1, SubTitle, TitleIcon, TitleContainer } from './styles';\r\nimport { Button, Input, SocialMediaButton, PasswordInput } from '../../components';\r\nimport { faGoogle, faFacebookF, faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { useNotificationStore, NotificationActions, useLoaderBannerStore, LoaderBannerActions, useAuthStore } from '../../stores';\r\n\r\nconst validationSchema = yup.object().shape({\r\n    email: yup.string()\r\n        .required('Email is required!')\r\n        .email('Email is not valid!'),\r\n    password: yup.string()\r\n        .required('Password is required!')\r\n        .min(6, 'Password must be at least 6 characters!'),\r\n});\r\n\r\ninterface IFormValues {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ninterface ILoginProps { }\r\n\r\nconst Login: React.FC<ILoginProps> = () => {\r\n\r\n    const { currentUser } = useAuthStore();\r\n    const { dispatchIsLoading } = useLoaderBannerStore();\r\n    const { dispatchNotification } = useNotificationStore();\r\n\r\n    const {\r\n        titleAnimation,\r\n        pwFieldAnimation,\r\n        subTitleAnimation,\r\n        titleIconAnimation,\r\n        emailFieldAnimation,\r\n        socialMediaAnimation,\r\n        loginButtonAnimation,\r\n    } = useAnimation();\r\n\r\n    const formController = useFormik<IFormValues>({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n        onSubmit: ({ email, password }) => {\r\n            dispatchIsLoading({ type: LoaderBannerActions.START, payload: { isLoading: true, text: 'Logging in...' } });\r\n            useFirebase\r\n                .auth()\r\n                .signInWithEmailAndPassword(email, password)\r\n                .then(() => {\r\n                    dispatchIsLoading({ type: LoaderBannerActions.STOP, payload: { isLoading: false } });\r\n                    formController.resetForm();\r\n                    dispatchNotification({\r\n                        type: NotificationActions.ADD,\r\n                        payload: {\r\n                            id: uuid(),\r\n                            timeStamp: Date.now(),\r\n                            type: NotificationType.Success,\r\n                            message: 'You have been successfully logged in!'\r\n                        }\r\n                    });\r\n                })\r\n                .catch(({ message }) => {\r\n                    dispatchIsLoading({ type: LoaderBannerActions.STOP, payload: { isLoading: false } });\r\n                    dispatchNotification({\r\n                        type: NotificationActions.ADD,\r\n                        payload: {\r\n                            message,\r\n                            id: uuid(),\r\n                            timeStamp: Date.now(),\r\n                            type: NotificationType.Danger,\r\n                        }\r\n                    });\r\n                });\r\n        },\r\n        validationSchema,\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        if (!formController.isSubmitting && !formController.isValid) {\r\n            for (const key in formController.errors) {\r\n                if (!!formController.errors[key]) {\r\n                    setTimeout(() => {\r\n                        dispatchNotification({\r\n                            type: NotificationActions.ADD,\r\n                            payload: {\r\n                                id: uuid(),\r\n                                timeStamp: Date.now(),\r\n                                type: NotificationType.Danger,\r\n                                message: formController.errors[key] as string,\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [formController.isSubmitting]);\r\n\r\n    const loginWithSocialMedia = (platform: ('Facebook' | 'GitHub' | 'Google')) => {\r\n        setTimeout(() => {\r\n            dispatchNotification({\r\n                type: NotificationActions.ADD,\r\n                payload: {\r\n                    id: uuid(),\r\n                    timeStamp: Date.now(),\r\n                    type: NotificationType.Warning,\r\n                    message: `Login with ${platform} is under development.`,\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    if (!currentUser) {\r\n\r\n        return (\r\n            <LoginContainer>\r\n                <TitleContainer>\r\n                    <H1 style={{ opacity: titleAnimation }}>{'welcome back'}</H1>\r\n                    <TitleIcon style={{ transform: titleIconAnimation }}>\r\n                        <FontAwesomeIcon icon={faSignInAlt} style={{ width: '100%', height: '100%' }} />\r\n                    </TitleIcon>\r\n                </TitleContainer>\r\n                <SubTitle style={{ transform: subTitleAnimation }}>{'login in'}</SubTitle>\r\n                <Input\r\n                    name={'email'}\r\n                    placeholder={'email'}\r\n                    value={formController.values.email}\r\n                    onChange={formController.handleChange}\r\n                    style={{ transform: emailFieldAnimation }}\r\n                    isValid={!!(formController.touched.email && !formController.errors.email)}\r\n                    isInvalid={!!(formController.touched.email && !!formController.errors.email)}\r\n                />\r\n                <PasswordInput\r\n                    name={'password'}\r\n                    placeholder={'password'}\r\n                    value={formController.values.password}\r\n                    onChange={formController.handleChange}\r\n                    style={{ transform: pwFieldAnimation }}\r\n                    isValid={!!(formController.touched.password && !formController.errors.password)}\r\n                    isInvalid={!!(formController.touched.password && !!formController.errors.password)}\r\n                />\r\n                <Button\r\n                    variant={'primary'}\r\n                    onClick={formController.handleSubmit}\r\n                    style={{ transform: loginButtonAnimation }}\r\n                >\r\n                    {'Login'}\r\n                </Button>\r\n                <P style={{ transform: socialMediaAnimation }}>{'or login using social media'}</P>\r\n                <SocialMediaContainer style={{ transform: socialMediaAnimation }}>\r\n                    <SocialMediaButton onClick={() => loginWithSocialMedia('Facebook')}>\r\n                        <FontAwesomeIcon icon={faFacebookF} size={'2x'} />\r\n                    </SocialMediaButton>\r\n                    <SocialMediaButton onClick={() => loginWithSocialMedia('Google')}>\r\n                        <FontAwesomeIcon icon={faGoogle} size={'2x'} />\r\n                    </SocialMediaButton>\r\n                    <SocialMediaButton onClick={() => loginWithSocialMedia('GitHub')}>\r\n                        <FontAwesomeIcon icon={faGithub} size={'2x'} />\r\n                    </SocialMediaButton>\r\n                </SocialMediaContainer>\r\n            </LoginContainer>\r\n        );\r\n    }\r\n    else {\r\n        return <Redirect to={'/home'} />\r\n    }\r\n}\r\n\r\nexport default Login;","import { useSpring } from 'react-spring';\r\n\r\nconst useAnimation = () => {\r\n    const { transform: defaultButtonTransform } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px,600px, 0px)' },\r\n        delay: 200,\r\n    });\r\n\r\n    const { transform: primaryButtonTransform } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px,600px, 0px)' },\r\n        delay: 250,\r\n    });\r\n\r\n    const { transform: socialMediaContainerTransform } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px,600px, 0px)' },\r\n        delay: 300,\r\n    });\r\n\r\n    const { transform: titleIconScale } = useSpring({\r\n        transform: 'scale(1)',\r\n        from: { transform: 'scale(0)' },\r\n        delay: 450,\r\n    });\r\n\r\n    return {\r\n        titleIconScale,\r\n        defaultButtonTransform,\r\n        primaryButtonTransform,\r\n        socialMediaContainerTransform,\r\n    };\r\n}\r\n\r\nexport default useAnimation;","import { uuid } from 'uuidv4';\r\nimport * as React from 'react';\r\nimport { theme } from '../../utils';\r\nimport { useAnimation } from './hooks';\r\nimport { useSpring } from 'react-spring';\r\nimport { useHistory, Redirect } from 'react-router-dom';\r\nimport { faTrophy } from '@fortawesome/free-solid-svg-icons';\r\nimport { Button, SocialMediaButton } from '../../components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { NotificationType } from '../../interfaces/notification.interface';\r\nimport { faGoogle, faFacebookF, faGithub } from '@fortawesome/free-brands-svg-icons'\r\nimport { useNotificationStore, NotificationActions, useAuthStore } from '../../stores';\r\nimport { WelcomeContainer, WelcomeCircle, H1, ControlsContainer, P, SocialMediaContainer, TitleContainer, TitleIcon } from './styles';\r\n\r\ninterface IWelcomeProps { }\r\n\r\nconst Welcome: React.FC<IWelcomeProps> = () => {\r\n    const history = useHistory();\r\n    const { currentUser } = useAuthStore();\r\n    const { dispatchNotification } = useNotificationStore();\r\n\r\n    const { vh, vw } = theme;\r\n\r\n    const {\r\n        titleIconScale,\r\n        defaultButtonTransform,\r\n        primaryButtonTransform,\r\n        socialMediaContainerTransform,\r\n    } = useAnimation();\r\n\r\n    const [{ transform, opacity }, set] = useSpring(() => ({ transform: `translate3d(0,${vw > vh ? '-150vw' : '-150vh'},0)`, opacity: 1 }));\r\n    set({ transform: `translate3d(0,${vw > vh ? '-75vw' : '-50vh'},0)` });\r\n\r\n    const moveTo = (path: string) => {\r\n        set({ transform: `translate3d(0,${vw > vh ? '-120vw' : '-120vh'},0)`, opacity: 0 });\r\n        setTimeout(() => history.push(path), 400);\r\n    };\r\n\r\n    const loginWithSocialMedia = (platform: ('Facebook' | 'GitHub' | 'Google')) => {\r\n        dispatchNotification({\r\n            type: NotificationActions.ADD,\r\n            payload: {\r\n                id: uuid(),\r\n                timeStamp: Date.now(),\r\n                type: NotificationType.Warning,\r\n                message: `Login with ${platform} is under development.`,\r\n            }\r\n        });\r\n    }\r\n\r\n    if (!currentUser) {\r\n        return (\r\n            <WelcomeContainer>\r\n                <WelcomeCircle style={{ transform }}>\r\n                    <TitleContainer>\r\n                        <H1>{'HOMiESCUP'}</H1>\r\n                        <TitleIcon style={{ transform: titleIconScale }}>\r\n                            <FontAwesomeIcon icon={faTrophy} style={{ width: '100%', height: '100%' }} />\r\n                        </TitleIcon>\r\n                    </TitleContainer>\r\n                </WelcomeCircle>\r\n                <ControlsContainer style={{ opacity }}>\r\n                    <Button variant={'default'} style={{ transform: defaultButtonTransform }} onClick={() => moveTo('/login')}>\r\n                        {'Login'}\r\n                    </Button>\r\n                    <Button variant={'primary'} style={{ transform: primaryButtonTransform }} onClick={() => moveTo('/register')}>\r\n                        {'Create account'}\r\n                    </Button>\r\n                    <P style={{ transform: socialMediaContainerTransform }}>{'or login using social media'}</P>\r\n                    <SocialMediaContainer style={{ transform: socialMediaContainerTransform }}>\r\n                        <SocialMediaButton onClick={() => loginWithSocialMedia('Facebook')}>\r\n                            <FontAwesomeIcon icon={faFacebookF} size={'2x'} />\r\n                        </SocialMediaButton>\r\n                        <SocialMediaButton onClick={() => loginWithSocialMedia('Google')}>\r\n                            <FontAwesomeIcon icon={faGoogle} size={'2x'} />\r\n                        </SocialMediaButton>\r\n                        <SocialMediaButton onClick={() => loginWithSocialMedia('GitHub')}>\r\n                            <FontAwesomeIcon icon={faGithub} size={'2x'} />\r\n                        </SocialMediaButton>\r\n                    </SocialMediaContainer>\r\n                </ControlsContainer>\r\n            </WelcomeContainer>\r\n        );\r\n    }\r\n    else {\r\n        return <Redirect to={'/home'} />\r\n    }\r\n}\r\n\r\nexport default Welcome;","import { useSpring } from 'react-spring';\r\n\r\nconst useAnimation = () => {\r\n    const { opacity: titleAnimation } = useSpring({\r\n        opacity: 1,\r\n        from: { opacity: 0 },\r\n        delay: 0,\r\n    });\r\n    const { transform: subTitleAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 50\r\n    });\r\n    const { transform: usernameFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 100\r\n    });\r\n    const { transform: emailFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 150\r\n    });\r\n    const { transform: pwFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 200\r\n    });\r\n    const { transform: confirmPWFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 250\r\n    });\r\n    const { transform: registerButtonAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 300\r\n    });\r\n    const { transform: titleIconAnimation } = useSpring({\r\n        transform: 'scale(1)',\r\n        from: { transform: 'scale(0)' },\r\n        delay: 350,\r\n    });\r\n\r\n    return {\r\n        titleAnimation,\r\n        pwFieldAnimation,\r\n        subTitleAnimation,\r\n        titleIconAnimation,\r\n        emailFieldAnimation,\r\n        usernameFieldAnimation,\r\n        confirmPWFieldAnimation,\r\n        registerButtonAnimation,\r\n    };\r\n}\r\n\r\nexport default useAnimation;","import styled from 'styled-components';\r\n\r\nexport const RegisterContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 15vh 10vw 1vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n`;","import * as yup from 'yup';\r\nimport { uuid } from 'uuidv4';\r\nimport * as React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { useAnimation } from './hooks';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { RegisterContainer } from './styles';\r\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { Button, Input, PasswordInput } from '../../components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { H1, TitleContainer, TitleIcon, SubTitle } from '../login/styles';\r\nimport { NotificationType } from '../../interfaces/notification.interface';\r\nimport { useNotificationStore, NotificationActions, useAuthStore } from '../../stores';\r\n\r\nconst validationSchema = yup.object().shape({\r\n    username: yup.string()\r\n        .required('Username is required!')\r\n        .min(6, 'Username must be at least 6 characters!')\r\n        .max(18, `Username must be less than 18 characters!`)\r\n        .matches(/^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/, 'Username is not valid!'),\r\n    email: yup.string()\r\n        .required('Email is required!')\r\n        .email('Email is not valid!'),\r\n    password: yup.string()\r\n        .required('Password is required!')\r\n        .min(6, 'Password must be at least 6 characters!'),\r\n    confirmPassword: yup.string()\r\n        .required('Confirm Password is required!')\r\n        .oneOf([yup.ref('password')], 'Passwords must match!')\r\n\r\n});\r\n\r\ninterface IFormValues {\r\n    username: string;\r\n    email: string;\r\n    password: string;\r\n    confirmPassword: string;\r\n}\r\n\r\ninterface IRegisterProps { }\r\n\r\nconst Register: React.FC<IRegisterProps> = () => {\r\n\r\n    const { currentUser } = useAuthStore();\r\n    const { dispatchNotification } = useNotificationStore();\r\n\r\n    const {\r\n        titleAnimation,\r\n        pwFieldAnimation,\r\n        subTitleAnimation,\r\n        titleIconAnimation,\r\n        emailFieldAnimation,\r\n        usernameFieldAnimation,\r\n        confirmPWFieldAnimation,\r\n        registerButtonAnimation,\r\n    } = useAnimation();\r\n\r\n    const formController = useFormik<IFormValues>({\r\n        initialValues: {\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n        },\r\n        onSubmit: ({ username, email, password, confirmPassword }) => {\r\n            dispatchNotification({\r\n                type: NotificationActions.ADD,\r\n                payload: {\r\n                    id: uuid(),\r\n                    timeStamp: Date.now(),\r\n                    type: NotificationType.Success,\r\n                    message: 'Form submitted!! :)',\r\n                }\r\n            });\r\n            formController.resetForm();\r\n        },\r\n        validationSchema,\r\n    });\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (!formController.isSubmitting && !formController.isValid) {\r\n            for (const key in formController.errors) {\r\n                if (!!formController.errors[key]) {\r\n                    setTimeout(() => {\r\n                        dispatchNotification({\r\n                            type: NotificationActions.ADD,\r\n                            payload: {\r\n                                id: uuid(),\r\n                                timeStamp: Date.now(),\r\n                                type: NotificationType.Danger,\r\n                                message: formController.errors[key] as string,\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [formController.isSubmitting]);\r\n\r\n    if (!currentUser) {\r\n\r\n        return (\r\n            <RegisterContainer>\r\n                <TitleContainer>\r\n                    <H1 style={{ opacity: titleAnimation }}>{'great idea'}</H1>\r\n                    <TitleIcon style={{ transform: titleIconAnimation }}>\r\n                        <FontAwesomeIcon icon={faUserPlus} style={{ width: '100%', height: '100%' }} />\r\n                    </TitleIcon>\r\n                </TitleContainer>\r\n                <SubTitle style={{ transform: subTitleAnimation }}>{'register now'}</SubTitle>\r\n                <Input\r\n                    name={'username'}\r\n                    placeholder={'username'}\r\n                    value={formController.values.username}\r\n                    onChange={formController.handleChange}\r\n                    style={{ transform: usernameFieldAnimation }}\r\n                    isValid={!!(formController.touched.username && !formController.errors.username)}\r\n                    isInvalid={!!(formController.touched.username && !!formController.errors.username)}\r\n                />\r\n                <Input\r\n                    name={'email'}\r\n                    placeholder={'email'}\r\n                    value={formController.values.email}\r\n                    onChange={formController.handleChange}\r\n                    style={{ transform: emailFieldAnimation }}\r\n                    isValid={!!(formController.touched.email && !formController.errors.email)}\r\n                    isInvalid={!!(formController.touched.email && !!formController.errors.email)}\r\n                />\r\n                <PasswordInput\r\n                    name={'password'}\r\n                    placeholder={'password'}\r\n                    value={formController.values.password}\r\n                    onChange={formController.handleChange}\r\n                    style={{ transform: pwFieldAnimation }}\r\n                    isValid={!!(formController.touched.password && !formController.errors.password)}\r\n                    isInvalid={!!(formController.touched.password && !!formController.errors.password)}\r\n                />\r\n                <PasswordInput\r\n                    name={'confirmPassword'}\r\n                    placeholder={'confirm password'}\r\n                    onChange={formController.handleChange}\r\n                    value={formController.values.confirmPassword}\r\n                    style={{ transform: confirmPWFieldAnimation }}\r\n                    isValid={!!(formController.touched.confirmPassword && !formController.errors.confirmPassword)}\r\n                    isInvalid={!!(formController.touched.confirmPassword && !!formController.errors.confirmPassword)}\r\n                />\r\n                <Button\r\n                    variant={'primary'}\r\n                    onClick={formController.handleSubmit}\r\n                    style={{ transform: registerButtonAnimation }}\r\n                >\r\n                    {'register'}\r\n                </Button>\r\n            </RegisterContainer>\r\n        );\r\n    }\r\n    else {\r\n        return <Redirect to={'/home'} />\r\n    }\r\n}\r\n\r\nexport default Register;","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\n\r\nexport const AppContainer = styled.div`\r\n    position: relative;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-color: ${theme.dark};\r\n    background-image: linear-gradient(135deg, rgba(48,48,48,1) 0%, rgba(255,255,255,.05) 100%);\r\n`;\r\n\r\nexport const BottomCircle = styled.div`\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: -50vh;\r\n    width: 100vh;\r\n    height: 100vh;\r\n    border-radius: 50%;\r\n    background-color: ${theme.darker06};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    @media (min-width: 700px) {\r\n        width: 900px;\r\n        height: 900px;\r\n        bottom: -450px;\r\n    }\r\n`;\r\n\r\nexport const TopCircle = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: -50vh;\r\n    width: 100vh;\r\n    height: 100vh;\r\n    border-radius: 50%;\r\n    background-color: ${theme.darker06};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    @media (min-width: 700px) {\r\n        width: 900px;\r\n        height: 900px;\r\n        bottom: -450px;\r\n    }\r\n`;\r\n\r\nexport const InnerCircle = styled.div`\r\n    width: 70vh;\r\n    height: 70vh;\r\n    border-radius: 50%;\r\n    background-color: ${theme.dark};\r\n\r\n    @media (min-width: 700px) {\r\n        width: 600px;\r\n        height: 600px;\r\n    }\r\n`;","import * as React from 'react';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom';\r\nimport { Login, Home, Register, Welcome } from '../../screens';\r\nimport { AuthenticatedRoute, Notification, LoaderBanner } from '../';\r\nimport { AppContainer, BottomCircle, InnerCircle, TopCircle } from './styles';\r\nimport { NotificationStoreProvider, LoaderBannerStoreProvider, AuthStoreProvider } from '../../stores';\r\n\r\ninterface IAppProps { }\r\n\r\nconst App: React.FC<IAppProps> = () => {\r\n\r\n    return (\r\n        <AuthStoreProvider>\r\n            <LoaderBannerStoreProvider>\r\n                <NotificationStoreProvider>\r\n                    <AppContainer>\r\n                        <LoaderBanner />\r\n                        <Notification />\r\n                        <TopCircle>\r\n                            <InnerCircle />\r\n                        </TopCircle>\r\n                        <BottomCircle>\r\n                            <InnerCircle />\r\n                        </BottomCircle>\r\n                        <HashRouter basename=\"/\">\r\n                            <Switch>\r\n                                <Route exact={true} path={'/'} render={() => <Welcome />} />\r\n                                <Route exact={true} path={'/login'} render={() => <Login />} />\r\n                                <Route exact={true} path={'/register'} render={() => <Register />} />\r\n                                <AuthenticatedRoute exact={true} path={'/home'} screen={<Home />} />\r\n                            </Switch>\r\n                        </HashRouter>\r\n                    </AppContainer>\r\n                </NotificationStoreProvider>\r\n            </LoaderBannerStoreProvider>\r\n        </AuthStoreProvider>\r\n    );\r\n}\r\n\r\n\r\nexport default App;","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\nimport { NotificationType } from '../../interfaces/notification.interface';\r\n\r\ninterface INotificationContainerProps {\r\n    type: NotificationType;\r\n}\r\n\r\nconst NotificationContainer = styled.div<INotificationContainerProps>`\r\n    position: absolute;\r\n    z-index: 100;\r\n    top: .5rem;\r\n    left: 50%;\r\n    width: 94vw;\r\n    height: 3.5rem;\r\n    background: ${({ type }) => type === NotificationType.Danger\r\n        ? theme.dangerBackgroundColor\r\n        : type === NotificationType.Success\r\n            ? theme.successBackgroundColor\r\n            : theme.warningBackgroundColor};\r\n    border-radius: 5px;\r\n    border: 2px solid;\r\n    border-color: ${({ type }) => type === NotificationType.Danger\r\n        ? theme.dangerBorderColor\r\n        : type === NotificationType.Success\r\n            ? theme.successBorderColor\r\n            : theme.warningBorderColor};\r\n    color: ${({ type }) => type === NotificationType.Danger\r\n        ? theme.dangerFontColor\r\n        : type === NotificationType.Success\r\n            ? theme.successFontColor\r\n            : theme.warningFontColor};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n`;\r\n\r\nconst NotificationText = styled.p<{ strLenght: number }>`\r\n    font-size: ${({ strLenght }) => strLenght > 27 ? '.75rem' : '1rem'};\r\n`;\r\n\r\nconst IconContainer = styled.div<INotificationContainerProps>`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 1.8rem;\r\n    height: 1.8rem;\r\n    border: 2px solid;\r\n    border-color: ${({ type }) => type === NotificationType.Danger\r\n        ? theme.dangerFontColor\r\n        : type === NotificationType.Success\r\n            ? theme.successFontColor\r\n            : theme.warningFontColor};\r\n    border-radius: 50%;\r\n    background: transparent;\r\n    color: ${({ type }) => type === NotificationType.Danger\r\n        ? theme.dangerFontColor\r\n        : type === NotificationType.Success\r\n            ? theme.successFontColor\r\n            : theme.warningFontColor};\r\n    margin: 0 .5rem 0 .3rem;\r\n`;\r\n\r\nconst DeleteIconContainer = styled.button`\r\n    all: unset;\r\n    cursor: pointer;\r\n    position: absolute;\r\n    top: 50%;\r\n    right: 1px;\r\n    border-radius: 50%;\r\n    transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst AIconContainer = animated(IconContainer);\r\nconst ANotificationText = animated(NotificationText);\r\nconst ADeleteIconContainer = animated(DeleteIconContainer);\r\nconst ANotificationContainer = animated(NotificationContainer);\r\n\r\nexport {\r\n    IconContainer,\r\n    AIconContainer,\r\n    NotificationText,\r\n    ANotificationText,\r\n    DeleteIconContainer,\r\n    ADeleteIconContainer,\r\n    NotificationContainer,\r\n    ANotificationContainer,\r\n};","import * as React from 'react';\r\nimport { usePrevious } from '../../utils';\r\nimport { useNotificationStore } from '../../stores';\r\nimport { config, useTransition } from 'react-spring';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { NotificationType } from '../../interfaces/notification.interface';\r\nimport { NotificationActions } from '../../stores/notification/notification.actions';\r\nimport { faCheck, faInfo, faExclamation, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { ANotificationContainer, NotificationText, AIconContainer, DeleteIconContainer } from './styles';\r\n\r\nconst NOTIFICATIONS_MAX_COUNT: number = 4;\r\n\r\ninterface INotificationProps { }\r\n\r\nconst Notification: React.FC<INotificationProps> = () => {\r\n\r\n    const { notifications, dispatchNotification } = useNotificationStore();\r\n\r\n    const notificationAnimations = useTransition(\r\n        (notifications.map((n, index) => (index < NOTIFICATIONS_MAX_COUNT) ? ({ ...n, y: index * 4 }) : null).filter(n => !!n) as any[]),\r\n        n => n.id,\r\n        {\r\n            from: { opacity: 0, transform: `translate(-50%, -4rem)` },\r\n            leave: { opacity: 0 },\r\n            enter: ({ y }) => ({ opacity: 1, transform: `translate(-50%, ${y}rem)` }),\r\n            update: ({ y }) => ({ opacity: 1, transform: `translate(-50%, ${y}rem)` }),\r\n            config: { ...config.default, friction: 16 }\r\n        }\r\n    );\r\n\r\n    const prevNotifications = usePrevious(notifications);\r\n\r\n    React.useEffect(() => {\r\n        if ((prevNotifications as any[])?.length < notifications?.length) {\r\n            const newNotification = notifications.find(noti => prevNotifications?.map(prevNoti => prevNoti.id).indexOf(noti.id) === -1);\r\n            setTimeout(() => dispatchNotification({ type: NotificationActions.DELETE, payload: newNotification }), 3500);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [notifications]);\r\n\r\n    return (\r\n        <>\r\n            {notificationAnimations.map(({ item: notification, props }) => {\r\n                const { opacity, transform } = props;\r\n                return (\r\n                    <ANotificationContainer key={notification.id} type={notification.type} style={{ transform, opacity }}>\r\n                        <AIconContainer type={notification.type}>\r\n                            <FontAwesomeIcon\r\n                                icon={\r\n                                    notification.type === NotificationType.Danger\r\n                                        ? faExclamation\r\n                                        : notification.type === NotificationType.Warning\r\n                                            ? faInfo\r\n                                            : faCheck\r\n                                }\r\n                            />\r\n                        </AIconContainer>\r\n                        <NotificationText strLenght={notification.message?.length}>{notification.message}</NotificationText>\r\n                        <DeleteIconContainer>\r\n                            <FontAwesomeIcon\r\n                                size={'lg'}\r\n                                icon={faTimes}\r\n                                onClick={() => dispatchNotification({\r\n                                    type: NotificationActions.DELETE,\r\n                                    payload: notification\r\n                                })}\r\n                            />\r\n                        </DeleteIconContainer>\r\n                    </ANotificationContainer>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Notification;","import styled, { keyframes } from 'styled-components';\r\nimport { animated } from 'react-spring';\r\nimport { theme } from '../../utils';\r\n\r\nconst Banner = styled.div`\r\n    position: absolute;\r\n    z-index: 100;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background: transparent;\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: flex-start;\r\n`;\r\n\r\nconst LoaderContainer = styled.div`\r\n    position: relative;\r\n    width: 1.8rem;\r\n    height: 1.8rem;\r\n    margin: .5rem;\r\n`;\r\n\r\nconst Text = styled.p`\r\n    height: 1.8rem;\r\n    font-weight: 600;\r\n    font-size: 1.2rem;\r\n    text-transform: uppercase;\r\n    color: rgba(255,255,255,.3);\r\n    margin-bottom: .25rem;\r\n`;\r\n\r\nconst loaderAnimation = keyframes`\r\n    from {\r\n        transform: rotate(0deg) translate(-50%, -50%);\r\n    }\r\n    to {\r\n        transform: rotate(360deg) translate(-50%, -50%);\r\n    }\r\n`;\r\n\r\nconst Loader = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: 1.8rem;\r\n    height: 1.8rem;\r\n    border-radius: 5px;\r\n    transform-origin: top left;\r\n    background: rgba(255,255,255,.3);\r\n    animation: ${loaderAnimation} 1s ease infinite;\r\n`;\r\n\r\nconst innerLoaderAnimation = keyframes`\r\n    0% {\r\n        transform: rotate(0deg) translate(-50%, -50%);\r\n    }\r\n    100% {\r\n        transform: rotate(-360deg) translate(-50%, -50%);\r\n    }\r\n`;\r\n\r\nconst InnerLoader = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: 1.2rem;\r\n    height: 1.2rem;\r\n    border-radius: 5px;\r\n    transform-origin: top left;\r\n    background: ${theme.primaryColor};\r\n    animation: ${innerLoaderAnimation} 1s ease infinite;\r\n`;\r\n\r\nconst ABanner = animated(Banner);\r\nconst ALoader = animated(Loader);\r\nconst AInnerLoader = animated(InnerLoader);\r\nconst ALoaderContainer = animated(LoaderContainer);\r\n\r\nexport {\r\n    Text,\r\n    Banner,\r\n    ABanner,\r\n    Loader,\r\n    ALoader,\r\n    InnerLoader,\r\n    AInnerLoader,\r\n    LoaderContainer,\r\n    ALoaderContainer,\r\n};","import * as React from 'react';\r\nimport { useSpring } from 'react-spring';\r\nimport { useLoaderBannerStore } from '../../stores';\r\nimport { Banner, Loader, InnerLoader, ALoaderContainer, Text } from './styles';\r\n\r\ninterface ILoaderBannerProps { }\r\n\r\nconst LoaderBanner: React.FC<ILoaderBannerProps> = () => {\r\n\r\n    const { opacity } = useSpring({\r\n        opacity: 1,\r\n        from: { opacity: 0 },\r\n    });\r\n\r\n    const { loaderBanner } = useLoaderBannerStore();\r\n\r\n    if (loaderBanner.isLoading) {\r\n        return (\r\n            <Banner>\r\n                <ALoaderContainer stlye={{ opacity }}>\r\n                    <Loader />\r\n                    <InnerLoader />\r\n                </ALoaderContainer>\r\n                <Text>{loaderBanner.text}</Text>\r\n            </Banner>\r\n        );\r\n    }\r\n    else return null;\r\n};\r\n\r\nexport default LoaderBanner;","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\nexport interface IInputProps {\r\n    isValid?: boolean;\r\n    isInvalid?: boolean;\r\n}\r\n\r\nconst Input = styled.input<IInputProps>`\r\n    all: unset;\r\n    position: relative;\r\n    box-sizing: border-box;\r\n    padding: .5rem;\r\n    padding-left: 1rem;\r\n    padding-right: ${({ type }) => type === 'password' ? '3rem' : '1rem'};\r\n    width: 100%;\r\n    height: 5.5vh;\r\n    color: ${theme.defaultFontColor};\r\n    margin-bottom: .7rem;\r\n    background-color: ${theme.defaultColor};\r\n    border: 1px solid;\r\n    border-color: ${({ isValid, isInvalid }) => isValid ? theme.successColor : isInvalid ? theme.dangerColor : 'transparent'};\r\n    \r\n    ::placeholder {\r\n        text-transform: uppercase;\r\n        color: ${theme.defaultFontColor};\r\n        letter-spacing: 1px;\r\n    }\r\n`;\r\n\r\nexport default animated(Input);","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\n\r\nexport const PasswordInputContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n`;\r\n\r\nexport const EyeIconContainer = styled.label`\r\n    z-index: 10;\r\n    position: absolute;\r\n    height: calc(100% - .7rem);\r\n    width: 3rem;\r\n    top: 0;\r\n    right: 0;\r\n    color: ${theme.defaultFontColor};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;","import * as React from 'react';\r\nimport { animated } from 'react-spring';\r\nimport Input, { IInputProps } from '../styles/input';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { EyeIconContainer, PasswordInputContainer } from './styles';\r\nimport { faEye, faEyeSlash } from '@fortawesome/free-regular-svg-icons';\r\n\r\ninterface IPasswordInput { }\r\n\r\nconst PasswordInput: React.FC<IPasswordInput & React.InputHTMLAttributes<HTMLInputElement> & IInputProps> = ({ style, ...rest }) => {\r\n\r\n    const [showPW, setShowPW] = React.useState<boolean>(false);\r\n\r\n    return (\r\n        <PasswordInputContainer style={{ ...style }}>\r\n            <EyeIconContainer htmlFor={rest.name} onClick={() => setShowPW(!showPW)}>\r\n                {!showPW\r\n                    ? <FontAwesomeIcon\r\n                        icon={faEye}\r\n                        style={{ width: '1.5rem', height: '1.5rem' }}\r\n                    />\r\n                    : <FontAwesomeIcon\r\n                        icon={faEyeSlash}\r\n                        style={{ width: '1.5rem', height: '1.5rem' }}\r\n                    />\r\n                }\r\n            </EyeIconContainer>\r\n            <Input id={rest.name} type={showPW ? 'text' : 'password'} {...rest} />\r\n        </PasswordInputContainer>\r\n    );\r\n}\r\n\r\nexport default animated(PasswordInput);","import * as React from 'react';\r\nimport { useAuthStore } from '../../stores';\r\nimport { Route, RouteProps, Redirect } from 'react-router-dom';\r\n\r\ninterface IAuthenticatedRouteProps {\r\n    screen: JSX.Element;\r\n}\r\n\r\nconst AuthenticatedRoute: React.FC<IAuthenticatedRouteProps & RouteProps> = ({ screen, ...rest }) => {\r\n    const { currentUser } = useAuthStore();\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={() => !!currentUser\r\n                ? screen\r\n                : <Redirect to={'/'} />\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default AuthenticatedRoute;\r\n","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\ninterface IButtonProps {\r\n    variant: ('default' | 'primary');\r\n}\r\n\r\nconst Button = styled.button<IButtonProps>`\r\n    all: unset;\r\n    box-sizing: border-box;\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 5.5vh;\r\n    background-color: ${({ variant }) => variant === 'default' ? theme.defaultColor : theme.primaryColor};\r\n    color: ${theme.defaultFontColor};\r\n    text-transform: uppercase;\r\n    margin-bottom: 1.2vh;\r\n    font-weight: 700;\r\n    box-shadow: ${({ variant }) => variant === 'default' ? 'none' : '4px 4px 20px rgba(0,0,0,0.6)'}\r\n`;\r\n\r\nexport default animated(Button);","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\nconst SocialMediaButton = styled.button`\r\n    all: unset;\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 3rem;\r\n    height: 3rem;\r\n    border: 3px solid ${theme.defaultFontColor};\r\n    border-radius: 50%;\r\n    background: transparent;\r\n    color: ${theme.defaultFontColor};\r\n    margin: 0 .75rem;\r\n`;\r\n\r\nexport default animated(SocialMediaButton);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './components';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}