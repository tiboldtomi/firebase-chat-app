{"version":3,"sources":["utils/theme.ts","components/app/styles.ts","screens/home/index.tsx","screens/login/styles.ts","screens/login/hooks/use-animation.ts","screens/login/hooks/use-form-controller.ts","screens/welcome/styles.ts","screens/login/index.tsx","screens/welcome/hooks/use-animation.ts","screens/welcome/index.tsx","screens/register/hooks/use-animation.ts","screens/register/styles.ts","screens/register/index.tsx","components/app/index.tsx","components/authenticated-route/index.tsx","components/styles/input.ts","components/styles/button.ts","components/styles/password-input.tsx","components/styles/social-media-button.ts","serviceWorker.ts","index.tsx"],"names":["theme","AppContainer","styled","div","Circle","InnerCircle","Home","LoginContainer","H1","h1","SubTitle","h2","useAnimation","titleAnimation","useSpring","opacity","from","delay","subTitleAnimation","transform","emailFieldAnimation","pwFieldAnimation","loginButtonAnimation","socialMediaAnimation","validationSchema","yup","shape","email","required","password","min","useFormController","useFormik","initialValues","onSubmit","console","log","WelcomeContainer","WelcomeCircle","TitleContainer","TitleIcon","ControlsContainer","P","p","SocialMediaContainer","Login","formController","AP","animated","AH1","AButton","Button","ASubTitle","ASocialMediaContainer","style","width","name","placeholder","value","values","onChange","handleChange","isValid","touched","errors","isInvalid","variant","onClick","handleSubmit","icon","faFacebookF","size","faGoogle","faGithub","defaultButtonTransform","primaryButtonTransform","socialMediaContainerTransform","titleIconScale","Welcome","history","useHistory","top","set","moveTo","path","setTimeout","push","ATitleIcon","AWelcomeCircle","AControlsContainer","faAngellist","height","usernameFieldAnimation","confirmPWFieldAnimation","registerButtonAnimation","RegisterContainer","Register","AInput","Input","APasswordInput","PasswordInput","App","basename","exact","render","screen","userLoggedIn","AuthenticatedRoute","rest","to","input","type","button","PasswordInputContainer","EyeIconContainer","React","showPW","setShowPW","faEyeSlash","faEye","SocialMediaButton","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6c480d75.chunk.js","sourcesContent":["export const theme = {\r\n    fontSize: '16px',\r\n    fontColor: '#fff',\r\n    primaryFontColor: '#b36162',\r\n    primaryColor: '#A7696A',\r\n    defaultColor: 'rgba(255,255,255,0.15)',\r\n    dark: 'rgba(48,48,48,1)',\r\n    dark06: 'rgba(48,48,48,0.6)',\r\n    darker: 'rgba(30,30,30,1)',\r\n    darker06: 'rgba(30,30,30,0.6)',\r\n    successColor: '#28a745',\r\n    dangerColor: '#dc3545',\r\n};","import styled from 'styled-components';\r\nimport { theme } from '../../utils/theme';\r\n\r\nexport const AppContainer = styled.div`\r\n    position: relative;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-color: ${theme.dark}\r\n`;\r\n\r\nexport const Circle = styled.div`\r\n    position: absolute;\r\n    bottom: -350px;\r\n    left: -20px;\r\n    width: 1000px;\r\n    height: 1000px;\r\n    border-radius: 50%;\r\n    background-color: ${theme.darker06};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const InnerCircle = styled.div`\r\n    width: 700px;\r\n    height: 700px;\r\n    border-radius: 50%;\r\n    background-color: ${theme.dark};\r\n`;","import * as React from 'react';\r\n\r\ninterface IHomeProps { }\r\n\r\nconst Home: React.FC<IHomeProps> = () => {\r\n\r\n    return (\r\n        <div>{'Home'}</div>\r\n    );\r\n}\r\n\r\nexport default Home;","import styled from 'styled-components';\r\nimport { theme } from '../../utils/theme';\r\n\r\nexport const LoginContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 15vh 10vw 1vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n`;\r\n\r\nexport const H1 = styled.h1`\r\n    font-size: 1.6rem;\r\n    color: ${theme.fontColor};\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    margin-bottom: 1rem;\r\n    font-weight: 600;\r\n    margin-bottom: 25vh;\r\n`;\r\n\r\nexport const SubTitle = styled.h2`\r\n    font-size: 1.6rem;\r\n    color: ${theme.primaryFontColor};\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    margin-bottom: 1rem;\r\n    font-weight: 600;\r\n`;","import { useSpring } from 'react-spring';\r\n\r\nconst useAnimation = () => {\r\n    const { opacity: titleAnimation } = useSpring({\r\n        opacity: 1,\r\n        from: { opacity: 0 },\r\n        delay: 0,\r\n    });\r\n    const { transform: subTitleAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 100\r\n    });\r\n    const { transform: emailFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 200\r\n    });\r\n    const { transform: pwFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 300\r\n    });\r\n    const { transform: loginButtonAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 400\r\n    });\r\n    const { transform: socialMediaAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 500\r\n    });\r\n\r\n    return {\r\n        titleAnimation,\r\n        pwFieldAnimation,\r\n        subTitleAnimation,\r\n        emailFieldAnimation,\r\n        loginButtonAnimation,\r\n        socialMediaAnimation,\r\n    };\r\n}\r\n\r\nexport default useAnimation;","import * as yup from 'yup';\r\nimport { useFormik } from 'formik';\r\n\r\nconst validationSchema = yup.object().shape({\r\n    email: yup.string()\r\n        .email('Email is not valid!')\r\n        .required('Every field is required!'),\r\n    password: yup.string()\r\n        .min(6, 'Password must be at least 6 characters')\r\n        .required('Every field is required!'),\r\n});\r\n\r\ninterface IFormValues {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\nconst useFormController = () => {\r\n\r\n    const formController = useFormik<IFormValues>({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n        onSubmit: ({ email, password }) => {\r\n            console.log('Login form submitted');\r\n        },\r\n        validationSchema,\r\n    });\r\n\r\n    return formController;\r\n}\r\n\r\nexport default useFormController;","import styled from 'styled-components';\r\nimport { theme } from '../../utils/theme';\r\n\r\nexport const WelcomeContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n`;\r\n\r\nexport const WelcomeCircle = styled.div`\r\n    position: absolute;\r\n    transform: translate(-50%, -50%);\r\n    left: 50%;\r\n    width: 100vh;\r\n    height: 100vh;\r\n    border-radius: 50%;\r\n    box-shadow: inset -1px -1px 10px rgba(0,0,0,0.6), 5px 5px 25px rgba(0,0,0,0.6), -5px -5px 25px rgba(0,0,0,0.6);\r\n    background-color: ${theme.primaryColor};\r\n    background-image: linear-gradient(rgba(255,255,255,0.4), rgba(255,255,255,0));\r\n`;\r\n\r\nexport const H1 = styled.h1`\r\n    font-size: 2.3rem;\r\n    color: ${theme.fontColor};\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    letter-spacing: 2px;\r\n    margin-bottom: 1rem;\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n    position: absolute;\r\n    bottom: 5%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const TitleIcon = styled.div`\r\n    width: 5.5rem;\r\n    height: 5.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: ${theme.fontColor}\r\n`;\r\n\r\nexport const ControlsContainer = styled.div`\r\n    width: 100%;\r\n    height: 40vh;\r\n    padding: 1vh 10vw;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n`;\r\n\r\nexport const P = styled.p`\r\n    font-size: 0.8rem;\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    color: ${theme.fontColor};\r\n    margin: 1.5rem 0;\r\n    letter-spacing: 1px;\r\n    text-align: center;\r\n`;\r\n\r\nexport const SocialMediaContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;","import * as React from 'react';\r\nimport { animated } from 'react-spring';\r\nimport { LoginContainer, H1, SubTitle } from './styles';\r\nimport { useAnimation, useFormController } from './hooks';\r\nimport { SocialMediaContainer, P } from '../welcome/styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Button, Input, SocialMediaButton, PasswordInput } from '../../components';\r\nimport { faGoogle, faFacebookF, faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\ninterface ILoginProps { }\r\n\r\nconst Login: React.FC<ILoginProps> = () => {\r\n\r\n    const {\r\n        titleAnimation,\r\n        pwFieldAnimation,\r\n        subTitleAnimation,\r\n        emailFieldAnimation,\r\n        socialMediaAnimation,\r\n        loginButtonAnimation,\r\n    } = useAnimation();\r\n\r\n    const formController = useFormController();\r\n\r\n    const AP = animated(P);\r\n    const AH1 = animated(H1);\r\n    const AButton = animated(Button);\r\n    const ASubTitle = animated(SubTitle);\r\n    const ASocialMediaContainer = animated(SocialMediaContainer);\r\n\r\n    console.log('formController: ', formController);\r\n\r\n    return (\r\n        <LoginContainer>\r\n            <AH1 style={{ opacity: titleAnimation }}>{'welcome back'}</AH1>\r\n            <ASubTitle style={{ transform: subTitleAnimation }}>{'login in'}</ASubTitle>\r\n\r\n            <animated.div style={{ transform: emailFieldAnimation, width: '100%' }}>\r\n                <Input\r\n                    name={'email'}\r\n                    placeholder={'email'}\r\n                    value={formController.values.email}\r\n                    onChange={formController.handleChange}\r\n                    isValid={!!(formController.touched.email && !formController.errors.email)}\r\n                    isInvalid={!!(formController.touched.email && !!formController.errors.email)}\r\n                />\r\n            </animated.div>\r\n            <animated.div style={{ transform: pwFieldAnimation, width: '100%' }}>\r\n                <PasswordInput\r\n                    name={'password'}\r\n                    placeholder={'password'}\r\n                    value={formController.values.password}\r\n                    onChange={formController.handleChange}\r\n                    isValid={!!(formController.touched.password && !formController.errors.password)}\r\n                    isInvalid={!!(formController.touched.password && !!formController.errors.password)}\r\n                />\r\n            </animated.div>\r\n            <AButton\r\n                variant={'primary'}\r\n                onClick={formController.handleSubmit}\r\n                style={{ transform: loginButtonAnimation }}\r\n            >\r\n                {'Login'}\r\n            </AButton>\r\n\r\n            <AP style={{ transform: socialMediaAnimation }}>{'or login using social media'}</AP>\r\n            <ASocialMediaContainer style={{ transform: socialMediaAnimation }}>\r\n                <SocialMediaButton onClick={() => console.log('facebook login onclick')}>\r\n                    <FontAwesomeIcon icon={faFacebookF} size={'2x'} />\r\n                </SocialMediaButton>\r\n                <SocialMediaButton onClick={() => console.log('google login onclick')}>\r\n                    <FontAwesomeIcon icon={faGoogle} size={'2x'} />\r\n                </SocialMediaButton>\r\n                <SocialMediaButton onClick={() => console.log('github login onclick')}>\r\n                    <FontAwesomeIcon icon={faGithub} size={'2x'} />\r\n                </SocialMediaButton>\r\n            </ASocialMediaContainer>\r\n        </LoginContainer>\r\n    );\r\n}\r\n\r\nexport default Login;","import { useSpring } from 'react-spring';\r\n\r\nconst useAnimation = () => {\r\n    const { transform: defaultButtonTransform } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px,600px, 0px)' },\r\n        delay: 200,\r\n    });\r\n\r\n    const { transform: primaryButtonTransform } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px,600px, 0px)' },\r\n        delay: 300,\r\n    });\r\n\r\n    const { transform: socialMediaContainerTransform } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px,600px, 0px)' },\r\n        delay: 400,\r\n    });\r\n\r\n    const { transform: titleIconScale } = useSpring({\r\n        transform: 'scale(1)',\r\n        from: { transform: 'scale(0)' },\r\n        delay: 700,\r\n    });\r\n\r\n    return {\r\n        titleIconScale,\r\n        defaultButtonTransform,\r\n        primaryButtonTransform,\r\n        socialMediaContainerTransform,\r\n    };\r\n}\r\n\r\nexport default useAnimation;","import * as React from 'react';\r\nimport { useAnimation } from './hooks';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSpring, animated } from 'react-spring';\r\nimport { Button, SocialMediaButton } from '../../components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGoogle, faFacebookF, faAngellist, faGithub } from '@fortawesome/free-brands-svg-icons'\r\nimport { WelcomeContainer, WelcomeCircle, H1, ControlsContainer, P, SocialMediaContainer, TitleContainer, TitleIcon } from './styles';\r\n\r\ninterface IWelcomeProps { }\r\n\r\nconst Welcome: React.FC<IWelcomeProps> = () => {\r\n    const history = useHistory();\r\n\r\n    const {\r\n        titleIconScale,\r\n        defaultButtonTransform,\r\n        primaryButtonTransform,\r\n        socialMediaContainerTransform,\r\n    } = useAnimation();\r\n\r\n    const [{ top, opacity }, set] = useSpring(() => ({ top: '-65%', opacity: 1 }));\r\n    set({ top: '5%' });\r\n\r\n    const moveTo = (path: string) => {\r\n        set({ top: '-65%', opacity: 0 });\r\n        setTimeout(() => history.push(path), 350);\r\n    };\r\n\r\n    const AP = animated(P);\r\n    const AButton = animated(Button);\r\n    const ATitleIcon = animated(TitleIcon);\r\n    const AWelcomeCircle = animated(WelcomeCircle);\r\n    const AControlsContainer = animated(ControlsContainer);\r\n    const ASocialMediaContainer = animated(SocialMediaContainer);\r\n\r\n    return (\r\n        <WelcomeContainer>\r\n            <AWelcomeCircle style={{ top }}>\r\n                <TitleContainer>\r\n                    <H1>{'Welcome'}</H1>\r\n                    <ATitleIcon style={{ transform: titleIconScale }}>\r\n                        <FontAwesomeIcon icon={faAngellist} style={{ width: '100%', height: '100%' }} />\r\n                    </ATitleIcon>\r\n                </TitleContainer>\r\n            </AWelcomeCircle>\r\n            <AControlsContainer style={{ opacity }}>\r\n                <AButton variant={'default'} style={{ transform: defaultButtonTransform }} onClick={() => moveTo('/login')}>\r\n                    {'Login'}\r\n                </AButton>\r\n                <AButton variant={'primary'} style={{ transform: primaryButtonTransform }} onClick={() => moveTo('/register')}>\r\n                    {'Create account'}\r\n                </AButton>\r\n                <AP style={{ transform: socialMediaContainerTransform }}>{'or login using social media'}</AP>\r\n                <ASocialMediaContainer style={{ transform: socialMediaContainerTransform }}>\r\n                    <SocialMediaButton onClick={() => console.log('facebook onclick')}>\r\n                        <FontAwesomeIcon icon={faFacebookF} size={'2x'} />\r\n                    </SocialMediaButton>\r\n                    <SocialMediaButton onClick={() => console.log('google plus onclick')}>\r\n                        <FontAwesomeIcon icon={faGoogle} size={'2x'} />\r\n                    </SocialMediaButton>\r\n                    <SocialMediaButton onClick={() => console.log('github login onclick')}>\r\n                        <FontAwesomeIcon icon={faGithub} size={'2x'} />\r\n                    </SocialMediaButton>\r\n                </ASocialMediaContainer>\r\n            </AControlsContainer>\r\n        </WelcomeContainer>\r\n    );\r\n}\r\n\r\nexport default Welcome;","import { useSpring } from 'react-spring';\r\n\r\nconst useAnimation = () => {\r\n    const { opacity: titleAnimation } = useSpring({\r\n        opacity: 1,\r\n        from: { opacity: 0 },\r\n        delay: 0,\r\n    });\r\n    const { transform: usernameFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 100\r\n    });\r\n    const { transform: emailFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 200\r\n    });\r\n    const { transform: pwFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 300\r\n    });\r\n    const { transform: confirmPWFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 400\r\n    });\r\n    const { transform: registerButtonAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 500\r\n    });\r\n\r\n    return {\r\n        titleAnimation,\r\n        pwFieldAnimation,\r\n        emailFieldAnimation,\r\n        usernameFieldAnimation,\r\n        confirmPWFieldAnimation,\r\n        registerButtonAnimation,\r\n    };\r\n}\r\n\r\nexport default useAnimation;","import styled from 'styled-components';\r\n\r\nexport const RegisterContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 15vh 10vw 1vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n`;","import * as React from 'react';\r\nimport { H1 } from '../login/styles';\r\nimport { useAnimation } from './hooks';\r\nimport { animated } from 'react-spring';\r\nimport { RegisterContainer } from './styles';\r\nimport { Button, Input, PasswordInput } from '../../components';\r\n\r\ninterface IRegisterProps { }\r\n\r\nconst Register: React.FC<IRegisterProps> = () => {\r\n\r\n    const {\r\n        titleAnimation,\r\n        pwFieldAnimation,\r\n        emailFieldAnimation,\r\n        usernameFieldAnimation,\r\n        confirmPWFieldAnimation,\r\n        registerButtonAnimation,\r\n    } = useAnimation();\r\n\r\n    const AH1 = animated(H1);\r\n    const AInput = animated(Input);\r\n    const AButton = animated(Button);\r\n    const APasswordInput = animated(PasswordInput);\r\n\r\n    return (\r\n        <RegisterContainer>\r\n            <AH1 style={{ opacity: titleAnimation }}>{'Register now'}</AH1>\r\n            <AInput style={{ transform: usernameFieldAnimation }} name={'username'} placeholder={'username'} />\r\n            <AInput style={{ transform: emailFieldAnimation }} name={'email'} placeholder={'email'} />\r\n            <APasswordInput style={{ transform: pwFieldAnimation }} name={'password'} placeholder={'password'} />\r\n            <APasswordInput style={{ transform: confirmPWFieldAnimation }} name={'confirmPassword'} placeholder={'confirm password'} />\r\n            <AButton style={{ transform: registerButtonAnimation }} variant={'primary'}>{'register'}</AButton>\r\n        </RegisterContainer>\r\n    );\r\n}\r\n\r\nexport default Register;","import * as React from 'react';\r\nimport { AuthenticatedRoute } from '../';\r\nimport { AppContainer, Circle, InnerCircle } from './styles';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom';\r\nimport { Login, Home, Register, Welcome } from '../../screens';\r\n\r\ninterface IAppProps { }\r\n\r\nconst App: React.FC<IAppProps> = () => {\r\n\r\n    return (\r\n        <AppContainer>\r\n            <Circle>\r\n                <InnerCircle />\r\n            </Circle>\r\n            <HashRouter basename=\"/\">\r\n                <Switch>\r\n                    <Route exact={true} path={'/login'} render={() => <Login />} />\r\n                    <Route exact={true} path={'/welcome'} render={() => <Welcome />} />\r\n                    <Route exact={true} path={'/register'} render={() => <Register />} />\r\n                    <AuthenticatedRoute exact={true} path={'/'} screen={<Home />} userLoggedIn={false} />\r\n                </Switch>\r\n            </HashRouter>\r\n        </AppContainer>\r\n    );\r\n}\r\n\r\n\r\nexport default App;","import * as React from 'react';\r\nimport { Route, RouteProps, Redirect } from 'react-router-dom';\r\n\r\ninterface IAuthenticatedRouteProps {\r\n    userLoggedIn: boolean;\r\n    screen: JSX.Element;\r\n}\r\n\r\nconst AuthenticatedRoute: React.FC<IAuthenticatedRouteProps & RouteProps> = ({ userLoggedIn, screen, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={() => userLoggedIn\r\n                ? screen\r\n                : <Redirect to={'/welcome'} />\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default AuthenticatedRoute;\r\n","import styled from 'styled-components';\r\nimport { theme } from '../../utils/theme';\r\n\r\nexport interface IInputProps {\r\n    isValid?: boolean;\r\n    isInvalid?: boolean;\r\n}\r\n\r\nconst Input = styled.input<IInputProps>`\r\n    all: unset;\r\n    position: relative;\r\n    box-sizing: border-box;\r\n    padding: .5rem;\r\n    padding-left: 1rem;\r\n    padding-right: ${({ type }) => type === 'password' ? '3rem' : '1rem'};\r\n    width: 100%;\r\n    height: 3rem;\r\n    color: ${theme.fontColor};\r\n    margin-bottom: .7rem;\r\n    background-color: ${theme.defaultColor};\r\n    border: 1px solid;\r\n    border-color: ${({ isValid, isInvalid }) => isValid ? theme.successColor : isInvalid ? theme.dangerColor : 'transparent'};\r\n    \r\n    ::placeholder {\r\n        text-transform: uppercase;\r\n        color: ${theme.fontColor};\r\n        letter-spacing: 1px;\r\n    }\r\n`;\r\n\r\nexport default Input;","import styled from 'styled-components';\r\nimport { theme } from '../../utils/theme';\r\n\r\ninterface IButtonProps {\r\n    variant: ('default' | 'primary');\r\n}\r\n\r\nconst Button = styled.button<IButtonProps>`\r\n    all: unset;\r\n    box-sizing: border-box;\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 3rem;\r\n    background-color: ${({ variant }) => variant === 'default' ? 'rgba(255,255,255,0.15)' : theme.primaryColor};\r\n    color: ${theme.fontColor};\r\n    text-transform: uppercase;\r\n    margin-bottom: .7rem;\r\n    font-weight: 700;\r\n    box-shadow: ${({variant}) => variant === 'default' ? 'none' : '4px 4px 20px rgba(0,0,0,0.6)'}\r\n`;\r\n\r\nexport default Button;","import * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport { theme } from '../../utils/theme';\r\nimport Input, { IInputProps } from './input';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEye, faEyeSlash } from '@fortawesome/free-regular-svg-icons';\r\n\r\ninterface IPasswordInput { }\r\n\r\nconst PasswordInput: React.FC<IPasswordInput & React.InputHTMLAttributes<HTMLInputElement> & IInputProps> = ({ style, ...rest }) => {\r\n\r\n    const [showPW, setShowPW] = React.useState<boolean>(false);\r\n\r\n    return (\r\n        <PasswordInputContainer style={{ ...style }}>\r\n            <EyeIconContainer>\r\n                {!showPW\r\n                    ? <FontAwesomeIcon icon={faEye} style={{ width: '1.5rem', height: '1.5rem' }} onClick={() => setShowPW(true)} />\r\n                    : <FontAwesomeIcon icon={faEyeSlash} style={{ width: '1.5rem', height: '1.5rem' }} onClick={() => setShowPW(false)} />\r\n                }\r\n            </EyeIconContainer>\r\n            <Input type={showPW ? 'text' : 'password'} {...rest} />\r\n        </PasswordInputContainer>\r\n    );\r\n}\r\n\r\nconst PasswordInputContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n`;\r\n\r\nconst EyeIconContainer = styled.div`\r\n    z-index: 10;\r\n    position: absolute;\r\n    height: calc(100% - .7rem);\r\n    width: 3rem;\r\n    top: 0;\r\n    right: 0;\r\n    color: ${theme.fontColor};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport default PasswordInput;","import styled from 'styled-components';\r\nimport { theme } from '../../utils/theme';\r\n\r\nconst SocialMediaButton = styled.button`\r\n    all: unset;\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 3rem;\r\n    height: 3rem;\r\n    border: 3px solid ${theme.fontColor};\r\n    border-radius: 50%;\r\n    background: transparent;\r\n    color: ${theme.fontColor};\r\n    margin: 0 .75rem;\r\n`;\r\n\r\nexport default SocialMediaButton;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}