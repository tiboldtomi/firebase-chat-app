{"version":3,"sources":["utils/theme.ts","components/app/styles.ts","screens/home/index.tsx","screens/login/hooks/use-animation.ts","screens/login/styles.ts","screens/welcome/styles.ts","stores/notification/notification.actions.ts","stores/notification/notification.reducer.ts","interfaces/notification.interface.ts","stores/notification/index.tsx","screens/login/index.tsx","screens/welcome/hooks/use-animation.ts","screens/welcome/index.tsx","screens/register/hooks/use-animation.ts","screens/register/styles.ts","screens/register/index.tsx","components/app/index.tsx","components/notification/styles.ts","components/notification/index.tsx","components/styles/input.ts","components/password-input/styles.ts","components/password-input/index.tsx","components/authenticated-route/index.tsx","components/styles/button.ts","components/styles/social-media-button.ts","serviceWorker.ts","index.tsx"],"names":["theme","fontSize","defaultFontColor","primaryFontColor","successFontColor","dangerFontColor","warningFontColor","primaryColor","defaultColor","dark","dark06","darker","darker06","successColor","dangerColor","successBorderColor","dangerBorderColor","warningBorderColor","successBackgroundColor","dangerBackgroundColor","warningBackgroundColor","AppContainer","styled","div","Circle","InnerCircle","Home","useAnimation","titleAnimation","useSpring","opacity","from","delay","subTitleAnimation","transform","emailFieldAnimation","pwFieldAnimation","loginButtonAnimation","socialMediaAnimation","LoginContainer","H1","h1","SubTitle","h2","NotificationActions","WelcomeContainer","WelcomeCircle","TitleContainer","TitleIcon","ControlsContainer","P","p","SocialMediaContainer","NotificationType","notificationReducer","state","action","type","ADD","message","payload","RESET","Error","initialState","NotificationStoreContext","React","notification","dispatchNotification","useNotificationStore","validationSchema","yup","shape","email","required","password","min","Login","formController","useFormik","initialValues","onSubmit","Success","console","log","resetForm","isSubmitting","isValid","Danger","errors","AP","animated","AH1","ASubTitle","ASocialMediaContainer","style","name","placeholder","value","values","onChange","handleChange","touched","isInvalid","variant","onClick","handleSubmit","icon","faFacebookF","size","faGoogle","faGithub","defaultButtonTransform","primaryButtonTransform","socialMediaContainerTransform","titleIconScale","Welcome","history","useHistory","top","set","moveTo","path","setTimeout","push","ATitleIcon","AWelcomeCircle","AControlsContainer","faAngellist","width","height","usernameFieldAnimation","confirmPWFieldAnimation","registerButtonAnimation","RegisterContainer","Register","App","basename","exact","render","screen","userLoggedIn","NotificationContainer","NotificationText","strLenght","IconContainer","AIconContainer","ANotificationContainer","Notification","config","default","friction","undefined","faExclamation","Warning","faInfo","faCheck","length","Input","input","PasswordInputContainer","EyeIconContainer","rest","showPW","setShowPW","faEyeSlash","faEye","AuthenticatedRoute","to","Button","button","SocialMediaButton","Boolean","window","location","hostname","match","ReactDOM","children","Provider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bba2011f.chunk.js","sourcesContent":["const theme = {\r\n    fontSize: '16px',\r\n    defaultFontColor: '#fff',\r\n    primaryFontColor: '#b36162',\r\n    successFontColor: '#155724',\r\n    dangerFontColor: '#721c24',\r\n    warningFontColor: '#856404',\r\n\r\n    primaryColor: '#A7696A',\r\n    defaultColor: 'rgba(255,255,255,0.15)',\r\n    dark: 'rgba(48,48,48,1)',\r\n    dark06: 'rgba(48,48,48,0.6)',\r\n    darker: 'rgba(30,30,30,1)',\r\n    darker06: 'rgba(30,30,30,0.6)',\r\n    successColor: '#28a745',\r\n    dangerColor: '#dc3545',\r\n\r\n    // Notification theme\r\n    successBorderColor: '#c3e6cb',\r\n    dangerBorderColor: '#f5c6cb',\r\n    warningBorderColor: '#ffeeba',\r\n    successBackgroundColor: '#d4edda',\r\n    dangerBackgroundColor: '#f8d7da',\r\n    warningBackgroundColor: '#fff3cd',\r\n};\r\n\r\nexport default theme;","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\n\r\nexport const AppContainer = styled.div`\r\n    position: relative;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-color: ${theme.dark}\r\n`;\r\n\r\nexport const Circle = styled.div`\r\n    position: absolute;\r\n    bottom: -350px;\r\n    left: -20px;\r\n    width: 1000px;\r\n    height: 1000px;\r\n    border-radius: 50%;\r\n    background-color: ${theme.darker06};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const InnerCircle = styled.div`\r\n    width: 700px;\r\n    height: 700px;\r\n    border-radius: 50%;\r\n    background-color: ${theme.dark};\r\n`;","import * as React from 'react';\r\n\r\ninterface IHomeProps { }\r\n\r\nconst Home: React.FC<IHomeProps> = () => {\r\n\r\n    return (\r\n        <div>{'Home'}</div>\r\n    );\r\n}\r\n\r\nexport default Home;","import { useSpring } from 'react-spring';\r\n\r\nconst useAnimation = () => {\r\n    const { opacity: titleAnimation } = useSpring({\r\n        opacity: 1,\r\n        from: { opacity: 0 },\r\n        delay: 0,\r\n    });\r\n    const { transform: subTitleAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 100\r\n    });\r\n    const { transform: emailFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 200\r\n    });\r\n    const { transform: pwFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 300\r\n    });\r\n    const { transform: loginButtonAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 400\r\n    });\r\n    const { transform: socialMediaAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 500\r\n    });\r\n\r\n    return {\r\n        titleAnimation,\r\n        pwFieldAnimation,\r\n        subTitleAnimation,\r\n        emailFieldAnimation,\r\n        loginButtonAnimation,\r\n        socialMediaAnimation,\r\n    };\r\n}\r\n\r\nexport default useAnimation;","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\n\r\nexport const LoginContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 15vh 10vw 1vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n`;\r\n\r\nexport const H1 = styled.h1`\r\n    font-size: 1.6rem;\r\n    color: ${theme.defaultFontColor};\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    margin-bottom: 1rem;\r\n    font-weight: 600;\r\n    margin-bottom: 25vh;\r\n`;\r\n\r\nexport const SubTitle = styled.h2`\r\n    font-size: 1.6rem;\r\n    color: ${theme.primaryFontColor};\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    margin-bottom: 1rem;\r\n    font-weight: 600;\r\n`;","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\n\r\nexport const WelcomeContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n`;\r\n\r\nexport const WelcomeCircle = styled.div`\r\n    position: absolute;\r\n    transform: translate(-50%, -50%);\r\n    left: 50%;\r\n    width: 100vh;\r\n    height: 100vh;\r\n    border-radius: 50%;\r\n    box-shadow: inset -1px -1px 10px rgba(0,0,0,0.6), 5px 5px 25px rgba(0,0,0,0.6), -5px -5px 25px rgba(0,0,0,0.6);\r\n    background-color: ${theme.primaryColor};\r\n    background-image: linear-gradient(rgba(255,255,255,0.4), rgba(255,255,255,0));\r\n`;\r\n\r\nexport const H1 = styled.h1`\r\n    font-size: 2.3rem;\r\n    color: ${theme.defaultFontColor};\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    letter-spacing: 2px;\r\n    margin-bottom: 1rem;\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n    position: absolute;\r\n    bottom: 5%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const TitleIcon = styled.div`\r\n    width: 5.5rem;\r\n    height: 5.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: ${theme.defaultFontColor}\r\n`;\r\n\r\nexport const ControlsContainer = styled.div`\r\n    width: 100%;\r\n    height: 40vh;\r\n    padding: 1vh 10vw;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n`;\r\n\r\nexport const P = styled.p`\r\n    font-size: 0.8rem;\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    color: ${theme.defaultFontColor};\r\n    margin: 1.5rem 0;\r\n    letter-spacing: 1px;\r\n    text-align: center;\r\n`;\r\n\r\nexport const SocialMediaContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;","export enum NotificationActions {\r\n    ADD = 'ADD',\r\n    RESET = 'RESET',\r\n};","import { IAction } from '../../interfaces/action.interface';\r\nimport { NotificationActions } from './notification.actions';\r\nimport { INotification } from '../../interfaces/notification.interface';\r\n\r\nexport const notificationReducer = (state: INotification, action: IAction<NotificationActions, INotification | undefined>): INotification => {\r\n    switch (action.type) {\r\n        case NotificationActions.ADD:\r\n            if (state.message === null) {\r\n                return {\r\n                    ...state,\r\n                    ...action.payload,\r\n                };\r\n            }\r\n            else return state;\r\n\r\n        case NotificationActions.RESET:\r\n            return {\r\n                type: null,\r\n                message: null,\r\n            };\r\n\r\n        default:\r\n            throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n}","import * as React from 'react';\r\nimport { IAction } from './action.interface';\r\nimport { NotificationActions } from '../stores/notification/notification.actions';\r\n\r\nexport enum NotificationType {\r\n    Danger = 'Danger',\r\n    Warning = 'Warning',\r\n    Success = 'Success',\r\n}\r\n\r\nexport interface INotification {\r\n    type: NotificationType | null;\r\n    message: string | null;\r\n}\r\n\r\nexport interface INotificationContext {\r\n    notification: INotification;\r\n    dispatchNotification: React.Dispatch<IAction<NotificationActions, INotification | undefined>>;\r\n}","import * as React from 'react';\r\nimport { notificationReducer } from './notification.reducer';\r\nimport { INotification, INotificationContext } from '../../interfaces/notification.interface';\r\n\r\nconst initialState: INotification = {\r\n    type: null,\r\n    message: null,\r\n};\r\n\r\nconst NotificationStoreContext = React.createContext<INotificationContext>({ notification: initialState, dispatchNotification: () => { } });\r\n\r\nexport const NotificationStoreProvider: React.FC<{}> = ({ children }) => {\r\n    const [notification, dispatchNotification] = React.useReducer(notificationReducer, initialState);\r\n\r\n    return (\r\n        <NotificationStoreContext.Provider value={{ notification, dispatchNotification }}>\r\n            {children}\r\n        </NotificationStoreContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useNotificationStore = () => React.useContext(NotificationStoreContext);","import * as yup from 'yup';\r\nimport * as React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { useAnimation } from './hooks';\r\nimport { animated } from 'react-spring';\r\nimport { LoginContainer, H1, SubTitle } from './styles';\r\nimport { SocialMediaContainer, P } from '../welcome/styles';\r\nimport { useNotificationStore } from '../../stores/notification';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { NotificationType } from '../../interfaces/notification.interface';\r\nimport { Button, Input, SocialMediaButton, PasswordInput } from '../../components';\r\nimport { faGoogle, faFacebookF, faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { NotificationActions } from '../../stores/notification/notification.actions';\r\n\r\nconst validationSchema = yup.object().shape({\r\n    email: yup.string()\r\n        .required('Every field is required!')\r\n        .email('Email is not valid!'),\r\n    password: yup.string()\r\n        .required('Every field is required!')\r\n        .min(6, 'Password must be at least 6 characters!'),\r\n});\r\n\r\ninterface IFormValues {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ninterface ILoginProps { }\r\n\r\nconst Login: React.FC<ILoginProps> = () => {\r\n\r\n    const { dispatchNotification } = useNotificationStore();\r\n\r\n    const {\r\n        titleAnimation,\r\n        pwFieldAnimation,\r\n        subTitleAnimation,\r\n        emailFieldAnimation,\r\n        socialMediaAnimation,\r\n        loginButtonAnimation,\r\n    } = useAnimation();\r\n\r\n    const formController = useFormik<IFormValues>({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n        onSubmit: ({ email, password }) => {\r\n            dispatchNotification({\r\n                type: NotificationActions.ADD,\r\n                payload: {\r\n                    type: NotificationType.Success,\r\n                    message: 'Form submitted!! :)',\r\n                }\r\n            });\r\n            console.log('%c Submitted!', 'color: green');\r\n            formController.resetForm();\r\n        },\r\n        validationSchema,\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        if (!formController.isSubmitting && !formController.isValid) {\r\n            dispatchNotification({\r\n                type: NotificationActions.ADD,\r\n                payload: {\r\n                    type: NotificationType.Danger,\r\n                    message: (formController.errors.email || formController.errors.password) as string,\r\n                }\r\n            });\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [formController.isSubmitting]);\r\n\r\n    const AP = animated(P);\r\n    const AH1 = animated(H1);\r\n    const ASubTitle = animated(SubTitle);\r\n    const ASocialMediaContainer = animated(SocialMediaContainer);\r\n\r\n    console.log('formController: ', formController);\r\n\r\n    return (\r\n        <LoginContainer>\r\n            <AH1 style={{ opacity: titleAnimation }}>{'welcome back'}</AH1>\r\n            <ASubTitle style={{ transform: subTitleAnimation }}>{'login in'}</ASubTitle>\r\n            <Input\r\n                name={'email'}\r\n                placeholder={'email'}\r\n                value={formController.values.email}\r\n                onChange={formController.handleChange}\r\n                style={{ transform: emailFieldAnimation }}\r\n                isValid={!!(formController.touched.email && !formController.errors.email)}\r\n                isInvalid={!!(formController.touched.email && !!formController.errors.email)}\r\n            />\r\n            <PasswordInput\r\n                name={'password'}\r\n                placeholder={'password'}\r\n                value={formController.values.password}\r\n                onChange={formController.handleChange}\r\n                style={{ transform: pwFieldAnimation }}\r\n                isValid={!!(formController.touched.password && !formController.errors.password)}\r\n                isInvalid={!!(formController.touched.password && !!formController.errors.password)}\r\n            />\r\n            <Button\r\n                variant={'primary'}\r\n                onClick={formController.handleSubmit}\r\n                style={{ transform: loginButtonAnimation }}\r\n            >\r\n                {'Login'}\r\n            </Button>\r\n            <AP style={{ transform: socialMediaAnimation }}>{'or login using social media'}</AP>\r\n            <ASocialMediaContainer style={{ transform: socialMediaAnimation }}>\r\n                <SocialMediaButton onClick={() => console.log('facebook login onclick')}>\r\n                    <FontAwesomeIcon icon={faFacebookF} size={'2x'} />\r\n                </SocialMediaButton>\r\n                <SocialMediaButton onClick={() => console.log('google login onclick')}>\r\n                    <FontAwesomeIcon icon={faGoogle} size={'2x'} />\r\n                </SocialMediaButton>\r\n                <SocialMediaButton onClick={() => console.log('github login onclick')}>\r\n                    <FontAwesomeIcon icon={faGithub} size={'2x'} />\r\n                </SocialMediaButton>\r\n            </ASocialMediaContainer>\r\n        </LoginContainer>\r\n    );\r\n}\r\n\r\nexport default Login;","import { useSpring } from 'react-spring';\r\n\r\nconst useAnimation = () => {\r\n    const { transform: defaultButtonTransform } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px,600px, 0px)' },\r\n        delay: 200,\r\n    });\r\n\r\n    const { transform: primaryButtonTransform } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px,600px, 0px)' },\r\n        delay: 300,\r\n    });\r\n\r\n    const { transform: socialMediaContainerTransform } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px,600px, 0px)' },\r\n        delay: 400,\r\n    });\r\n\r\n    const { transform: titleIconScale } = useSpring({\r\n        transform: 'scale(1)',\r\n        from: { transform: 'scale(0)' },\r\n        delay: 700,\r\n    });\r\n\r\n    return {\r\n        titleIconScale,\r\n        defaultButtonTransform,\r\n        primaryButtonTransform,\r\n        socialMediaContainerTransform,\r\n    };\r\n}\r\n\r\nexport default useAnimation;","import * as React from 'react';\r\nimport { useAnimation } from './hooks';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSpring, animated } from 'react-spring';\r\nimport { Button, SocialMediaButton } from '../../components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGoogle, faFacebookF, faAngellist, faGithub } from '@fortawesome/free-brands-svg-icons'\r\nimport { WelcomeContainer, WelcomeCircle, H1, ControlsContainer, P, SocialMediaContainer, TitleContainer, TitleIcon } from './styles';\r\n\r\ninterface IWelcomeProps { }\r\n\r\nconst Welcome: React.FC<IWelcomeProps> = () => {\r\n    const history = useHistory();\r\n\r\n    const {\r\n        titleIconScale,\r\n        defaultButtonTransform,\r\n        primaryButtonTransform,\r\n        socialMediaContainerTransform,\r\n    } = useAnimation();\r\n\r\n    const [{ top, opacity }, set] = useSpring(() => ({ top: '-65%', opacity: 1 }));\r\n    set({ top: '5%' });\r\n\r\n    const moveTo = (path: string) => {\r\n        set({ top: '-65%', opacity: 0 });\r\n        setTimeout(() => history.push(path), 400);\r\n    };\r\n\r\n    const AP = animated(P);\r\n    const ATitleIcon = animated(TitleIcon);\r\n    const AWelcomeCircle = animated(WelcomeCircle);\r\n    const AControlsContainer = animated(ControlsContainer);\r\n    const ASocialMediaContainer = animated(SocialMediaContainer);\r\n\r\n    return (\r\n        <WelcomeContainer>\r\n            <AWelcomeCircle style={{ top }}>\r\n                <TitleContainer>\r\n                    <H1>{'Welcome'}</H1>\r\n                    <ATitleIcon style={{ transform: titleIconScale }}>\r\n                        <FontAwesomeIcon icon={faAngellist} style={{ width: '100%', height: '100%' }} />\r\n                    </ATitleIcon>\r\n                </TitleContainer>\r\n            </AWelcomeCircle>\r\n            <AControlsContainer style={{ opacity }}>\r\n                <Button variant={'default'} style={{ transform: defaultButtonTransform }} onClick={() => moveTo('/login')}>\r\n                    {'Login'}\r\n                </Button>\r\n                <Button variant={'primary'} style={{ transform: primaryButtonTransform }} onClick={() => moveTo('/register')}>\r\n                    {'Create account'}\r\n                </Button>\r\n                <AP style={{ transform: socialMediaContainerTransform }}>{'or login using social media'}</AP>\r\n                <ASocialMediaContainer style={{ transform: socialMediaContainerTransform }}>\r\n                    <SocialMediaButton onClick={() => console.log('facebook onclick')}>\r\n                        <FontAwesomeIcon icon={faFacebookF} size={'2x'} />\r\n                    </SocialMediaButton>\r\n                    <SocialMediaButton onClick={() => console.log('google plus onclick')}>\r\n                        <FontAwesomeIcon icon={faGoogle} size={'2x'} />\r\n                    </SocialMediaButton>\r\n                    <SocialMediaButton onClick={() => console.log('github login onclick')}>\r\n                        <FontAwesomeIcon icon={faGithub} size={'2x'} />\r\n                    </SocialMediaButton>\r\n                </ASocialMediaContainer>\r\n            </AControlsContainer>\r\n        </WelcomeContainer>\r\n    );\r\n}\r\n\r\nexport default Welcome;","import { useSpring } from 'react-spring';\r\n\r\nconst useAnimation = () => {\r\n    const { opacity: titleAnimation } = useSpring({\r\n        opacity: 1,\r\n        from: { opacity: 0 },\r\n        delay: 0,\r\n    });\r\n    const { transform: usernameFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 100\r\n    });\r\n    const { transform: emailFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 200\r\n    });\r\n    const { transform: pwFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 300\r\n    });\r\n    const { transform: confirmPWFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 400\r\n    });\r\n    const { transform: registerButtonAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 500\r\n    });\r\n\r\n    return {\r\n        titleAnimation,\r\n        pwFieldAnimation,\r\n        emailFieldAnimation,\r\n        usernameFieldAnimation,\r\n        confirmPWFieldAnimation,\r\n        registerButtonAnimation,\r\n    };\r\n}\r\n\r\nexport default useAnimation;","import styled from 'styled-components';\r\n\r\nexport const RegisterContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 15vh 10vw 1vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n`;","import * as React from 'react';\r\nimport { H1 } from '../login/styles';\r\nimport { useAnimation } from './hooks';\r\nimport { animated } from 'react-spring';\r\nimport { RegisterContainer } from './styles';\r\nimport { Button, Input, PasswordInput } from '../../components';\r\n\r\ninterface IRegisterProps { }\r\n\r\nconst Register: React.FC<IRegisterProps> = () => {\r\n\r\n    const {\r\n        titleAnimation,\r\n        pwFieldAnimation,\r\n        emailFieldAnimation,\r\n        usernameFieldAnimation,\r\n        confirmPWFieldAnimation,\r\n        registerButtonAnimation,\r\n    } = useAnimation();\r\n\r\n    const AH1 = animated(H1);\r\n\r\n    return (\r\n        <RegisterContainer>\r\n            <AH1 style={{ opacity: titleAnimation }}>{'Register now'}</AH1>\r\n            <Input style={{ transform: usernameFieldAnimation }} name={'username'} placeholder={'username'} />\r\n            <Input style={{ transform: emailFieldAnimation }} name={'email'} placeholder={'email'} />\r\n            <PasswordInput style={{ transform: pwFieldAnimation }} name={'password'} placeholder={'password'} />\r\n            <PasswordInput style={{ transform: confirmPWFieldAnimation }} name={'confirmPassword'} placeholder={'confirm password'} />\r\n            <Button style={{ transform: registerButtonAnimation }} variant={'primary'}>{'register'}</Button>\r\n        </RegisterContainer>\r\n    );\r\n}\r\n\r\nexport default Register;","import * as React from 'react';\r\nimport { AuthenticatedRoute, Notification } from '../';\r\nimport { AppContainer, Circle, InnerCircle } from './styles';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom';\r\nimport { Login, Home, Register, Welcome } from '../../screens';\r\n\r\ninterface IAppProps { }\r\n\r\nconst App: React.FC<IAppProps> = () => {\r\n\r\n    return (\r\n        <AppContainer>\r\n            <Notification />\r\n            <Circle>\r\n                <InnerCircle />\r\n            </Circle>\r\n            <HashRouter basename=\"/\">\r\n                <Switch>\r\n                    <Route exact={true} path={'/login'} render={() => <Login />} />\r\n                    <Route exact={true} path={'/welcome'} render={() => <Welcome />} />\r\n                    <Route exact={true} path={'/register'} render={() => <Register />} />\r\n                    <AuthenticatedRoute exact={true} path={'/'} screen={<Home />} userLoggedIn={false} />\r\n                </Switch>\r\n            </HashRouter>\r\n        </AppContainer>\r\n    );\r\n}\r\n\r\n\r\nexport default App;","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\nimport { NotificationType } from '../../interfaces/notification.interface';\r\n\r\ninterface INotificationContainerProps {\r\n    type: NotificationType;\r\n}\r\n\r\nconst NotificationContainer = styled.div<INotificationContainerProps>`\r\n    position: absolute;\r\n    z-index: 100;\r\n    top: 1vh;\r\n    left: 50%;\r\n    width: 94vw;\r\n    height: 7vh;\r\n    background: ${({ type }) => type === NotificationType.Danger\r\n        ? theme.dangerBackgroundColor\r\n        : type === NotificationType.Success\r\n            ? theme.successBackgroundColor\r\n            : theme.warningBackgroundColor};\r\n    border-radius: 5px;\r\n    border: 2px solid;\r\n    border-color: ${({ type }) => type === NotificationType.Danger\r\n        ? theme.dangerBorderColor\r\n        : type === NotificationType.Success\r\n            ? theme.successBorderColor\r\n            : theme.warningBorderColor};\r\n    color: ${({ type }) => type === NotificationType.Danger\r\n        ? theme.dangerFontColor\r\n        : type === NotificationType.Success\r\n            ? theme.successFontColor\r\n            : theme.warningFontColor};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n`;\r\n\r\nconst NotificationText = styled.p<{ strLenght: number }>`\r\n    font-size: ${({ strLenght }) => strLenght > 25 ? '.8rem' : '1rem'};\r\n    padding: 0 .5rem;\r\n    font-weight: 400;\r\n`;\r\n\r\nconst IconContainer = styled.div<INotificationContainerProps>`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 1.5rem;\r\n    height: 1.5rem;\r\n    border: 2px solid;\r\n    border-color: ${({ type }) => type === NotificationType.Danger\r\n        ? theme.dangerFontColor\r\n        : type === NotificationType.Success\r\n            ? theme.successFontColor\r\n            : theme.warningFontColor};\r\n    border-radius: 50%;\r\n    background: transparent;\r\n    color: ${({ type }) => type === NotificationType.Danger\r\n        ? theme.dangerFontColor\r\n        : type === NotificationType.Success\r\n            ? theme.successFontColor\r\n            : theme.warningFontColor};\r\n    margin-left: .5rem;\r\n`;\r\n\r\nconst AIconContainer = animated(IconContainer);\r\nconst ANotificationText = animated(NotificationText);\r\nconst ANotificationContainer = animated(NotificationContainer);\r\n\r\nexport {\r\n    IconContainer,\r\n    AIconContainer,\r\n    NotificationText,\r\n    ANotificationText,\r\n    NotificationContainer,\r\n    ANotificationContainer,\r\n};","import * as React from 'react';\r\nimport { useSpring, config } from 'react-spring';\r\nimport { useNotificationStore } from '../../stores';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { NotificationType } from '../../interfaces/notification.interface';\r\nimport { faCheck, faInfo, faExclamation } from '@fortawesome/free-solid-svg-icons';\r\nimport { ANotificationContainer, NotificationText, AIconContainer } from './styles';\r\nimport { NotificationActions } from '../../stores/notification/notification.actions';\r\n\r\ninterface INotificationProps { }\r\n\r\nconst Notification: React.FC<INotificationProps> = () => {\r\n\r\n    const { notification, dispatchNotification } = useNotificationStore();\r\n\r\n    const [{ transform, opacity }, set] = useSpring(() => ({\r\n        transform: 'translate(-50%, -150px)',\r\n        opacity: 0,\r\n        config: { ...config.default, friction: 16 }\r\n    }));\r\n\r\n    React.useEffect(() => {\r\n        if (notification.message !== null) {\r\n            set({ opacity: 1, transform: 'translate(-50%, 0px)' });\r\n            setTimeout(() => set({ opacity: 0, transform: 'translate(-50%, -150px)' }), 3200);\r\n            setTimeout(() => dispatchNotification({ type: NotificationActions.RESET, payload: undefined }), 4000);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [notification]);\r\n\r\n\r\n    if (!!notification.message) {\r\n        return (\r\n            <ANotificationContainer type={notification.type} style={{ transform, opacity }}>\r\n                <AIconContainer type={notification.type}>\r\n                    <FontAwesomeIcon\r\n                        icon={\r\n                            notification.type === NotificationType.Danger\r\n                                ? faExclamation\r\n                                : notification.type === NotificationType.Warning\r\n                                    ? faInfo\r\n                                    : faCheck\r\n                        }\r\n                    />\r\n                </AIconContainer>\r\n                <NotificationText strLenght={notification.message.length}>{notification.message}</NotificationText>\r\n            </ANotificationContainer>\r\n        );\r\n    }\r\n    return <></>;\r\n}\r\n\r\nexport default Notification;","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\nexport interface IInputProps {\r\n    isValid?: boolean;\r\n    isInvalid?: boolean;\r\n}\r\n\r\nconst Input = styled.input<IInputProps>`\r\n    all: unset;\r\n    position: relative;\r\n    box-sizing: border-box;\r\n    padding: .5rem;\r\n    padding-left: 1rem;\r\n    padding-right: ${({ type }) => type === 'password' ? '3rem' : '1rem'};\r\n    width: 100%;\r\n    height: 3rem;\r\n    color: ${theme.defaultFontColor};\r\n    margin-bottom: .7rem;\r\n    background-color: ${theme.defaultColor};\r\n    border: 1px solid;\r\n    border-color: ${({ isValid, isInvalid }) => isValid ? theme.successColor : isInvalid ? theme.dangerColor : 'transparent'};\r\n    \r\n    ::placeholder {\r\n        text-transform: uppercase;\r\n        color: ${theme.defaultFontColor};\r\n        letter-spacing: 1px;\r\n    }\r\n`;\r\n\r\nexport default animated(Input);","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\n\r\nexport const PasswordInputContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n`;\r\n\r\nexport const EyeIconContainer = styled.div`\r\n    z-index: 10;\r\n    position: absolute;\r\n    height: calc(100% - .7rem);\r\n    width: 3rem;\r\n    top: 0;\r\n    right: 0;\r\n    color: ${theme.defaultFontColor};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;","import * as React from 'react';\r\nimport { animated } from 'react-spring';\r\nimport Input, { IInputProps } from '../styles/input';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { EyeIconContainer, PasswordInputContainer } from './styles';\r\nimport { faEye, faEyeSlash } from '@fortawesome/free-regular-svg-icons';\r\n\r\ninterface IPasswordInput { }\r\n\r\nconst PasswordInput: React.FC<IPasswordInput & React.InputHTMLAttributes<HTMLInputElement> & IInputProps> = ({ style, ...rest }) => {\r\n\r\n    const [showPW, setShowPW] = React.useState<boolean>(false);\r\n\r\n    return (\r\n        <PasswordInputContainer style={{ ...style }}>\r\n            <EyeIconContainer>\r\n                {!showPW\r\n                    ? <FontAwesomeIcon icon={faEye} style={{ width: '1.5rem', height: '1.5rem' }} onClick={() => setShowPW(true)} />\r\n                    : <FontAwesomeIcon icon={faEyeSlash} style={{ width: '1.5rem', height: '1.5rem' }} onClick={() => setShowPW(false)} />\r\n                }\r\n            </EyeIconContainer>\r\n            <Input type={showPW ? 'text' : 'password'} {...rest} />\r\n        </PasswordInputContainer>\r\n    );\r\n}\r\n\r\nexport default animated(PasswordInput);","import * as React from 'react';\r\nimport { Route, RouteProps, Redirect } from 'react-router-dom';\r\n\r\ninterface IAuthenticatedRouteProps {\r\n    userLoggedIn: boolean;\r\n    screen: JSX.Element;\r\n}\r\n\r\nconst AuthenticatedRoute: React.FC<IAuthenticatedRouteProps & RouteProps> = ({ userLoggedIn, screen, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={() => userLoggedIn\r\n                ? screen\r\n                : <Redirect to={'/welcome'} />\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default AuthenticatedRoute;\r\n","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\ninterface IButtonProps {\r\n    variant: ('default' | 'primary');\r\n}\r\n\r\nconst Button = styled.button<IButtonProps>`\r\n    all: unset;\r\n    box-sizing: border-box;\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 3rem;\r\n    background-color: ${({ variant }) => variant === 'default' ? theme.defaultColor : theme.primaryColor};\r\n    color: ${theme.defaultFontColor};\r\n    text-transform: uppercase;\r\n    margin-bottom: .7rem;\r\n    font-weight: 700;\r\n    box-shadow: ${({ variant }) => variant === 'default' ? 'none' : '4px 4px 20px rgba(0,0,0,0.6)'}\r\n`;\r\n\r\nexport default animated(Button);","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\n\r\nconst SocialMediaButton = styled.button`\r\n    all: unset;\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 3rem;\r\n    height: 3rem;\r\n    border: 3px solid ${theme.defaultFontColor};\r\n    border-radius: 50%;\r\n    background: transparent;\r\n    color: ${theme.defaultFontColor};\r\n    margin: 0 .75rem;\r\n`;\r\n\r\nexport default SocialMediaButton;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components';\nimport * as serviceWorker from './serviceWorker';\nimport { NotificationStoreProvider } from './stores';\n\nReactDOM.render(\n    <NotificationStoreProvider>\n        <App />\n    </NotificationStoreProvider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}