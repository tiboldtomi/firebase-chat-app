{"version":3,"sources":["enums/login-platform.ts","utils/theme.ts","enums/notification-type.ts","constants/firebase-config.ts","utils/use-firebase.ts","utils/use-previous.ts","screens/home/styles.ts","stores/notification/notification.actions.ts","stores/auth/index.tsx","stores/notification/notification.reducer.ts","stores/loader-banner/loader-banner.actions.ts","stores/notification/index.tsx","stores/loader-banner/loader-banner.reducer.ts","stores/loader-banner/index.tsx","screens/home/index.tsx","screens/login/hooks/use-animation.ts","screens/welcome/styles.ts","screens/login/styles.ts","screens/login/index.tsx","screens/welcome/hooks/use-animation.ts","screens/welcome/index.tsx","screens/profile/styles.ts","screens/profile/index.tsx","screens/register/hooks/use-animation.ts","screens/register/styles.ts","screens/register/index.tsx","components/app/styles.ts","components/app/index.tsx","components/rating/styles.ts","components/rating/index.tsx","components/notification/styles.ts","components/notification/index.tsx","components/loader-banner/styles.ts","components/loader-banner/index.tsx","components/styles/input.ts","components/password-input/styles.ts","components/password-input/index.tsx","components/authorized-route/index.tsx","components/unauthorized-route/index.tsx","components/styles/button.ts","components/styles/social-media-button.ts","components/styles/user-circular-picture.ts","serviceWorker.ts","index.tsx"],"names":["LoginPlatform","theme","vw","document","documentElement","clientWidth","vh","clientHeight","baseHeight","fontSize","defaultFontColor","primaryFontColor","successFontColor","dangerFontColor","warningFontColor","primaryColor","defaultColor","dark","dark06","darker","darker06","successColor","dangerColor","successBorderColor","dangerBorderColor","warningBorderColor","successBackgroundColor","dangerBackgroundColor","warningBackgroundColor","goldColor","NotificationType","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","auth","db","isInitialized","Promise","resolve","onAuthStateChanged","login","email","password","signInWithEmailAndPassword","logout","signOut","register","username","a","createUserWithEmailAndPassword","currentUser","updateProfile","displayName","sendPasswordResetEmail","loginSocialMedia","platform","provider","Facebook","firebase","FacebookAuthProvider","Google","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","initializeApp","this","firestore","useFirebase","usePrevious","value","ref","React","current","NotificationActions","_HomeContainer","styled","div","_TitleContainer","_H1","h1","_TitleIcon","_SubTitle","h2","H1","animated","HomeContainer","AuthContext","AuthStoreProvider","children","setCurrentUser","unsubscribe","user","Provider","useAuthStore","LoaderBannerActions","notificationReducer","state","action","type","ADD","payload","RESET","DELETE","filter","noti","id","Error","initialState","NotificationStoreContext","notifications","dispatchNotification","NotificationStoreProvider","useNotificationStore","loaderBannerReducer","START","isLoading","text","STOP","undefined","LoaderBannerContext","loaderBanner","dispatchIsLoading","LoaderBannerStoreProvider","useLoaderBannerStore","Home","setUsername","placeholder","onChange","e","target","variant","onClick","then","uuid","timeStamp","Date","now","Success","message","useAnimation","titleAnimation","useSpring","opacity","from","delay","subTitleAnimation","transform","emailFieldAnimation","pwFieldAnimation","loginButtonAnimation","socialMediaAnimation","titleIconAnimation","_WelcomeContainer","_WelcomeCircle","_ControlsContainer","_P","p","_SocialMediaContainer","P","TitleIcon","WelcomeCircle","TitleContainer","WelcomeContainer","ControlsContainer","SocialMediaContainer","_LoginContainer","_ForgotPassword","SubTitle","LoginContainer","validationSchema","yup","shape","required","min","Login","formController","useFormik","initialValues","onSubmit","resetForm","catch","Danger","isSubmitting","isValid","key","errors","setTimeout","_loginWithSocialMedia","style","icon","faSignInAlt","width","height","name","values","handleChange","touched","isInvalid","handleSubmit","faFacebookF","size","faGoogle","GitHub","faGithub","defaultButtonTransform","primaryButtonTransform","socialMediaContainerTransform","titleIconScale","Welcome","history","useHistory","set","moveTo","path","push","faTrophy","_ProfileContainer","_HeaderContainer","_HeaderNavContainer","_UserAvatar","_UsernameText","ProfileContainer","HeaderContainer","HeaderNavContainer","UsernameText","UserAvatar","Profile","show","setShow","marginBottom","config","default","friction","hideTextOpacity","hideTextTransform","showTextOpacity","showTextTransform","faEdit","color","faSignOutAlt","url","display","flexDirection","alignItems","padding","justifyContent","backgroundColor","boxSizing","overflow","textAlign","usernameFieldAnimation","confirmPWFieldAnimation","registerButtonAnimation","RegisterContainer","max","matches","confirmPassword","oneOf","Register","faUserPlus","AppContainer","ScreensContainer","BottomCircle","TopCircle","InnerCircle","App","firebaseInitialized","setFirebaseInitialized","forceShow","basename","exact","screen","_RatingContainer","_Text","Text","RatingContainer","Rating","faStar","NotificationContainer","NotificationText","strLenght","IconContainer","DeleteIconContainer","button","AIconContainer","ANotificationContainer","Notification","dragId","setDragId","notificationAnimations","useTransition","map","n","index","y","top","leave","enter","update","prevNotifications","length","newNotification","find","prevNoti","indexOf","notificationCenter","left","setManualDrag","bind","useDrag","down","mx","movement","args","swipeLimit","immediate","notification","item","props","interpolate","x","faExclamation","Warning","faInfo","faCheck","faTimes","Banner","LoaderContainer","loaderAnimation","keyframes","Loader","innerLoaderAnimation","InnerLoader","ALoaderContainer","LoaderBanner","stlye","Input","input","PasswordInputContainer","EyeIconContainer","label","rest","showPW","setShowPW","htmlFor","faEyeSlash","faEye","AuthorizedRoute","render","to","UnauthorizedRoute","Button","SocialMediaButton","UserCircularPicture","Boolean","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.94bde57d.chunk.js","sourcesContent":["enum LoginPlatform {\r\n    Google = 'Google',\r\n    GitHub = 'GitHub',\r\n    Facebook = 'Facebook',\r\n};\r\n\r\nexport default LoginPlatform;\r\n","const theme = {\r\n    vw: document.documentElement.clientWidth,\r\n    vh: document.documentElement.clientHeight,\r\n\r\n    baseHeight: '3rem',\r\n\r\n    fontSize: '16px',\r\n    defaultFontColor: '#fff',\r\n    primaryFontColor: '#0e9aa7',\r\n    successFontColor: '#155724',\r\n    dangerFontColor: '#721c24',\r\n    warningFontColor: '#856404',\r\n\r\n    primaryColor: '#3da4ab',\r\n    defaultColor: 'rgba(255,255,255,0.15)',\r\n    dark: 'rgba(48,48,48,1)',\r\n    dark06: 'rgba(48,48,48,0.6)',\r\n    darker: 'rgba(30,30,30,1)',\r\n    darker06: 'rgba(30,30,30,0.6)',\r\n    successColor: '#28a745',\r\n    dangerColor: '#dc3545',\r\n\r\n    // Notification theme\r\n    successBorderColor: '#c3e6cb',\r\n    dangerBorderColor: '#f5c6cb',\r\n    warningBorderColor: '#ffeeba',\r\n    successBackgroundColor: '#d4edda',\r\n    dangerBackgroundColor: '#f8d7da',\r\n    warningBackgroundColor: '#fff3cd',\r\n\r\n    goldColor: '#f7b124',\r\n};\r\n\r\nexport default theme;","enum NotificationType {\r\n    Danger = 'Danger',\r\n    Warning = 'Warning',\r\n    Success = 'Success',\r\n};\r\n\r\nexport default NotificationType;\r\n\r\n","const firebaseConfig = {\r\n    apiKey: \"AIzaSyBs1gAvHKjBf9-qaZCkdstMTD0kRkH2QKU\",\r\n    authDomain: \"homiescup-89859.firebaseapp.com\",\r\n    databaseURL: \"https://homiescup-89859.firebaseio.com\",\r\n    projectId: \"homiescup-89859\",\r\n    storageBucket: \"homiescup-89859.appspot.com\",\r\n    messagingSenderId: \"300391296614\",\r\n    appId: \"1:300391296614:web:a5b1fb5a473994912887a7\",\r\n    measurementId: \"G-SEM8Q31KR9\"\r\n};\r\n\r\nexport default firebaseConfig;","import 'firebase/auth';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firebase-firestore';\r\nimport { LoginPlatform } from '../enums';\r\nimport { firebaseConfig } from '../constants';\r\n\r\nclass Firebase {\r\n    public auth: firebase.auth.Auth;\r\n    public db: firebase.firestore.Firestore;\r\n\r\n    public constructor() {\r\n        firebase.initializeApp(firebaseConfig);\r\n        this.auth = firebase.auth();\r\n        this.db = firebase.firestore();\r\n    }\r\n\r\n    public isInitialized = () => {\r\n        return new Promise(resolve => {\r\n            this.auth.onAuthStateChanged(resolve);\r\n        });\r\n    }\r\n\r\n    public login = (email: string, password: string) => {\r\n        return this.auth.signInWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    public logout = () => {\r\n        return this.auth.signOut();\r\n    }\r\n\r\n    public register = async (username: string, email: string, password: string) => {\r\n        await this.auth.createUserWithEmailAndPassword(email, password);\r\n        return this.auth.currentUser?.updateProfile({\r\n            displayName: username\r\n        });\r\n    }\r\n\r\n    public sendPasswordResetEmail = (email: string) => {\r\n        return this.auth.sendPasswordResetEmail(email);\r\n    }\r\n\r\n    public loginSocialMedia = (platform: LoginPlatform) => {\r\n        const provider = platform === LoginPlatform.Facebook\r\n            ? new firebase.auth.FacebookAuthProvider()\r\n            : platform === LoginPlatform.Google\r\n                ? new firebase.auth.GoogleAuthProvider()\r\n                : new firebase.auth.GithubAuthProvider();\r\n        return this.auth.signInWithPopup(provider);\r\n    }\r\n};\r\n\r\nconst firebaseInstance = new Firebase();\r\n\r\nconst useFirebase = () => firebaseInstance;\r\n\r\nexport default useFirebase;","import * as React from 'react';\r\n\r\nconst usePrevious = <T extends any>(value: T) => {\r\n    const ref = React.useRef<T>();\r\n    React.useEffect(() => {\r\n        ref.current = value;\r\n    }, [value]);\r\n    return ref.current;\r\n};\r\n\r\nexport default usePrevious;","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\nconst _HomeContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 15vh 10vw 1vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n`;\r\n\r\nconst _TitleContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 15vh;\r\n`;\r\n\r\nconst _H1 = styled.h1`\r\n    font-size: 1.6rem;\r\n    color: ${theme.defaultFontColor};\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    margin-bottom: 1rem;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _TitleIcon = styled.div`\r\n    height: 4rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: ${theme.defaultFontColor};\r\n`;\r\n\r\nconst _SubTitle = styled.h2`\r\n    font-size: 1.6rem;\r\n    color: ${theme.primaryFontColor};\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    margin-bottom: 1rem;\r\n    font-weight: 600;\r\n`;\r\n\r\nexport const H1 = animated(_H1);\r\nexport const SubTitle = animated(_SubTitle);\r\nexport const TitleIcon = animated(_TitleIcon);\r\nexport const HomeContainer = animated(_HomeContainer);\r\nexport const TitleContainer = animated(_TitleContainer);","export enum NotificationActions {\r\n    ADD = 'ADD',\r\n    RESET = 'RESET',\r\n    DELETE = 'DELETE',\r\n};","import * as React from 'react';\r\nimport { User } from 'firebase';\r\nimport { useFirebase } from '../../utils';\r\n\r\nexport const AuthContext = React.createContext<{ currentUser: User | null }>({ currentUser: null });\r\n\r\nexport const AuthStoreProvider: React.FC<{}> = ({ children }) => {\r\n\r\n    const [currentUser, setCurrentUser] = React.useState<User | null>(null);\r\n    const { auth } = useFirebase();\r\n\r\n    React.useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => setCurrentUser(user));\r\n        return () => unsubscribe();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ currentUser }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useAuthStore = () => React.useContext(AuthContext);","import { IAction } from '../../interfaces';\r\nimport { NotificationActions } from './notification.actions';\r\nimport { INotification } from '../../interfaces/notification.interface';\r\n\r\nexport const notificationReducer = (state: INotification[], action: IAction<NotificationActions, INotification | undefined>): INotification[] => {\r\n    switch (action.type) {\r\n        case NotificationActions.ADD:\r\n            if (action.payload) {\r\n                return [\r\n                    action.payload,\r\n                    ...state\r\n                ]\r\n            }\r\n            else return [...state];\r\n\r\n        case NotificationActions.RESET:\r\n            return [];\r\n\r\n        case NotificationActions.DELETE:\r\n            return [\r\n                ...state.filter(noti => noti.id !== action.payload?.id)\r\n            ];\r\n\r\n        default:\r\n            throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n}","export enum LoaderBannerActions {\r\n    STOP = 'STOP',\r\n    START = 'START',\r\n};","import * as React from 'react';\r\nimport { notificationReducer } from './notification.reducer';\r\nimport { INotification, INotificationContext } from '../../interfaces';\r\n\r\nconst initialState: INotification[] = [];\r\n\r\nconst NotificationStoreContext = React.createContext<INotificationContext>({ notifications: initialState, dispatchNotification: () => { } });\r\n\r\nexport const NotificationStoreProvider: React.FC<{}> = ({ children }) => {\r\n    const [notifications, dispatchNotification] = React.useReducer(notificationReducer, initialState);\r\n\r\n    return (\r\n        <NotificationStoreContext.Provider value={{ notifications, dispatchNotification }}>\r\n            {children}\r\n        </NotificationStoreContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useNotificationStore = () => React.useContext(NotificationStoreContext);\r\n\r\nexport * from './notification.actions';","import { IAction } from '../../interfaces';\r\nimport { LoaderBannerActions } from './loader-banner.actions';\r\nimport { ILoaderBanner } from '../../interfaces/loader-banner.interface';\r\n\r\nexport const loaderBannerReducer = (state: ILoaderBanner, action: IAction<LoaderBannerActions, ILoaderBanner>): ILoaderBanner => {\r\n    switch (action.type) {\r\n        case LoaderBannerActions.START:\r\n            return {\r\n                isLoading: true,\r\n                text: action.payload.text || 'Loading...'\r\n            };\r\n\r\n        case LoaderBannerActions.STOP:\r\n            return {\r\n                isLoading: false,\r\n            }\r\n\r\n        default:\r\n            throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n}","import * as React from 'react';\r\nimport { loaderBannerReducer } from './loader-banner.reducer';\r\nimport { ILoaderBannerContext, ILoaderBanner } from '../../interfaces';\r\n\r\nconst initialState: ILoaderBanner = {\r\n    text: undefined,\r\n    isLoading: false,\r\n};\r\n\r\nconst LoaderBannerContext = React.createContext<ILoaderBannerContext>({ loaderBanner: initialState, dispatchIsLoading: () => { } });\r\n\r\nexport const LoaderBannerStoreProvider: React.FC<{}> = ({ children }) => {\r\n    const [loaderBanner, dispatchIsLoading] = React.useReducer(loaderBannerReducer, initialState);\r\n\r\n    return (\r\n        <LoaderBannerContext.Provider value={{ loaderBanner, dispatchIsLoading }}>\r\n            {children}\r\n        </LoaderBannerContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useLoaderBannerStore = () => React.useContext(LoaderBannerContext);\r\n\r\nexport * from './loader-banner.actions';","import { uuid } from 'uuidv4';\r\nimport * as React from 'react';\r\nimport { useFirebase } from '../../utils';\r\nimport { HomeContainer, H1 } from './styles';\r\nimport { NotificationType } from '../../enums';\r\nimport { Button, Input } from '../../components';\r\nimport { useNotificationStore, NotificationActions, useAuthStore } from '../../stores';\r\n\r\ninterface IHomeProps { }\r\n\r\nconst Home: React.FC<IHomeProps> = () => {\r\n\r\n    const { logout } = useFirebase();\r\n    const { currentUser } = useAuthStore();\r\n    const { dispatchNotification } = useNotificationStore();\r\n\r\n    const _logout = () => {\r\n        logout()\r\n            .then(() => {\r\n                dispatchNotification({\r\n                    type: NotificationActions.ADD,\r\n                    payload: {\r\n                        id: uuid(),\r\n                        timeStamp: Date.now(),\r\n                        type: NotificationType.Success,\r\n                        message: 'You have been successfully logged out!'\r\n                    }\r\n                });\r\n            });\r\n    }\r\n\r\n    const [username, setUsername] = React.useState<string>(currentUser?.displayName as string);\r\n\r\n    if (currentUser?.displayName) {\r\n        return (\r\n            <HomeContainer>\r\n                <H1>{`Welcome, ${currentUser?.displayName}!`}</H1>\r\n                <Input\r\n                    type={'text'}\r\n                    value={username}\r\n                    placeholder={'Change username'}\r\n                    onChange={(e: any) => setUsername(e.target.value)}\r\n                />\r\n                <Button\r\n                    variant={'primary'}\r\n                    onClick={() => currentUser.updateProfile({ displayName: username })}\r\n                >\r\n                    {'Change username'}\r\n                </Button>\r\n                <Button\r\n                    onClick={_logout}\r\n                    variant={'default'}\r\n                >\r\n                    {'Logout'}\r\n                </Button>\r\n            </HomeContainer>\r\n        );\r\n    }\r\n    else return <></>;\r\n}\r\n\r\nexport default Home;","import { useSpring } from 'react-spring';\r\n\r\nconst useAnimation = () => {\r\n    const { opacity: titleAnimation } = useSpring({\r\n        opacity: 1,\r\n        from: { opacity: 0 },\r\n        delay: 0,\r\n    });\r\n    const { transform: subTitleAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 50\r\n    });\r\n    const { transform: emailFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 100\r\n    });\r\n    const { transform: pwFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 150\r\n    });\r\n    const { transform: loginButtonAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 200\r\n    });\r\n    const { transform: socialMediaAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 250\r\n    });\r\n    const { transform: titleIconAnimation } = useSpring({\r\n        transform: 'scale(1)',\r\n        from: { transform: 'scale(0)' },\r\n        delay: 300,\r\n    });\r\n\r\n    return {\r\n        titleAnimation,\r\n        pwFieldAnimation,\r\n        subTitleAnimation,\r\n        titleIconAnimation,\r\n        emailFieldAnimation,\r\n        loginButtonAnimation,\r\n        socialMediaAnimation,\r\n    };\r\n}\r\n\r\nexport default useAnimation;","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\nconst _WelcomeContainer = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: flex-end;\r\n    min-height: 600px;\r\n    height: 100%;\r\n    overflow-x: hidden;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst _WelcomeCircle = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    width: ${theme.vw > theme.vh ? '100vw' : '100vh'};\r\n    height: ${theme.vw > theme.vh ? '100vw' : '100vh'};\r\n    padding-bottom: 5%;\r\n    border-radius: 50%;\r\n    box-shadow: inset -1px -1px 10px rgba(0,0,0,0.6), 5px 5px 25px rgba(0,0,0,0.6), -5px -5px 25px rgba(0,0,0,0.6);\r\n    background-color: ${theme.primaryColor};\r\n    background-image: linear-gradient(rgba(255,255,255,0.4), rgba(255,255,255,0));\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: center;\r\n\r\n    @media (max-width: 700px) {\r\n        padding-bottom: 20%;\r\n    }\r\n`;\r\n\r\nconst _H1 = styled.h1`\r\n    font-size: 3.5rem;\r\n    color: ${theme.defaultFontColor};\r\n    text-align: center;\r\n    letter-spacing: 2px;\r\n    margin-bottom: 2.5vh;\r\n\r\n    @media (max-width: 700px) {\r\n        font-size: 2.5rem;\r\n    }\r\n`;\r\n\r\nconst _TitleContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n`;\r\n\r\nconst _TitleIcon = styled.div`\r\n    height: 5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: ${theme.defaultFontColor};\r\n\r\n    @media (max-width: 700px) {\r\n        height: 5rem;\r\n    }\r\n`;\r\n\r\nconst _ControlsContainer = styled.div`\r\n    width: 100%;\r\n    padding: 0 10vw 10vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nconst _P = styled.p`\r\n    font-size: 0.8rem;\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    color: ${theme.defaultFontColor};\r\n    margin: 1.5rem 0;\r\n    letter-spacing: 1px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _SocialMediaContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const P = animated(_P);\r\nexport const H1 = animated(_H1);\r\nexport const TitleIcon = animated(_TitleIcon);\r\nexport const WelcomeCircle = animated(_WelcomeCircle);\r\nexport const TitleContainer = animated(_TitleContainer);\r\nexport const WelcomeContainer = animated(_WelcomeContainer);\r\nexport const ControlsContainer = animated(_ControlsContainer);\r\nexport const SocialMediaContainer = animated(_SocialMediaContainer);","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\nconst _LoginContainer = styled.div`\r\n    position: relative;\r\n    padding: 15vh 10vw 5vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    overflow-x: hidden;\r\n    overflow-y: scroll;\r\n    min-height: 100%;\r\n`;\r\n\r\nconst _TitleContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 15vh;\r\n`;\r\n\r\nconst _H1 = styled.h1`\r\n    font-size: 1.6rem;\r\n    color: ${theme.defaultFontColor};\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    margin-bottom: 1rem;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _TitleIcon = styled.div`\r\n    height: 4rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: ${theme.defaultFontColor};\r\n`;\r\n\r\nconst _SubTitle = styled.h2`\r\n    font-size: 1.6rem;\r\n    color: ${theme.primaryFontColor};\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    margin-bottom: 1rem;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _ForgotPassword = styled.p`\r\n    font-size: 0.8rem;\r\n    font-weight: 500;\r\n    text-transform: uppercase;\r\n    color: ${theme.defaultFontColor};\r\n    margin-bottom: 1.5rem;\r\n    letter-spacing: 1px;\r\n    text-align: center;\r\n    align-self: flex-end;\r\n`;\r\n\r\nexport const H1 = animated(_H1);\r\nexport const SubTitle = animated(_SubTitle);\r\nexport const TitleIcon = animated(_TitleIcon);\r\nexport const TitleContainer = animated(_TitleContainer);\r\nexport const LoginContainer = animated(_LoginContainer);\r\nexport const ForgotPassword = animated(_ForgotPassword);","import * as yup from 'yup';\r\nimport { uuid } from 'uuidv4';\r\nimport * as React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { useAnimation } from './hooks';\r\nimport { useFirebase } from '../../utils';\r\nimport { SocialMediaContainer, P } from '../welcome/styles';\r\nimport { LoginPlatform, NotificationType } from '../../enums';\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { LoginContainer, H1, SubTitle, TitleIcon, TitleContainer } from './styles';\r\nimport { Button, Input, SocialMediaButton, PasswordInput } from '../../components';\r\nimport { faGoogle, faFacebookF, faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { useNotificationStore, NotificationActions, useLoaderBannerStore, LoaderBannerActions } from '../../stores';\r\n\r\nconst validationSchema = yup.object().shape({\r\n    email: yup.string()\r\n        .required('Email is required!')\r\n        .email('Email is not valid!'),\r\n    password: yup.string()\r\n        .required('Password is required!')\r\n        .min(6, 'Password must be at least 6 characters!'),\r\n});\r\n\r\ninterface IFormValues {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ninterface ILoginProps { }\r\n\r\nconst Login: React.FC<ILoginProps> = () => {\r\n\r\n    const { login, loginSocialMedia } = useFirebase();\r\n    const { dispatchIsLoading } = useLoaderBannerStore();\r\n    const { dispatchNotification } = useNotificationStore();\r\n\r\n    const {\r\n        titleAnimation,\r\n        pwFieldAnimation,\r\n        subTitleAnimation,\r\n        titleIconAnimation,\r\n        emailFieldAnimation,\r\n        socialMediaAnimation,\r\n        loginButtonAnimation,\r\n    } = useAnimation();\r\n\r\n    const formController = useFormik<IFormValues>({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n        onSubmit: ({ email, password }) => {\r\n            dispatchIsLoading({ type: LoaderBannerActions.START, payload: { isLoading: true, text: 'Logging in...' } });\r\n            login(email, password)\r\n                .then(() => {\r\n                    dispatchIsLoading({ type: LoaderBannerActions.STOP, payload: { isLoading: false } });\r\n                    formController.resetForm();\r\n                    dispatchNotification({\r\n                        type: NotificationActions.ADD,\r\n                        payload: {\r\n                            id: uuid(),\r\n                            timeStamp: Date.now(),\r\n                            type: NotificationType.Success,\r\n                            message: 'You have been successfully logged in!'\r\n                        }\r\n                    });\r\n                })\r\n                .catch(({ message }) => {\r\n                    dispatchIsLoading({ type: LoaderBannerActions.STOP, payload: { isLoading: false } });\r\n                    dispatchNotification({\r\n                        type: NotificationActions.ADD,\r\n                        payload: {\r\n                            message,\r\n                            id: uuid(),\r\n                            timeStamp: Date.now(),\r\n                            type: NotificationType.Danger,\r\n                        }\r\n                    });\r\n                });\r\n        },\r\n        validationSchema,\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        if (!formController.isSubmitting && !formController.isValid) {\r\n            for (const key in formController.errors) {\r\n                if (!!formController.errors[key]) {\r\n                    setTimeout(() => {\r\n                        dispatchNotification({\r\n                            type: NotificationActions.ADD,\r\n                            payload: {\r\n                                id: uuid(),\r\n                                timeStamp: Date.now(),\r\n                                type: NotificationType.Danger,\r\n                                message: formController.errors[key] as string,\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [formController.isSubmitting]);\r\n\r\n    const _loginWithSocialMedia = (platform: LoginPlatform) => {\r\n        dispatchIsLoading({ type: LoaderBannerActions.START, payload: { isLoading: true, text: `Logging in with ${platform}...` } });\r\n        loginSocialMedia(platform)\r\n            .then(() => {\r\n                dispatchIsLoading({ type: LoaderBannerActions.STOP, payload: { isLoading: false } });\r\n                dispatchNotification({\r\n                    type: NotificationActions.ADD,\r\n                    payload: {\r\n                        id: uuid(),\r\n                        timeStamp: Date.now(),\r\n                        type: NotificationType.Success,\r\n                        message: `You have been successfully logged in with ${platform}!`,\r\n                    }\r\n                });\r\n            })\r\n            .catch(({ message }) => {\r\n                dispatchIsLoading({ type: LoaderBannerActions.STOP, payload: { isLoading: false } });\r\n                dispatchNotification({\r\n                    type: NotificationActions.ADD,\r\n                    payload: {\r\n                        message,\r\n                        id: uuid(),\r\n                        timeStamp: Date.now(),\r\n                        type: NotificationType.Danger,\r\n                    }\r\n                });\r\n            });\r\n    }\r\n\r\n    return (\r\n        <LoginContainer>\r\n            <TitleContainer>\r\n                <H1 style={{ opacity: titleAnimation }}>{'welcome back'}</H1>\r\n                <TitleIcon style={{ transform: titleIconAnimation }}>\r\n                    <FontAwesomeIcon icon={faSignInAlt} style={{ width: '100%', height: '100%' }} />\r\n                </TitleIcon>\r\n            </TitleContainer>\r\n            <SubTitle style={{ transform: subTitleAnimation }}>{'login in'}</SubTitle>\r\n            <Input\r\n                name={'email'}\r\n                placeholder={'email'}\r\n                value={formController.values.email}\r\n                onChange={formController.handleChange}\r\n                style={{ transform: emailFieldAnimation }}\r\n                isValid={!!(formController.touched.email && !formController.errors.email)}\r\n                isInvalid={!!(formController.touched.email && !!formController.errors.email)}\r\n            />\r\n            <PasswordInput\r\n                name={'password'}\r\n                placeholder={'password'}\r\n                value={formController.values.password}\r\n                onChange={formController.handleChange}\r\n                style={{ transform: pwFieldAnimation }}\r\n                isValid={!!(formController.touched.password && !formController.errors.password)}\r\n                isInvalid={!!(formController.touched.password && !!formController.errors.password)}\r\n            />\r\n            <Button\r\n                variant={'primary'}\r\n                onClick={formController.handleSubmit}\r\n                style={{ transform: loginButtonAnimation }}\r\n            >\r\n                {'Login'}\r\n            </Button>\r\n            <P style={{ transform: socialMediaAnimation }}>{'or login using social media'}</P>\r\n            <SocialMediaContainer style={{ transform: socialMediaAnimation }}>\r\n                <SocialMediaButton onClick={() => _loginWithSocialMedia(LoginPlatform.Facebook)}>\r\n                    <FontAwesomeIcon icon={faFacebookF} size={'2x'} />\r\n                </SocialMediaButton>\r\n                <SocialMediaButton onClick={() => _loginWithSocialMedia(LoginPlatform.Google)}>\r\n                    <FontAwesomeIcon icon={faGoogle} size={'2x'} />\r\n                </SocialMediaButton>\r\n                <SocialMediaButton onClick={() => _loginWithSocialMedia(LoginPlatform.GitHub)}>\r\n                    <FontAwesomeIcon icon={faGithub} size={'2x'} />\r\n                </SocialMediaButton>\r\n            </SocialMediaContainer>\r\n        </LoginContainer>\r\n    );\r\n}\r\n\r\nexport default Login;","import { useSpring } from 'react-spring';\r\n\r\nconst useAnimation = () => {\r\n    const { transform: defaultButtonTransform } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px,600px, 0px)' },\r\n        delay: 200,\r\n    });\r\n\r\n    const { transform: primaryButtonTransform } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px,600px, 0px)' },\r\n        delay: 250,\r\n    });\r\n\r\n    const { transform: socialMediaContainerTransform } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px,600px, 0px)' },\r\n        delay: 300,\r\n    });\r\n\r\n    const { transform: titleIconScale } = useSpring({\r\n        transform: 'scale(1)',\r\n        from: { transform: 'scale(0)' },\r\n        delay: 450,\r\n    });\r\n\r\n    return {\r\n        titleIconScale,\r\n        defaultButtonTransform,\r\n        primaryButtonTransform,\r\n        socialMediaContainerTransform,\r\n    };\r\n}\r\n\r\nexport default useAnimation;","import { uuid } from 'uuidv4';\r\nimport * as React from 'react';\r\nimport { useAnimation } from './hooks';\r\nimport { useSpring } from 'react-spring';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { theme, useFirebase } from '../../utils';\r\nimport { faTrophy } from '@fortawesome/free-solid-svg-icons';\r\nimport { Button, SocialMediaButton } from '../../components';\r\nimport { LoginPlatform, NotificationType } from '../../enums';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGoogle, faFacebookF, faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { useNotificationStore, NotificationActions, useLoaderBannerStore, LoaderBannerActions } from '../../stores';\r\nimport { WelcomeContainer, WelcomeCircle, H1, ControlsContainer, P, SocialMediaContainer, TitleContainer, TitleIcon } from './styles';\r\n\r\ninterface IWelcomeProps { }\r\n\r\nconst Welcome: React.FC<IWelcomeProps> = () => {\r\n\r\n    const history = useHistory();\r\n    const { loginSocialMedia } = useFirebase();\r\n    const { dispatchIsLoading } = useLoaderBannerStore();\r\n    const { dispatchNotification } = useNotificationStore();\r\n\r\n    const { vh, vw } = theme;\r\n\r\n    const {\r\n        titleIconScale,\r\n        defaultButtonTransform,\r\n        primaryButtonTransform,\r\n        socialMediaContainerTransform,\r\n    } = useAnimation();\r\n\r\n    const [{ transform, opacity }, set] = useSpring(() => ({ transform: `translate3d(0,${vw > vh ? '-150vw' : '-150vh'},0)`, opacity: 1 }));\r\n    set({ transform: `translate3d(0,${vw > vh ? '-75vw' : '-50vh'},0)` });\r\n\r\n    const moveTo = (path: string) => {\r\n        set({ transform: `translate3d(0,${vw > vh ? '-120vw' : '-120vh'},0)`, opacity: 0 });\r\n        setTimeout(() => history.push(path), 400);\r\n    };\r\n\r\n    const _loginWithSocialMedia = (platform: LoginPlatform) => {\r\n        dispatchIsLoading({ type: LoaderBannerActions.START, payload: { isLoading: true, text: `Logging in with ${platform}...` } });\r\n        loginSocialMedia(platform)\r\n            .then(() => {\r\n                dispatchIsLoading({ type: LoaderBannerActions.STOP, payload: { isLoading: false } });\r\n                dispatchNotification({\r\n                    type: NotificationActions.ADD,\r\n                    payload: {\r\n                        id: uuid(),\r\n                        timeStamp: Date.now(),\r\n                        type: NotificationType.Success,\r\n                        message: `You have been successfully logged in with ${platform}!`,\r\n                    }\r\n                });\r\n            })\r\n            .catch(({ message }) => {\r\n                dispatchIsLoading({ type: LoaderBannerActions.STOP, payload: { isLoading: false } });\r\n                dispatchNotification({\r\n                    type: NotificationActions.ADD,\r\n                    payload: {\r\n                        message,\r\n                        id: uuid(),\r\n                        timeStamp: Date.now(),\r\n                        type: NotificationType.Danger,\r\n                    }\r\n                });\r\n            });\r\n    }\r\n\r\n    return (\r\n        <WelcomeContainer>\r\n            <WelcomeCircle style={{ transform }}>\r\n                <TitleContainer>\r\n                    <H1>{'HOMiESCUP'}</H1>\r\n                    <TitleIcon style={{ transform: titleIconScale }}>\r\n                        <FontAwesomeIcon icon={faTrophy} style={{ width: '100%', height: '100%' }} />\r\n                    </TitleIcon>\r\n                </TitleContainer>\r\n            </WelcomeCircle>\r\n            <ControlsContainer style={{ opacity }}>\r\n                <Button variant={'default'} style={{ transform: defaultButtonTransform }} onClick={() => moveTo('/login')}>\r\n                    {'Login'}\r\n                </Button>\r\n                <Button variant={'primary'} style={{ transform: primaryButtonTransform }} onClick={() => moveTo('/register')}>\r\n                    {'Create account'}\r\n                </Button>\r\n                <P style={{ transform: socialMediaContainerTransform }}>{'or login using social media'}</P>\r\n                <SocialMediaContainer style={{ transform: socialMediaContainerTransform }}>\r\n                    <SocialMediaButton onClick={() => _loginWithSocialMedia(LoginPlatform.Facebook)}>\r\n                        <FontAwesomeIcon icon={faFacebookF} size={'2x'} />\r\n                    </SocialMediaButton>\r\n                    <SocialMediaButton onClick={() => _loginWithSocialMedia(LoginPlatform.Google)}>\r\n                        <FontAwesomeIcon icon={faGoogle} size={'2x'} />\r\n                    </SocialMediaButton>\r\n                    <SocialMediaButton onClick={() => _loginWithSocialMedia(LoginPlatform.GitHub)}>\r\n                        <FontAwesomeIcon icon={faGithub} size={'2x'} />\r\n                    </SocialMediaButton>\r\n                </SocialMediaContainer>\r\n            </ControlsContainer>\r\n        </WelcomeContainer>\r\n    );\r\n}\r\n\r\nexport default Welcome;","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\nconst _ProfileContainer = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: flex-end;\r\n    min-height: 600px;\r\n    height: 100%;\r\n    overflow-x: hidden;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst _HeaderContainer = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    width: ${theme.vw > theme.vh ? '100vw' : '100vh'};\r\n    height: ${theme.vw > theme.vh ? '100vw' : '100vh'};\r\n    border-radius: 50%;\r\n    padding-top: ${theme.vw > theme.vh ? 'calc(100vw * 0.75)' : 'calc(100vh * 0.4)'};\r\n    box-shadow: inset -1px -1px 10px rgba(0,0,0,0.6), 5px 5px 25px rgba(0,0,0,0.6), -5px -5px 25px rgba(0,0,0,0.6);\r\n    background-color: ${theme.primaryColor};\r\n    background-image: linear-gradient(rgba(255,255,255,0.4), rgba(255,255,255,0));\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nconst _HeaderNavContainer = styled.div`\r\n    width: 100vw;\r\n    padding: .75rem 1rem 0;\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: space-between;\r\n    margin-bottom: 3.5rem;\r\n`;\r\n\r\nconst _H1 = styled.h1`\r\n    font-size: 1.5rem;\r\n    line-height: 1.5rem;\r\n    color: ${theme.defaultFontColor};\r\n    text-align: center;\r\n`;\r\n\r\nconst _UserAvatar = styled.div`\r\n    display: flex;\r\n    width: 100vw;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n`;\r\n\r\nconst _UsernameText = styled.h2`\r\n    margin: 8px 0;\r\n    font-size: 1.25rem;\r\n    font-weight: 400;\r\n    line-height: 1.25rem;\r\n    color: ${theme.defaultFontColor};\r\n    text-align: center;\r\n`;\r\n\r\nexport const H1 = animated(_H1);\r\nexport const ProfileContainer = animated(_ProfileContainer);\r\nexport const HeaderContainer = animated(_HeaderContainer);\r\nexport const HeaderNavContainer = animated(_HeaderNavContainer);\r\nexport const UsernameText = animated(_UsernameText);\r\nexport const UserAvatar = animated(_UserAvatar);\r\n","import * as React from 'react';\r\nimport { theme } from '../../utils';\r\nimport { useSpring, animated, config } from 'react-spring';\r\nimport { UserCircularPicture, Rating } from '../../components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { ProfileContainer, HeaderContainer, H1, HeaderNavContainer, UserAvatar, UsernameText } from './styles';\r\n\r\ninterface IProfileProps { }\r\n\r\nconst Profile: React.FC<IProfileProps> = () => {\r\n\r\n    const { vw, vh } = theme;\r\n\r\n    const [{ transform }, set] = useSpring(() => ({ transform: `translate3d(0,${vw > vh ? '-150vw' : '-150vh'},0)` }));\r\n    set({ transform: `translate3d(0,${vw > vh ? '-75vw' : '-40vh'},0)` });\r\n\r\n    const [show, setShow] = React.useState<boolean>(true);\r\n\r\n    const { height, marginBottom } = useSpring({\r\n        height: show ? '2rem' : '0rem',\r\n        marginBottom: show ? '0.25rem' : '0',\r\n    });\r\n\r\n    const { opacity: hideTextOpacity, transform: hideTextTransform } = useSpring({\r\n        opacity: show ? '1' : '0',\r\n        transform: show ? 'translateX(-2rem)' : 'translateX(2rem)',\r\n        config: {\r\n            ...config.default,\r\n            friction: 16\r\n        }\r\n    });\r\n\r\n    const { opacity: showTextOpacity, transform: showTextTransform } = useSpring({\r\n        opacity: !show ? '1' : '0',\r\n        transform: !show ? 'translateX(2rem)' : 'translateX(-2rem)',\r\n        config: {\r\n            ...config.default,\r\n            friction: 16\r\n        }\r\n    });\r\n\r\n    return (\r\n        <ProfileContainer>\r\n            <HeaderContainer\r\n                style={{ transform }}\r\n            >\r\n                <HeaderNavContainer>\r\n                    <FontAwesomeIcon\r\n                        size={'2x'}\r\n                        icon={faEdit}\r\n                        style={{ color: theme.defaultFontColor }}\r\n                    />\r\n                    <H1>{'Profile'}</H1>\r\n                    <FontAwesomeIcon\r\n                        size={'2x'}\r\n                        icon={faSignOutAlt}\r\n                        style={{ color: theme.defaultFontColor }}\r\n                    />\r\n                </HeaderNavContainer>\r\n                <UserAvatar>\r\n                    <UserCircularPicture\r\n                        size={'8rem'}\r\n                        url={'https://randomuser.me/api/portraits/men/85.jpg'}\r\n                    />\r\n                    <UsernameText>{'John Doe'}</UsernameText>\r\n                    <Rating value={4.3} />\r\n                </UserAvatar>\r\n            </HeaderContainer>\r\n            <div style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                width: '100%',\r\n                padding: '2rem',\r\n            }}>\r\n                {(() => {\r\n                    const style: React.CSSProperties = {\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        backgroundColor: 'lightblue',\r\n                        width: '100%',\r\n                        height: '2rem',\r\n                        color: '#818181',\r\n                        marginBottom: '.25rem',\r\n                        boxSizing: 'border-box',\r\n                        overflow: 'hidden',\r\n                    };\r\n\r\n                    return (\r\n                        <>\r\n                            <div style={{ ...style }}>{'Mittomenas asd'}</div>\r\n                            <animated.div style={{ ...style, height, marginBottom }}>{'Tesadas'}</animated.div>\r\n                            <div style={{ ...style }}>{'Na mivan atess'}</div>\r\n                            <div\r\n                                style={{\r\n                                    ...style,\r\n                                    color: style.backgroundColor,\r\n                                    backgroundColor: style.color,\r\n                                }}\r\n                                onClick={() => setShow(!show)}\r\n                            >\r\n                                <animated.div style={{ opacity: showTextOpacity, transform: showTextTransform, width: '4rem', textAlign: 'center' }}>{'Show'}</animated.div>\r\n                                <animated.div style={{ opacity: hideTextOpacity, transform: hideTextTransform, width: '4rem', textAlign: 'center' }}>{'Hide'}</animated.div>\r\n                            </div>\r\n                        </>\r\n                    );\r\n                })()}\r\n            </div>\r\n        </ProfileContainer>\r\n    );\r\n}\r\n\r\nexport default Profile;","import { useSpring } from 'react-spring';\r\n\r\nconst useAnimation = () => {\r\n    const { opacity: titleAnimation } = useSpring({\r\n        opacity: 1,\r\n        from: { opacity: 0 },\r\n        delay: 0,\r\n    });\r\n    const { transform: subTitleAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 50\r\n    });\r\n    const { transform: usernameFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 100\r\n    });\r\n    const { transform: emailFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 150\r\n    });\r\n    const { transform: pwFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 200\r\n    });\r\n    const { transform: confirmPWFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 250\r\n    });\r\n    const { transform: registerButtonAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 300\r\n    });\r\n    const { transform: titleIconAnimation } = useSpring({\r\n        transform: 'scale(1)',\r\n        from: { transform: 'scale(0)' },\r\n        delay: 350,\r\n    });\r\n\r\n    return {\r\n        titleAnimation,\r\n        pwFieldAnimation,\r\n        subTitleAnimation,\r\n        titleIconAnimation,\r\n        emailFieldAnimation,\r\n        usernameFieldAnimation,\r\n        confirmPWFieldAnimation,\r\n        registerButtonAnimation,\r\n    };\r\n}\r\n\r\nexport default useAnimation;","import styled from 'styled-components';\r\n\r\nexport const RegisterContainer = styled.div`\r\n    position: relative;\r\n    padding: 15vh 10vw 5vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    overflow-x: hidden;\r\n    overflow-y: scroll;\r\n    min-height: 100%;\r\n`;","import * as yup from 'yup';\r\nimport { uuid } from 'uuidv4';\r\nimport * as React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { useAnimation } from './hooks';\r\nimport { useFirebase } from '../../utils';\r\nimport { RegisterContainer } from './styles';\r\nimport { NotificationType } from '../../enums';\r\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { Button, Input, PasswordInput } from '../../components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { H1, TitleContainer, TitleIcon, SubTitle } from '../login/styles';\r\nimport { useNotificationStore, NotificationActions, LoaderBannerActions, useLoaderBannerStore } from '../../stores';\r\n\r\nconst validationSchema = yup.object().shape({\r\n    username: yup.string()\r\n        .required('Username is required!')\r\n        .min(6, 'Username must be at least 6 characters!')\r\n        .max(18, `Username must be less than 18 characters!`)\r\n        .matches(/^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/, 'Username is not valid!'),\r\n    email: yup.string()\r\n        .required('Email is required!')\r\n        .email('Email is not valid!'),\r\n    password: yup.string()\r\n        .required('Password is required!')\r\n        .min(6, 'Password must be at least 6 characters!'),\r\n    confirmPassword: yup.string()\r\n        .required('Confirm Password is required!')\r\n        .oneOf([yup.ref('password')], 'Passwords must match!')\r\n\r\n});\r\n\r\ninterface IFormValues {\r\n    username: string;\r\n    email: string;\r\n    password: string;\r\n    confirmPassword: string;\r\n}\r\n\r\ninterface IRegisterProps { }\r\n\r\nconst Register: React.FC<IRegisterProps> = () => {\r\n\r\n    const { register } = useFirebase();\r\n    const { dispatchIsLoading } = useLoaderBannerStore();\r\n    const { dispatchNotification } = useNotificationStore();\r\n\r\n    const {\r\n        titleAnimation,\r\n        pwFieldAnimation,\r\n        subTitleAnimation,\r\n        titleIconAnimation,\r\n        emailFieldAnimation,\r\n        usernameFieldAnimation,\r\n        confirmPWFieldAnimation,\r\n        registerButtonAnimation,\r\n    } = useAnimation();\r\n\r\n    const formController = useFormik<IFormValues>({\r\n        initialValues: {\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n        },\r\n        onSubmit: ({ username, email, password }) => {\r\n            dispatchIsLoading({ type: LoaderBannerActions.START, payload: { isLoading: true, text: 'Registering...' } });\r\n            register(username, email, password)\r\n                .then(() => {\r\n                    dispatchIsLoading({ type: LoaderBannerActions.STOP, payload: { isLoading: false } });\r\n                    formController.resetForm();\r\n                    dispatchNotification({\r\n                        type: NotificationActions.ADD,\r\n                        payload: {\r\n                            id: uuid(),\r\n                            timeStamp: Date.now(),\r\n                            type: NotificationType.Success,\r\n                            message: 'You have been successfully registered!'\r\n                        }\r\n                    });\r\n                })\r\n                .catch(({ message }) => {\r\n                    dispatchIsLoading({ type: LoaderBannerActions.STOP, payload: { isLoading: false } });\r\n                    dispatchNotification({\r\n                        type: NotificationActions.ADD,\r\n                        payload: {\r\n                            message,\r\n                            id: uuid(),\r\n                            timeStamp: Date.now(),\r\n                            type: NotificationType.Danger,\r\n                        }\r\n                    });\r\n                });\r\n        },\r\n        validationSchema,\r\n    });\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (!formController.isSubmitting && !formController.isValid) {\r\n            for (const key in formController.errors) {\r\n                if (!!formController.errors[key]) {\r\n                    setTimeout(() => {\r\n                        dispatchNotification({\r\n                            type: NotificationActions.ADD,\r\n                            payload: {\r\n                                id: uuid(),\r\n                                timeStamp: Date.now(),\r\n                                type: NotificationType.Danger,\r\n                                message: formController.errors[key] as string,\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [formController.isSubmitting]);\r\n\r\n\r\n    return (\r\n        <RegisterContainer>\r\n            <TitleContainer>\r\n                <H1 style={{ opacity: titleAnimation }}>{'great idea'}</H1>\r\n                <TitleIcon style={{ transform: titleIconAnimation }}>\r\n                    <FontAwesomeIcon icon={faUserPlus} style={{ width: '100%', height: '100%' }} />\r\n                </TitleIcon>\r\n            </TitleContainer>\r\n            <SubTitle style={{ transform: subTitleAnimation }}>{'register now'}</SubTitle>\r\n            <Input\r\n                name={'username'}\r\n                placeholder={'username'}\r\n                value={formController.values.username}\r\n                onChange={formController.handleChange}\r\n                style={{ transform: usernameFieldAnimation }}\r\n                isValid={!!(formController.touched.username && !formController.errors.username)}\r\n                isInvalid={!!(formController.touched.username && !!formController.errors.username)}\r\n            />\r\n            <Input\r\n                name={'email'}\r\n                placeholder={'email'}\r\n                value={formController.values.email}\r\n                onChange={formController.handleChange}\r\n                style={{ transform: emailFieldAnimation }}\r\n                isValid={!!(formController.touched.email && !formController.errors.email)}\r\n                isInvalid={!!(formController.touched.email && !!formController.errors.email)}\r\n            />\r\n            <PasswordInput\r\n                name={'password'}\r\n                placeholder={'password'}\r\n                value={formController.values.password}\r\n                onChange={formController.handleChange}\r\n                style={{ transform: pwFieldAnimation }}\r\n                isValid={!!(formController.touched.password && !formController.errors.password)}\r\n                isInvalid={!!(formController.touched.password && !!formController.errors.password)}\r\n            />\r\n            <PasswordInput\r\n                name={'confirmPassword'}\r\n                placeholder={'confirm password'}\r\n                onChange={formController.handleChange}\r\n                value={formController.values.confirmPassword}\r\n                style={{ transform: confirmPWFieldAnimation }}\r\n                isValid={!!(formController.touched.confirmPassword && !formController.errors.confirmPassword)}\r\n                isInvalid={!!(formController.touched.confirmPassword && !!formController.errors.confirmPassword)}\r\n            />\r\n            <Button\r\n                variant={'primary'}\r\n                onClick={formController.handleSubmit}\r\n                style={{ transform: registerButtonAnimation }}\r\n            >\r\n                {'register'}\r\n            </Button>\r\n        </RegisterContainer>\r\n    );\r\n}\r\n\r\nexport default Register;","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\n\r\nexport const AppContainer = styled.div`\r\n    position: relative;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-color: ${theme.dark};\r\n    background-image: linear-gradient(135deg, rgba(48,48,48,1) 0%, rgba(255,255,255,.05) 100%);\r\n`;\r\n\r\nexport const ScreensContainer = styled.div`\r\n    height: 100%;\r\n    width: 100%;\r\n    overflow-y: auto;\r\n`;\r\n\r\nexport const BottomCircle = styled.div`\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: -50vh;\r\n    width: 100vh;\r\n    height: 100vh;\r\n    border-radius: 50%;\r\n    background-color: ${theme.darker06};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    @media (min-width: 700px) {\r\n        width: 900px;\r\n        height: 900px;\r\n        bottom: -450px;\r\n    }\r\n`;\r\n\r\nexport const TopCircle = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: -50vh;\r\n    width: 100vh;\r\n    height: 100vh;\r\n    border-radius: 50%;\r\n    background-color: ${theme.darker06};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    @media (min-width: 700px) {\r\n        width: 900px;\r\n        height: 900px;\r\n        bottom: -450px;\r\n    }\r\n`;\r\n\r\nexport const InnerCircle = styled.div`\r\n    width: 70vh;\r\n    height: 70vh;\r\n    border-radius: 50%;\r\n    background-color: ${theme.dark};\r\n\r\n    @media (min-width: 700px) {\r\n        width: 600px;\r\n        height: 600px;\r\n    }\r\n`;","import * as React from 'react';\r\nimport { useFirebase } from '../../utils';\r\nimport { HashRouter, Switch } from 'react-router-dom';\r\nimport { Login, Home, Register, Welcome, Profile } from '../../screens';\r\nimport { AuthorizedRoute, UnauthorizedRoute, Notification, LoaderBanner } from '../';\r\nimport { AppContainer, BottomCircle, InnerCircle, TopCircle, ScreensContainer } from './styles';\r\nimport { NotificationStoreProvider, LoaderBannerStoreProvider, AuthStoreProvider } from '../../stores';\r\n\r\ninterface IAppProps { }\r\n\r\nconst App: React.FC<IAppProps> = () => {\r\n\r\n    const { isInitialized } = useFirebase();\r\n    const [firebaseInitialized, setFirebaseInitialized] = React.useState<boolean>(false);\r\n\r\n    React.useEffect(() => {\r\n        isInitialized()\r\n            .then(() => setFirebaseInitialized(true));\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <AuthStoreProvider>\r\n            <LoaderBannerStoreProvider>\r\n                <NotificationStoreProvider>\r\n                    <AppContainer>\r\n                        <LoaderBanner forceShow={!firebaseInitialized} />\r\n                        <Notification />\r\n                        <TopCircle>\r\n                            <InnerCircle />\r\n                        </TopCircle>\r\n                        <BottomCircle>\r\n                            <InnerCircle />\r\n                        </BottomCircle>\r\n                        <ScreensContainer>\r\n                            {firebaseInitialized\r\n                                ? <HashRouter basename=\"/\">\r\n                                    <Switch>\r\n                                        <AuthorizedRoute exact={true} path={'/home'} screen={<Home />} />\r\n                                        <AuthorizedRoute exact={true} path={'/profile'} screen={<Profile />} />\r\n                                        <UnauthorizedRoute exact={true} path={'/'} screen={<Welcome />} />\r\n                                        <UnauthorizedRoute exact={true} path={'/login'} screen={<Login />} />\r\n                                        <UnauthorizedRoute exact={true} path={'/register'} screen={<Register />} />\r\n                                    </Switch>\r\n                                </HashRouter>\r\n                                : <></>\r\n                            }\r\n                        </ScreensContainer>\r\n                    </AppContainer>\r\n                </NotificationStoreProvider>\r\n            </LoaderBannerStoreProvider>\r\n        </AuthStoreProvider>\r\n    );\r\n}\r\n\r\n\r\nexport default App;","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\nconst _RatingContainer = styled.div`\r\n    width: 3rem;\r\n    height: 1.5rem;\r\n    border-radius: 20px;\r\n    background: ${theme.goldColor};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n`;\r\n\r\nconst _Text = styled.p`\r\n    font-size: 0.9rem;\r\n    font-weight: 600;\r\n    color: ${theme.defaultFontColor};\r\n`;\r\n\r\nexport const Text = animated(_Text);\r\nexport const RatingContainer = animated(_RatingContainer);","import * as React from 'react';\r\nimport { theme } from '../../utils';\r\nimport { RatingContainer, Text } from './styles';\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\ninterface IRatingProps {\r\n    value: number;\r\n}\r\n\r\nconst Rating: React.FC<IRatingProps> = ({ value }) => (\r\n    <RatingContainer>\r\n        <Text>{value}</Text>\r\n        <FontAwesomeIcon\r\n            icon={faStar}\r\n            style={{\r\n                width: '0.9rem',\r\n                height: '0.9rem',\r\n                color: theme.defaultFontColor,\r\n            }}\r\n        />\r\n    </RatingContainer>\r\n);\r\n\r\nexport default Rating;\r\n\r\n","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\nimport { NotificationType } from '../../enums';\r\n\r\ninterface INotificationContainerProps {\r\n    type: NotificationType;\r\n}\r\n\r\nconst NotificationContainer = styled.div<INotificationContainerProps>`\r\n    position: absolute;\r\n    z-index: 100;\r\n    top: .5rem;\r\n    left: 50%;\r\n    width: 94vw;\r\n    height: 3.5rem;\r\n    background: ${({ type }) => type === NotificationType.Danger\r\n        ? theme.dangerBackgroundColor\r\n        : type === NotificationType.Success\r\n            ? theme.successBackgroundColor\r\n            : theme.warningBackgroundColor};\r\n    border-radius: 5px;\r\n    border: 2px solid;\r\n    border-color: ${({ type }) => type === NotificationType.Danger\r\n        ? theme.dangerBorderColor\r\n        : type === NotificationType.Success\r\n            ? theme.successBorderColor\r\n            : theme.warningBorderColor};\r\n    color: ${({ type }) => type === NotificationType.Danger\r\n        ? theme.dangerFontColor\r\n        : type === NotificationType.Success\r\n            ? theme.successFontColor\r\n            : theme.warningFontColor};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    padding-right: 2rem;\r\n`;\r\n\r\nconst NotificationText = styled.p<{ strLenght: number }>`\r\n    font-size: ${({ strLenght }) => strLenght > 27 ? '.75rem' : '1rem'};\r\n    text-align: justify;\r\n`;\r\n\r\nconst IconContainer = styled.div<INotificationContainerProps>`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    min-width: 1.8rem;\r\n    min-height: 1.8rem;\r\n    border: 2px solid;\r\n    border-color: ${({ type }) => type === NotificationType.Danger\r\n        ? theme.dangerFontColor\r\n        : type === NotificationType.Success\r\n            ? theme.successFontColor\r\n            : theme.warningFontColor};\r\n    border-radius: 50%;\r\n    background: transparent;\r\n    color: ${({ type }) => type === NotificationType.Danger\r\n        ? theme.dangerFontColor\r\n        : type === NotificationType.Success\r\n            ? theme.successFontColor\r\n            : theme.warningFontColor};\r\n    margin: 0 .5rem 0 .3rem;\r\n`;\r\n\r\nconst DeleteIconContainer = styled.button`\r\n    all: unset;\r\n    cursor: pointer;\r\n    position: absolute;\r\n    top: 50%;\r\n    right: 1px;\r\n    border-radius: 50%;\r\n    transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst AIconContainer = animated(IconContainer);\r\nconst ANotificationText = animated(NotificationText);\r\nconst ADeleteIconContainer = animated(DeleteIconContainer);\r\nconst ANotificationContainer = animated(NotificationContainer);\r\n\r\nexport {\r\n    IconContainer,\r\n    AIconContainer,\r\n    NotificationText,\r\n    ANotificationText,\r\n    DeleteIconContainer,\r\n    ADeleteIconContainer,\r\n    NotificationContainer,\r\n    ANotificationContainer,\r\n};","import * as React from 'react';\r\nimport { useDrag } from 'react-use-gesture';\r\nimport { NotificationType } from '../../enums';\r\nimport { usePrevious, theme } from '../../utils';\r\nimport { useNotificationStore } from '../../stores';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { config, useTransition, useSpring, interpolate } from 'react-spring';\r\nimport { NotificationActions } from '../../stores/notification/notification.actions';\r\nimport { faCheck, faInfo, faExclamation, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { ANotificationContainer, NotificationText, AIconContainer, DeleteIconContainer } from './styles';\r\n\r\nconst NOTIFICATIONS_MAX_COUNT: number = 4;\r\n\r\ninterface INotificationProps { }\r\n\r\nconst Notification: React.FC<INotificationProps> = () => {\r\n\r\n    const { vw } = theme;\r\n    const [dragId, setDragId] = React.useState<string | null>(null);\r\n    const { notifications, dispatchNotification } = useNotificationStore();\r\n\r\n    const notificationAnimations = useTransition(\r\n        (notifications.map((n, index) => (index < NOTIFICATIONS_MAX_COUNT) ? ({ ...n, y: index * 4 }) : null).filter(n => !!n) as any[]),\r\n        n => n.id,\r\n        {\r\n            from: { opacity: 0, top: -4 },\r\n            leave: { opacity: 0 },\r\n            enter: ({ y }) => ({ opacity: 1, top: y }),\r\n            update: ({ y }) => ({ opacity: 1, top: y }),\r\n            config: { ...config.default, friction: 16 }\r\n        }\r\n    );\r\n\r\n    const prevNotifications = usePrevious(notifications);\r\n\r\n    React.useEffect(() => {\r\n        if ((prevNotifications as any[])?.length < notifications?.length) {\r\n            const newNotification = notifications.find(noti => prevNotifications?.map(prevNoti => prevNoti.id).indexOf(noti.id) === -1);\r\n            setTimeout(() => dispatchNotification({ type: NotificationActions.DELETE, payload: newNotification }), 3500);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [notifications]);\r\n\r\n    const notificationCenter = vw * 0.94 * -0.5;\r\n    const [{ left }, setManualDrag] = useSpring(() => ({ left: notificationCenter }));\r\n    const bind = useDrag(({ down, movement: [mx], args: [id] }) => {\r\n        const swipeLimit = vw * 0.65;\r\n        setManualDrag({\r\n            left: mx > swipeLimit\r\n                ? vw\r\n                : mx < -swipeLimit\r\n                    ? -vw * 2\r\n                    : down\r\n                        ? notificationCenter + mx\r\n                        : notificationCenter,\r\n            immediate: down,\r\n        });\r\n        if (down) {\r\n            setDragId(id);\r\n            if (mx > swipeLimit || mx < -swipeLimit) {\r\n                dispatchNotification({\r\n                    type: NotificationActions.DELETE,\r\n                    payload: notifications.find(({ id: _id }) => _id === id),\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            setTimeout(() => setDragId(null), 500);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {notificationAnimations.map(({ item: notification, props }) => {\r\n                const { opacity, top } = props;\r\n                return (\r\n                    <ANotificationContainer\r\n                        {...bind(notification.id)}\r\n                        key={notification.id}\r\n                        type={notification.type}\r\n                        style={{\r\n                            opacity,\r\n                            transform: dragId === notification.id\r\n                                ? interpolate([top as any, left as any], (y, x) => `translate(${x}px, ${y}rem)`)\r\n                                : top?.interpolate(y => `translate(-50%, ${y}rem)`),\r\n                        }}\r\n                    >\r\n                        <AIconContainer type={notification.type}>\r\n                            <FontAwesomeIcon\r\n                                icon={\r\n                                    notification.type === NotificationType.Danger\r\n                                        ? faExclamation\r\n                                        : notification.type === NotificationType.Warning\r\n                                            ? faInfo\r\n                                            : faCheck\r\n                                }\r\n                            />\r\n                        </AIconContainer>\r\n                        <NotificationText strLenght={notification.message?.length}>{notification.message}</NotificationText>\r\n                        <DeleteIconContainer>\r\n                            <FontAwesomeIcon\r\n                                size={'lg'}\r\n                                icon={faTimes}\r\n                                onClick={() => dispatchNotification({\r\n                                    type: NotificationActions.DELETE,\r\n                                    payload: notification\r\n                                })}\r\n                            />\r\n                        </DeleteIconContainer>\r\n                    </ANotificationContainer>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Notification;","import styled, { keyframes } from 'styled-components';\r\nimport { animated } from 'react-spring';\r\nimport { theme } from '../../utils';\r\n\r\nconst Banner = styled.div`\r\n    position: absolute;\r\n    z-index: 100;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background: transparent;\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: flex-start;\r\n`;\r\n\r\nconst LoaderContainer = styled.div`\r\n    position: relative;\r\n    width: 1.8rem;\r\n    height: 1.8rem;\r\n    margin: .5rem;\r\n    margin-right: 5px;\r\n`;\r\n\r\nconst Text = styled.p`\r\n    height: 1.6rem;\r\n    font-weight: 600;\r\n    font-size: .9rem;\r\n    text-transform: uppercase;\r\n    color: rgba(255,255,255,.3);\r\n    margin-bottom: .25rem;\r\n`;\r\n\r\nconst loaderAnimation = keyframes`\r\n    from {\r\n        transform: rotate(0deg) translate(-50%, -50%);\r\n    }\r\n    to {\r\n        transform: rotate(360deg) translate(-50%, -50%);\r\n    }\r\n`;\r\n\r\nconst Loader = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: 1.6rem;\r\n    height: 1.6rem;\r\n    border-radius: 5px;\r\n    transform-origin: top left;\r\n    background: rgba(255,255,255,.3);\r\n    animation: ${loaderAnimation} 1s ease infinite;\r\n`;\r\n\r\nconst innerLoaderAnimation = keyframes`\r\n    0% {\r\n        transform: rotate(0deg) translate(-50%, -50%);\r\n    }\r\n    100% {\r\n        transform: rotate(-360deg) translate(-50%, -50%);\r\n    }\r\n`;\r\n\r\nconst InnerLoader = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: 1rem;\r\n    height: 1rem;\r\n    border-radius: 5px;\r\n    transform-origin: top left;\r\n    background: ${theme.primaryColor};\r\n    animation: ${innerLoaderAnimation} 1s ease infinite;\r\n`;\r\n\r\nconst ABanner = animated(Banner);\r\nconst ALoader = animated(Loader);\r\nconst AInnerLoader = animated(InnerLoader);\r\nconst ALoaderContainer = animated(LoaderContainer);\r\n\r\nexport {\r\n    Text,\r\n    Banner,\r\n    ABanner,\r\n    Loader,\r\n    ALoader,\r\n    InnerLoader,\r\n    AInnerLoader,\r\n    LoaderContainer,\r\n    ALoaderContainer,\r\n};","import * as React from 'react';\r\nimport { useSpring } from 'react-spring';\r\nimport { useLoaderBannerStore } from '../../stores';\r\nimport { Banner, Loader, InnerLoader, ALoaderContainer, Text } from './styles';\r\n\r\ninterface ILoaderBannerProps {\r\n    forceShow?: boolean;\r\n}\r\n\r\nconst LoaderBanner: React.FC<ILoaderBannerProps> = ({ forceShow }) => {\r\n\r\n    const { opacity } = useSpring({\r\n        opacity: 1,\r\n        from: { opacity: 0 },\r\n    });\r\n\r\n    const { loaderBanner } = useLoaderBannerStore();\r\n\r\n    if (loaderBanner.isLoading || forceShow) {\r\n        return (\r\n            <Banner>\r\n                <ALoaderContainer stlye={{ opacity }}>\r\n                    <Loader />\r\n                    <InnerLoader />\r\n                </ALoaderContainer>\r\n                <Text>{loaderBanner.text || 'Loading...'}</Text>\r\n            </Banner>\r\n        );\r\n    }\r\n    else return null;\r\n};\r\n\r\nexport default LoaderBanner;","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\nexport interface IInputProps {\r\n    isValid?: boolean;\r\n    isInvalid?: boolean;\r\n}\r\n\r\nconst Input = styled.input<IInputProps>`\r\n    all: unset;\r\n    position: relative;\r\n    box-sizing: border-box;\r\n    padding: .5rem;\r\n    padding-left: 1rem;\r\n    padding-right: ${({ type }) => type === 'password' ? '3rem' : '1rem'};\r\n    width: 100%;\r\n    height: ${theme.baseHeight};\r\n    color: ${theme.defaultFontColor};\r\n    margin-bottom: .7rem;\r\n    background-color: ${theme.defaultColor};\r\n    border: 1px solid;\r\n    border-color: ${({ isValid, isInvalid }) => isValid ? theme.successColor : isInvalid ? theme.dangerColor : 'transparent'};\r\n    \r\n    ::placeholder {\r\n        text-transform: uppercase;\r\n        color: ${theme.defaultFontColor};\r\n        letter-spacing: 1px;\r\n    }\r\n`;\r\n\r\nexport default animated(Input);","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\n\r\nexport const PasswordInputContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n`;\r\n\r\nexport const EyeIconContainer = styled.label`\r\n    z-index: 10;\r\n    position: absolute;\r\n    height: calc(100% - .7rem);\r\n    width: 3rem;\r\n    top: 0;\r\n    right: 0;\r\n    color: ${theme.defaultFontColor};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;","import * as React from 'react';\r\nimport { animated } from 'react-spring';\r\nimport Input, { IInputProps } from '../styles/input';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { EyeIconContainer, PasswordInputContainer } from './styles';\r\nimport { faEye, faEyeSlash } from '@fortawesome/free-regular-svg-icons';\r\n\r\ninterface IPasswordInput { }\r\n\r\nconst PasswordInput: React.FC<IPasswordInput & React.InputHTMLAttributes<HTMLInputElement> & IInputProps> = ({ style, ...rest }) => {\r\n\r\n    const [showPW, setShowPW] = React.useState<boolean>(false);\r\n\r\n    return (\r\n        <PasswordInputContainer style={{ ...style }}>\r\n            <EyeIconContainer htmlFor={rest.name} onClick={() => setShowPW(!showPW)}>\r\n                <FontAwesomeIcon\r\n                    icon={!showPW ? faEye : faEyeSlash}\r\n                    style={{ width: '1.5rem', height: '1.5rem' }}\r\n                />\r\n            </EyeIconContainer>\r\n            <Input id={rest.name} type={showPW ? 'text' : 'password'} {...rest} />\r\n        </PasswordInputContainer>\r\n    );\r\n}\r\n\r\nexport default animated(PasswordInput);","import * as React from 'react';\r\nimport { useAuthStore } from '../../stores';\r\nimport { Route, RouteProps, Redirect } from 'react-router-dom';\r\n\r\ninterface IAuthorizedRouteProps {\r\n    screen: JSX.Element;\r\n}\r\n\r\nconst AuthorizedRoute: React.FC<IAuthorizedRouteProps & RouteProps> = ({ screen, ...rest }) => {\r\n    const { currentUser } = useAuthStore();\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={\r\n                () => !!currentUser\r\n                    ? screen\r\n                    : <Redirect to={'/'} />\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default AuthorizedRoute;","import * as React from 'react';\r\nimport { useAuthStore } from '../../stores';\r\nimport { Route, RouteProps, Redirect } from 'react-router-dom';\r\n\r\ninterface IUnauthorizedRouteProps {\r\n    screen: JSX.Element;\r\n}\r\n\r\nconst UnauthorizedRoute: React.FC<IUnauthorizedRouteProps & RouteProps> = ({ screen, ...rest }) => {\r\n    const { currentUser } = useAuthStore();\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={\r\n                () => !!currentUser\r\n                    ? <Redirect to={'/profile'} />\r\n                    : screen\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default UnauthorizedRoute;","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\ninterface IButtonProps {\r\n    variant: ('default' | 'primary');\r\n}\r\n\r\nconst Button = styled.button<IButtonProps>`\r\n    all: unset;\r\n    box-sizing: border-box;\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: ${theme.baseHeight};\r\n    background-color: ${({ variant }) => variant === 'default' ? theme.defaultColor : theme.primaryColor};\r\n    color: ${theme.defaultFontColor};\r\n    text-transform: uppercase;\r\n    margin-bottom: 1.2vh;\r\n    font-weight: 700;\r\n    box-shadow: ${({ variant }) => variant === 'default' ? 'none' : '4px 4px 20px rgba(0,0,0,0.6)'}\r\n`;\r\n\r\nexport default animated(Button);","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\nconst SocialMediaButton = styled.button`\r\n    all: unset;\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 3rem;\r\n    height: 3rem;\r\n    border: 3px solid ${theme.defaultFontColor};\r\n    border-radius: 50%;\r\n    background: transparent;\r\n    color: ${theme.defaultFontColor};\r\n    margin: 0 .75rem;\r\n`;\r\n\r\nexport default animated(SocialMediaButton);","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\nconst UserCircularPicture = styled.div<{ url: string, size: string }>`\r\n    width: ${({ size }) => size};\r\n    height: ${({ size }) => size};\r\n    border-radius: 50%;\r\n    border: 5px solid ${theme.defaultFontColor};\r\n    background-image: url(${({ url }) => url});\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n`;\r\n\r\nexport default animated(UserCircularPicture);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './components';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}