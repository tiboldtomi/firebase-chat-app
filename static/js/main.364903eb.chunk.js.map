{"version":3,"sources":["screens/home/index.tsx","screens/login/hooks/use-animation.ts","utils/theme.ts","screens/welcome/styles.ts","stores/notification/notification.actions.ts","stores/notification/notification.reducer.ts","interfaces/notification.interface.ts","stores/notification/index.tsx","screens/login/styles.ts","screens/login/index.tsx","screens/welcome/hooks/use-animation.ts","screens/welcome/index.tsx","screens/register/hooks/use-animation.ts","screens/register/styles.ts","screens/register/index.tsx","components/app/styles.ts","components/app/index.tsx","components/notification/styles.ts","components/notification/index.tsx","components/loader-banner/styles.ts","components/styles/input.ts","components/password-input/styles.ts","components/password-input/index.tsx","components/authenticated-route/index.tsx","components/styles/button.ts","components/styles/social-media-button.ts","serviceWorker.ts","index.tsx"],"names":["Home","useAnimation","titleAnimation","useSpring","opacity","from","delay","subTitleAnimation","transform","emailFieldAnimation","pwFieldAnimation","loginButtonAnimation","socialMediaAnimation","titleIconAnimation","theme","vw","document","documentElement","clientWidth","vh","clientHeight","fontSize","defaultFontColor","primaryFontColor","successFontColor","dangerFontColor","warningFontColor","primaryColor","defaultColor","dark","dark06","darker","darker06","successColor","dangerColor","successBorderColor","dangerBorderColor","warningBorderColor","successBackgroundColor","dangerBackgroundColor","warningBackgroundColor","NotificationActions","WelcomeContainer","styled","div","WelcomeCircle","H1","h1","TitleContainer","TitleIcon","ControlsContainer","P","p","SocialMediaContainer","NotificationType","notificationReducer","state","action","type","ADD","payload","length","filter","_","i","RESET","DELETE","noti","id","Error","initialState","NotificationStoreContext","React","notifications","dispatchNotification","useNotificationStore","LoginContainer","SubTitle","h2","validationSchema","yup","shape","email","required","password","min","Login","formController","useFormik","initialValues","onSubmit","uuid","timeStamp","Date","now","Success","message","console","log","resetForm","isSubmitting","isValid","Danger","errors","AP","animated","AH1","ASubTitle","ATitleIcon","ASocialMediaContainer","style","icon","faSignInAlt","width","height","name","placeholder","value","values","onChange","handleChange","touched","isInvalid","variant","onClick","handleSubmit","faFacebookF","size","faGoogle","faGithub","defaultButtonTransform","primaryButtonTransform","socialMediaContainerTransform","titleIconScale","Welcome","history","useHistory","set","moveTo","path","setTimeout","push","AWelcomeCircle","AControlsContainer","faTrophy","usernameFieldAnimation","confirmPWFieldAnimation","registerButtonAnimation","RegisterContainer","Register","faUserPlus","AppContainer","BottomCircle","TopCircle","InnerCircle","App","basename","exact","render","screen","userLoggedIn","NotificationContainer","NotificationText","strLenght","IconContainer","AIconContainer","ANotificationContainer","Notification","notificationAnimations","useTransition","map","n","index","y","leave","enter","update","config","default","friction","notification","item","props","key","faExclamation","Warning","faInfo","faCheck","Banner","LoaderContainer","loaderAnimation","keyframes","Loader","innerLoaderAnimation","InnerLoader","Input","input","PasswordInputContainer","EyeIconContainer","rest","showPW","setShowPW","faEyeSlash","faEye","AuthenticatedRoute","to","Button","button","SocialMediaButton","Boolean","window","location","hostname","match","ReactDOM","children","Provider","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.364903eb.chunk.js","sourcesContent":["import * as React from 'react';\r\n\r\ninterface IHomeProps { }\r\n\r\nconst Home: React.FC<IHomeProps> = () => {\r\n\r\n    return (\r\n        <div>{'Home'}</div>\r\n    );\r\n}\r\n\r\nexport default Home;","import { useSpring } from 'react-spring';\r\n\r\nconst useAnimation = () => {\r\n    const { opacity: titleAnimation } = useSpring({\r\n        opacity: 1,\r\n        from: { opacity: 0 },\r\n        delay: 0,\r\n    });\r\n    const { transform: subTitleAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 100\r\n    });\r\n    const { transform: emailFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 200\r\n    });\r\n    const { transform: pwFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 300\r\n    });\r\n    const { transform: loginButtonAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 400\r\n    });\r\n    const { transform: socialMediaAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 500\r\n    });\r\n    const { transform: titleIconAnimation } = useSpring({\r\n        transform: 'scale(1)',\r\n        from: { transform: 'scale(0)' },\r\n        delay: 600,\r\n    });\r\n\r\n    return {\r\n        titleAnimation,\r\n        pwFieldAnimation,\r\n        subTitleAnimation,\r\n        titleIconAnimation,\r\n        emailFieldAnimation,\r\n        loginButtonAnimation,\r\n        socialMediaAnimation,\r\n    };\r\n}\r\n\r\nexport default useAnimation;","const theme = {\r\n    vw: document.documentElement.clientWidth,\r\n    vh: document.documentElement.clientHeight,\r\n\r\n    fontSize: '16px',\r\n    defaultFontColor: '#fff',\r\n    primaryFontColor: '#0e9aa7',\r\n    successFontColor: '#155724',\r\n    dangerFontColor: '#721c24',\r\n    warningFontColor: '#856404',\r\n\r\n    primaryColor: '#3da4ab',\r\n    defaultColor: 'rgba(255,255,255,0.15)',\r\n    dark: 'rgba(48,48,48,1)',\r\n    dark06: 'rgba(48,48,48,0.6)',\r\n    darker: 'rgba(30,30,30,1)',\r\n    darker06: 'rgba(30,30,30,0.6)',\r\n    successColor: '#28a745',\r\n    dangerColor: '#dc3545',\r\n\r\n    // Notification theme\r\n    successBorderColor: '#c3e6cb',\r\n    dangerBorderColor: '#f5c6cb',\r\n    warningBorderColor: '#ffeeba',\r\n    successBackgroundColor: '#d4edda',\r\n    dangerBackgroundColor: '#f8d7da',\r\n    warningBackgroundColor: '#fff3cd',\r\n};\r\n\r\nexport default theme;","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\n\r\nexport const WelcomeContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: flex-end;\r\n`;\r\n\r\nexport const WelcomeCircle = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    width: ${theme.vw > theme.vh ? '100vw' : '100vh'};\r\n    height: ${theme.vw > theme.vh ? '100vw' : '100vh'};\r\n    padding-bottom: 5%;\r\n    border-radius: 50%;\r\n    box-shadow: inset -1px -1px 10px rgba(0,0,0,0.6), 5px 5px 25px rgba(0,0,0,0.6), -5px -5px 25px rgba(0,0,0,0.6);\r\n    background-color: ${theme.primaryColor};\r\n    background-image: linear-gradient(rgba(255,255,255,0.4), rgba(255,255,255,0));\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: center;\r\n\r\n    @media (max-width: 700px) {\r\n        padding-bottom: 20%;\r\n    }\r\n`;\r\n\r\nexport const H1 = styled.h1`\r\n    font-size: 3.5rem;\r\n    color: ${theme.defaultFontColor};\r\n    text-align: center;\r\n    letter-spacing: 2px;\r\n    margin-bottom: 2.5vh;\r\n\r\n    @media (max-width: 700px) {\r\n        font-size: 2.5rem;\r\n    }\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const TitleIcon = styled.div`\r\n    height: 5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: ${theme.defaultFontColor};\r\n\r\n    @media (max-width: 700px) {\r\n        height: 5rem;\r\n    }\r\n`;\r\n\r\nexport const ControlsContainer = styled.div`\r\n    width: 100%;\r\n    padding: 0 10vw 10vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nexport const P = styled.p`\r\n    font-size: 0.8rem;\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    color: ${theme.defaultFontColor};\r\n    margin: 1.5rem 0;\r\n    letter-spacing: 1px;\r\n    text-align: center;\r\n`;\r\n\r\nexport const SocialMediaContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;","export enum NotificationActions {\r\n    ADD = 'ADD',\r\n    RESET = 'RESET',\r\n    DELETE = 'DELETE',\r\n};","import { IAction } from '../../interfaces/action.interface';\r\nimport { NotificationActions } from './notification.actions';\r\nimport { INotification } from '../../interfaces/notification.interface';\r\n\r\nexport const notificationReducer = (state: INotification[], action: IAction<NotificationActions, INotification | undefined>): INotification[] => {\r\n    switch (action.type) {\r\n        case NotificationActions.ADD:\r\n            if (action.payload) {\r\n                return [\r\n                    action.payload,\r\n                    ...(state.length === 5 ? state.filter((_, i) => i !== 4) : state)\r\n                ]\r\n            }\r\n            else return [...state];\r\n\r\n        case NotificationActions.RESET:\r\n            return [];\r\n\r\n        case NotificationActions.DELETE:\r\n            return [\r\n                ...state.filter(noti => noti.id !== action.payload?.id)\r\n            ];\r\n\r\n        default:\r\n            throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n}","import * as React from 'react';\r\nimport { IAction } from './action.interface';\r\nimport { NotificationActions } from '../stores/notification/notification.actions';\r\n\r\nexport enum NotificationType {\r\n    Danger = 'Danger',\r\n    Warning = 'Warning',\r\n    Success = 'Success',\r\n}\r\n\r\nexport interface INotification {\r\n    id: string;\r\n    message: string;\r\n    timeStamp: number;\r\n    type: NotificationType;\r\n}\r\n\r\nexport interface INotificationContext {\r\n    notifications: INotification[];\r\n    dispatchNotification: React.Dispatch<IAction<NotificationActions, INotification | undefined>>;\r\n}","import * as React from 'react';\r\nimport { notificationReducer } from './notification.reducer';\r\nimport { INotification, INotificationContext } from '../../interfaces/notification.interface';\r\n\r\nconst initialState: INotification[] = [];\r\n\r\nconst NotificationStoreContext = React.createContext<INotificationContext>({ notifications: initialState, dispatchNotification: () => { } });\r\n\r\nexport const NotificationStoreProvider: React.FC<{}> = ({ children }) => {\r\n    const [notifications, dispatchNotification] = React.useReducer(notificationReducer, initialState);\r\n\r\n    return (\r\n        <NotificationStoreContext.Provider value={{ notifications, dispatchNotification }}>\r\n            {children}\r\n        </NotificationStoreContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useNotificationStore = () => React.useContext(NotificationStoreContext);","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\n\r\nexport const LoginContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 15vh 10vw 1vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 15vh;\r\n`;\r\n\r\nexport const H1 = styled.h1`\r\n    font-size: 1.6rem;\r\n    color: ${theme.defaultFontColor};\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    margin-bottom: 1rem;\r\n    font-weight: 600;\r\n`;\r\n\r\nexport const TitleIcon = styled.div`\r\n    height: 4rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: ${theme.defaultFontColor};\r\n`;\r\n\r\nexport const SubTitle = styled.h2`\r\n    font-size: 1.6rem;\r\n    color: ${theme.primaryFontColor};\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    margin-bottom: 1rem;\r\n    font-weight: 600;\r\n`;","import * as yup from 'yup';\r\nimport { uuid } from 'uuidv4';\r\nimport * as React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { useAnimation } from './hooks';\r\nimport { animated } from 'react-spring';\r\nimport { SocialMediaContainer, P } from '../welcome/styles';\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { useNotificationStore } from '../../stores/notification';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { NotificationType } from '../../interfaces/notification.interface';\r\nimport { LoginContainer, H1, SubTitle, TitleIcon, TitleContainer } from './styles';\r\nimport { Button, Input, SocialMediaButton, PasswordInput } from '../../components';\r\nimport { faGoogle, faFacebookF, faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { NotificationActions } from '../../stores/notification/notification.actions';\r\n\r\nconst validationSchema = yup.object().shape({\r\n    email: yup.string()\r\n        .required('Every field is required!')\r\n        .email('Email is not valid!'),\r\n    password: yup.string()\r\n        .required('Every field is required!')\r\n        .min(6, 'Password must be at least 6 characters!'),\r\n});\r\n\r\ninterface IFormValues {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ninterface ILoginProps { }\r\n\r\nconst Login: React.FC<ILoginProps> = () => {\r\n\r\n    const { dispatchNotification } = useNotificationStore();\r\n\r\n    const {\r\n        titleAnimation,\r\n        pwFieldAnimation,\r\n        subTitleAnimation,\r\n        titleIconAnimation,\r\n        emailFieldAnimation,\r\n        socialMediaAnimation,\r\n        loginButtonAnimation,\r\n    } = useAnimation();\r\n\r\n    const formController = useFormik<IFormValues>({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n        onSubmit: ({ email, password }) => {\r\n            dispatchNotification({\r\n                type: NotificationActions.ADD,\r\n                payload: {\r\n                    id: uuid(),\r\n                    timeStamp: Date.now(),\r\n                    type: NotificationType.Success,\r\n                    message: 'Form submitted!! :)',\r\n                }\r\n            });\r\n            console.log('%c Submitted!', 'color: green');\r\n            formController.resetForm();\r\n        },\r\n        validationSchema,\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        if (!formController.isSubmitting && !formController.isValid) {\r\n            dispatchNotification({\r\n                type: NotificationActions.ADD,\r\n                payload: {\r\n                    id: uuid(),\r\n                    timeStamp: Date.now(),\r\n                    type: NotificationType.Danger,\r\n                    message: (formController.errors.email || formController.errors.password) as string,\r\n                }\r\n            });\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [formController.isSubmitting]);\r\n\r\n    const AP = animated(P);\r\n    const AH1 = animated(H1);\r\n    const ASubTitle = animated(SubTitle);\r\n    const ATitleIcon = animated(TitleIcon);\r\n    const ASocialMediaContainer = animated(SocialMediaContainer);\r\n\r\n    return (\r\n        <LoginContainer>\r\n            <TitleContainer>\r\n                <AH1 style={{ opacity: titleAnimation }}>{'welcome back'}</AH1>\r\n                <ATitleIcon style={{ transform: titleIconAnimation }}>\r\n                    <FontAwesomeIcon icon={faSignInAlt} style={{ width: '100%', height: '100%' }} />\r\n                </ATitleIcon>\r\n            </TitleContainer>\r\n            <ASubTitle style={{ transform: subTitleAnimation }}>{'login in'}</ASubTitle>\r\n            <Input\r\n                name={'email'}\r\n                placeholder={'email'}\r\n                value={formController.values.email}\r\n                onChange={formController.handleChange}\r\n                style={{ transform: emailFieldAnimation }}\r\n                isValid={!!(formController.touched.email && !formController.errors.email)}\r\n                isInvalid={!!(formController.touched.email && !!formController.errors.email)}\r\n            />\r\n            <PasswordInput\r\n                name={'password'}\r\n                placeholder={'password'}\r\n                value={formController.values.password}\r\n                onChange={formController.handleChange}\r\n                style={{ transform: pwFieldAnimation }}\r\n                isValid={!!(formController.touched.password && !formController.errors.password)}\r\n                isInvalid={!!(formController.touched.password && !!formController.errors.password)}\r\n            />\r\n            <Button\r\n                variant={'primary'}\r\n                onClick={formController.handleSubmit}\r\n                style={{ transform: loginButtonAnimation }}\r\n            >\r\n                {'Login'}\r\n            </Button>\r\n            <AP style={{ transform: socialMediaAnimation }}>{'or login using social media'}</AP>\r\n            <ASocialMediaContainer style={{ transform: socialMediaAnimation }}>\r\n                <SocialMediaButton onClick={() => console.log('facebook login onclick')}>\r\n                    <FontAwesomeIcon icon={faFacebookF} size={'2x'} />\r\n                </SocialMediaButton>\r\n                <SocialMediaButton onClick={() => console.log('google login onclick')}>\r\n                    <FontAwesomeIcon icon={faGoogle} size={'2x'} />\r\n                </SocialMediaButton>\r\n                <SocialMediaButton onClick={() => console.log('github login onclick')}>\r\n                    <FontAwesomeIcon icon={faGithub} size={'2x'} />\r\n                </SocialMediaButton>\r\n            </ASocialMediaContainer>\r\n        </LoginContainer>\r\n    );\r\n}\r\n\r\nexport default Login;","import { useSpring } from 'react-spring';\r\n\r\nconst useAnimation = () => {\r\n    const { transform: defaultButtonTransform } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px,600px, 0px)' },\r\n        delay: 200,\r\n    });\r\n\r\n    const { transform: primaryButtonTransform } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px,600px, 0px)' },\r\n        delay: 300,\r\n    });\r\n\r\n    const { transform: socialMediaContainerTransform } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px,600px, 0px)' },\r\n        delay: 400,\r\n    });\r\n\r\n    const { transform: titleIconScale } = useSpring({\r\n        transform: 'scale(1)',\r\n        from: { transform: 'scale(0)' },\r\n        delay: 700,\r\n    });\r\n\r\n    return {\r\n        titleIconScale,\r\n        defaultButtonTransform,\r\n        primaryButtonTransform,\r\n        socialMediaContainerTransform,\r\n    };\r\n}\r\n\r\nexport default useAnimation;","import * as React from 'react';\r\nimport { theme } from '../../utils';\r\nimport { useAnimation } from './hooks';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSpring, animated } from 'react-spring';\r\nimport { faTrophy } from '@fortawesome/free-solid-svg-icons';\r\nimport { Button, SocialMediaButton } from '../../components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGoogle, faFacebookF, faGithub } from '@fortawesome/free-brands-svg-icons'\r\nimport { WelcomeContainer, WelcomeCircle, H1, ControlsContainer, P, SocialMediaContainer, TitleContainer, TitleIcon } from './styles';\r\n\r\ninterface IWelcomeProps { }\r\n\r\nconst Welcome: React.FC<IWelcomeProps> = () => {\r\n    const history = useHistory();\r\n\r\n    const { vh, vw } = theme;\r\n\r\n    const {\r\n        titleIconScale,\r\n        defaultButtonTransform,\r\n        primaryButtonTransform,\r\n        socialMediaContainerTransform,\r\n    } = useAnimation();\r\n\r\n    const [{ transform, opacity }, set] = useSpring(() => ({ transform: `translate3d(0,${vw > vh ? '-150vw' : '-150vh'},0)`, opacity: 1 }));\r\n    set({ transform: `translate3d(0,${vw > vh ? '-75vw' : '-50vh'},0)` });\r\n\r\n    const moveTo = (path: string) => {\r\n        set({ transform: `translate3d(0,${vw > vh ? '-120vw' : '-120vh'},0)`, opacity: 0 });\r\n        setTimeout(() => history.push(path), 400);\r\n    };\r\n\r\n    const AP = animated(P);\r\n    const ATitleIcon = animated(TitleIcon);\r\n    const AWelcomeCircle = animated(WelcomeCircle);\r\n    const AControlsContainer = animated(ControlsContainer);\r\n    const ASocialMediaContainer = animated(SocialMediaContainer);\r\n\r\n    return (\r\n        <WelcomeContainer>\r\n            <AWelcomeCircle style={{ transform }}>\r\n                <TitleContainer>\r\n                    <H1>{'HOMiESCUP'}</H1>\r\n                    <ATitleIcon style={{ transform: titleIconScale }}>\r\n                        <FontAwesomeIcon icon={faTrophy} style={{ width: '100%', height: '100%' }} />\r\n                    </ATitleIcon>\r\n                </TitleContainer>\r\n            </AWelcomeCircle>\r\n            <AControlsContainer style={{ opacity }}>\r\n                <Button variant={'default'} style={{ transform: defaultButtonTransform }} onClick={() => moveTo('/login')}>\r\n                    {'Login'}\r\n                </Button>\r\n                <Button variant={'primary'} style={{ transform: primaryButtonTransform }} onClick={() => moveTo('/register')}>\r\n                    {'Create account'}\r\n                </Button>\r\n                <AP style={{ transform: socialMediaContainerTransform }}>{'or login using social media'}</AP>\r\n                <ASocialMediaContainer style={{ transform: socialMediaContainerTransform }}>\r\n                    <SocialMediaButton onClick={() => console.log('facebook onclick')}>\r\n                        <FontAwesomeIcon icon={faFacebookF} size={'2x'} />\r\n                    </SocialMediaButton>\r\n                    <SocialMediaButton onClick={() => console.log('google plus onclick')}>\r\n                        <FontAwesomeIcon icon={faGoogle} size={'2x'} />\r\n                    </SocialMediaButton>\r\n                    <SocialMediaButton onClick={() => console.log('github login onclick')}>\r\n                        <FontAwesomeIcon icon={faGithub} size={'2x'} />\r\n                    </SocialMediaButton>\r\n                </ASocialMediaContainer>\r\n            </AControlsContainer>\r\n        </WelcomeContainer>\r\n    );\r\n}\r\n\r\nexport default Welcome;","import { useSpring } from 'react-spring';\r\n\r\nconst useAnimation = () => {\r\n    const { opacity: titleAnimation } = useSpring({\r\n        opacity: 1,\r\n        from: { opacity: 0 },\r\n        delay: 0,\r\n    });\r\n    const { transform: subTitleAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 100\r\n    });\r\n    const { transform: usernameFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 200\r\n    });\r\n    const { transform: emailFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 300\r\n    });\r\n    const { transform: pwFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 400\r\n    });\r\n    const { transform: confirmPWFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 500\r\n    });\r\n    const { transform: registerButtonAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 600\r\n    });\r\n    const { transform: titleIconAnimation } = useSpring({\r\n        transform: 'scale(1)',\r\n        from: { transform: 'scale(0)' },\r\n        delay: 700,\r\n    });\r\n\r\n    return {\r\n        titleAnimation,\r\n        pwFieldAnimation,\r\n        subTitleAnimation,\r\n        titleIconAnimation,\r\n        emailFieldAnimation,\r\n        usernameFieldAnimation,\r\n        confirmPWFieldAnimation,\r\n        registerButtonAnimation,\r\n    };\r\n}\r\n\r\nexport default useAnimation;","import styled from 'styled-components';\r\n\r\nexport const RegisterContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 15vh 10vw 1vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n`;","import * as React from 'react';\r\nimport { useAnimation } from './hooks';\r\nimport { animated } from 'react-spring';\r\nimport { RegisterContainer } from './styles';\r\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { Button, Input, PasswordInput } from '../../components';\r\nimport { H1, TitleContainer, TitleIcon, SubTitle } from '../login/styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\ninterface IRegisterProps { }\r\n\r\nconst Register: React.FC<IRegisterProps> = () => {\r\n\r\n    const {\r\n        titleAnimation,\r\n        pwFieldAnimation,\r\n        subTitleAnimation,\r\n        titleIconAnimation,\r\n        emailFieldAnimation,\r\n        usernameFieldAnimation,\r\n        confirmPWFieldAnimation,\r\n        registerButtonAnimation,\r\n    } = useAnimation();\r\n\r\n    const AH1 = animated(H1);\r\n    const ASubTitle = animated(SubTitle);\r\n    const ATitleIcon = animated(TitleIcon);\r\n\r\n    return (\r\n        <RegisterContainer>\r\n            <TitleContainer>\r\n                <AH1 style={{ opacity: titleAnimation }}>{'great idea'}</AH1>\r\n                <ATitleIcon style={{ transform: titleIconAnimation }}>\r\n                    <FontAwesomeIcon icon={faUserPlus} style={{ width: '100%', height: '100%' }} />\r\n                </ATitleIcon>\r\n            </TitleContainer>\r\n            <ASubTitle style={{ transform: subTitleAnimation }}>{'register now'}</ASubTitle>\r\n            <Input style={{ transform: usernameFieldAnimation }} name={'username'} placeholder={'username'} />\r\n            <Input style={{ transform: emailFieldAnimation }} name={'email'} placeholder={'email'} />\r\n            <PasswordInput style={{ transform: pwFieldAnimation }} name={'password'} placeholder={'password'} />\r\n            <PasswordInput style={{ transform: confirmPWFieldAnimation }} name={'confirmPassword'} placeholder={'confirm password'} />\r\n            <Button style={{ transform: registerButtonAnimation }} variant={'primary'}>{'register'}</Button>\r\n        </RegisterContainer>\r\n    );\r\n}\r\n\r\nexport default Register;","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\n\r\nexport const AppContainer = styled.div`\r\n    position: relative;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-color: ${theme.dark};\r\n    background-image: linear-gradient(135deg, rgba(48,48,48,1) 0%, rgba(255,255,255,.05) 100%);\r\n`;\r\n\r\nexport const BottomCircle = styled.div`\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: -50vh;\r\n    width: 100vh;\r\n    height: 100vh;\r\n    border-radius: 50%;\r\n    background-color: ${theme.darker06};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    @media (min-width: 700px) {\r\n        width: 900px;\r\n        height: 900px;\r\n        bottom: -450px;\r\n    }\r\n`;\r\n\r\nexport const TopCircle = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: -50vh;\r\n    width: 100vh;\r\n    height: 100vh;\r\n    border-radius: 50%;\r\n    background-color: ${theme.darker06};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    @media (min-width: 700px) {\r\n        width: 900px;\r\n        height: 900px;\r\n        bottom: -450px;\r\n    }\r\n`;\r\n\r\nexport const InnerCircle = styled.div`\r\n    width: 70vh;\r\n    height: 70vh;\r\n    border-radius: 50%;\r\n    background-color: ${theme.dark};\r\n\r\n    @media (min-width: 700px) {\r\n        width: 600px;\r\n        height: 600px;\r\n    }\r\n`;","import * as React from 'react';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom';\r\nimport { Login, Home, Register, Welcome } from '../../screens';\r\nimport { AuthenticatedRoute, Notification, LoaderBanner } from '../';\r\nimport { AppContainer, BottomCircle, InnerCircle, TopCircle } from './styles';\r\n\r\ninterface IAppProps { }\r\n\r\nconst App: React.FC<IAppProps> = () => {\r\n\r\n    return (\r\n        <AppContainer>\r\n            {/* <LoaderBanner /> */}\r\n            <Notification />\r\n            <TopCircle>\r\n                <InnerCircle />\r\n            </TopCircle>\r\n            <BottomCircle>\r\n                <InnerCircle />\r\n            </BottomCircle>\r\n            <HashRouter basename=\"/\">\r\n                <Switch>\r\n                    <Route exact={true} path={'/login'} render={() => <Login />} />\r\n                    <Route exact={true} path={'/welcome'} render={() => <Welcome />} />\r\n                    <Route exact={true} path={'/register'} render={() => <Register />} />\r\n                    <AuthenticatedRoute exact={true} path={'/'} screen={<Home />} userLoggedIn={false} />\r\n                </Switch>\r\n            </HashRouter>\r\n        </AppContainer>\r\n    );\r\n}\r\n\r\n\r\nexport default App;","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\nimport { NotificationType } from '../../interfaces/notification.interface';\r\n\r\ninterface INotificationContainerProps {\r\n    type: NotificationType;\r\n}\r\n\r\nconst NotificationContainer = styled.div<INotificationContainerProps>`\r\n    position: absolute;\r\n    z-index: 100;\r\n    top: .5rem;\r\n    left: 50%;\r\n    width: 94vw;\r\n    height: 3.5rem;\r\n    background: ${({ type }) => type === NotificationType.Danger\r\n        ? theme.dangerBackgroundColor\r\n        : type === NotificationType.Success\r\n            ? theme.successBackgroundColor\r\n            : theme.warningBackgroundColor};\r\n    border-radius: 5px;\r\n    border: 2px solid;\r\n    border-color: ${({ type }) => type === NotificationType.Danger\r\n        ? theme.dangerBorderColor\r\n        : type === NotificationType.Success\r\n            ? theme.successBorderColor\r\n            : theme.warningBorderColor};\r\n    color: ${({ type }) => type === NotificationType.Danger\r\n        ? theme.dangerFontColor\r\n        : type === NotificationType.Success\r\n            ? theme.successFontColor\r\n            : theme.warningFontColor};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n`;\r\n\r\nconst NotificationText = styled.p<{ strLenght: number }>`\r\n    font-size: ${({ strLenght }) => strLenght > 25 ? '.8rem' : '1rem'};\r\n    font-weight: 400;\r\n`;\r\n\r\nconst IconContainer = styled.div<INotificationContainerProps>`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 1.5rem;\r\n    height: 1.5rem;\r\n    border: 2px solid;\r\n    border-color: ${({ type }) => type === NotificationType.Danger\r\n        ? theme.dangerFontColor\r\n        : type === NotificationType.Success\r\n            ? theme.successFontColor\r\n            : theme.warningFontColor};\r\n    border-radius: 50%;\r\n    background: transparent;\r\n    color: ${({ type }) => type === NotificationType.Danger\r\n        ? theme.dangerFontColor\r\n        : type === NotificationType.Success\r\n            ? theme.successFontColor\r\n            : theme.warningFontColor};\r\n    margin: 0 .6rem 0 1rem;\r\n`;\r\n\r\nconst AIconContainer = animated(IconContainer);\r\nconst ANotificationText = animated(NotificationText);\r\nconst ANotificationContainer = animated(NotificationContainer);\r\n\r\nexport {\r\n    IconContainer,\r\n    AIconContainer,\r\n    NotificationText,\r\n    ANotificationText,\r\n    NotificationContainer,\r\n    ANotificationContainer,\r\n};","import * as React from 'react';\r\nimport { useNotificationStore } from '../../stores';\r\nimport { config, useTransition } from 'react-spring';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { NotificationType } from '../../interfaces/notification.interface';\r\nimport { faCheck, faInfo, faExclamation } from '@fortawesome/free-solid-svg-icons';\r\nimport { ANotificationContainer, NotificationText, AIconContainer } from './styles';\r\nimport { NotificationActions } from '../../stores/notification/notification.actions';\r\n\r\ninterface INotificationProps { }\r\n\r\nconst Notification: React.FC<INotificationProps> = () => {\r\n\r\n    const { notifications, dispatchNotification } = useNotificationStore();\r\n\r\n    const notificationAnimations = useTransition(\r\n        notifications.map((n, index) => ({ ...n, y: index * 4 })),\r\n        n => n.id,\r\n        {\r\n            from: { opacity: 0, transform: `translate(-50%, -4rem)` },\r\n            leave: { opacity: 0 },\r\n            enter: ({ y }) => ({ opacity: 1, transform: `translate(-50%, ${y}rem)` }),\r\n            update: ({ y }) => ({ opacity: 1, transform: `translate(-50%, ${y}rem)` }),\r\n            config: { ...config.default, friction: 16 }\r\n        }\r\n    );\r\n\r\n    React.useEffect(() => {\r\n        if (notifications.length > 0) {\r\n            setTimeout(() => dispatchNotification({ type: NotificationActions.DELETE, payload: notifications[0] }), 4000);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [notifications]);\r\n\r\n\r\n    return (\r\n        <>\r\n            {notificationAnimations.map(({ item: notification, props }) => {\r\n                const { opacity, transform } = props;\r\n                return (\r\n                    <ANotificationContainer key={notification.id} type={notification.type} style={{ transform, opacity }}>\r\n                        <AIconContainer type={notification.type}>\r\n                            <FontAwesomeIcon\r\n                                icon={\r\n                                    notification.type === NotificationType.Danger\r\n                                        ? faExclamation\r\n                                        : notification.type === NotificationType.Warning\r\n                                            ? faInfo\r\n                                            : faCheck\r\n                                }\r\n                            />\r\n                        </AIconContainer>\r\n                        <NotificationText strLenght={notification.message.length}>{notification.message}</NotificationText>\r\n                    </ANotificationContainer>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Notification;","import styled, { keyframes } from 'styled-components';\r\nimport { animated } from 'react-spring';\r\nimport { theme } from '../../utils';\r\n\r\nconst Banner = styled.div`\r\n    position: absolute;\r\n    z-index: 100;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background: transparent;\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: flex-start;\r\n`;\r\n\r\nconst LoaderContainer = styled.div`\r\n    position: relative;\r\n    width: 1.8rem;\r\n    height: 1.8rem;\r\n    margin: .5rem;\r\n`;\r\n\r\nconst Text = styled.p`\r\n    width: 1.8rem;\r\n    height: 1.8rem;\r\n    font-weight: 600;\r\n    font-size: 1.2rem;\r\n    text-transform: uppercase;\r\n    color: rgba(255,255,255,.3);\r\n    margin-bottom: .25rem;\r\n`;\r\n\r\nconst loaderAnimation = keyframes`\r\n    from {\r\n        transform: rotate(0deg) translate(-50%, -50%);\r\n    }\r\n    to {\r\n        transform: rotate(360deg) translate(-50%, -50%);\r\n    }\r\n`;\r\n\r\nconst Loader = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: 1.8rem;\r\n    height: 1.8rem;\r\n    border-radius: 5px;\r\n    transform-origin: top left;\r\n    background: rgba(255,255,255,.3);\r\n    animation: ${loaderAnimation} 1s ease infinite;\r\n`;\r\n\r\nconst innerLoaderAnimation = keyframes`\r\n    0% {\r\n        transform: rotate(0deg) translate(-50%, -50%);\r\n    }\r\n    100% {\r\n        transform: rotate(-360deg) translate(-50%, -50%);\r\n    }\r\n`;\r\n\r\nconst InnerLoader = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: 1.2rem;\r\n    height: 1.2rem;\r\n    border-radius: 5px;\r\n    transform-origin: top left;\r\n    background: ${theme.primaryColor};\r\n    animation: ${innerLoaderAnimation} 1s ease infinite;\r\n`;\r\n\r\nconst ABanner = animated(Banner);\r\nconst ALoader = animated(Loader);\r\nconst AInnerLoader = animated(InnerLoader);\r\nconst ALoaderContainer = animated(LoaderContainer);\r\n\r\nexport {\r\n    Text,\r\n    Banner,\r\n    ABanner,\r\n    Loader,\r\n    ALoader,\r\n    InnerLoader,\r\n    AInnerLoader,\r\n    LoaderContainer,\r\n    ALoaderContainer,\r\n};","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\nexport interface IInputProps {\r\n    isValid?: boolean;\r\n    isInvalid?: boolean;\r\n}\r\n\r\nconst Input = styled.input<IInputProps>`\r\n    all: unset;\r\n    position: relative;\r\n    box-sizing: border-box;\r\n    padding: .5rem;\r\n    padding-left: 1rem;\r\n    padding-right: ${({ type }) => type === 'password' ? '3rem' : '1rem'};\r\n    width: 100%;\r\n    height: 5.5vh;\r\n    color: ${theme.defaultFontColor};\r\n    margin-bottom: .7rem;\r\n    background-color: ${theme.defaultColor};\r\n    border: 1px solid;\r\n    border-color: ${({ isValid, isInvalid }) => isValid ? theme.successColor : isInvalid ? theme.dangerColor : 'transparent'};\r\n    \r\n    ::placeholder {\r\n        text-transform: uppercase;\r\n        color: ${theme.defaultFontColor};\r\n        letter-spacing: 1px;\r\n    }\r\n`;\r\n\r\nexport default animated(Input);","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\n\r\nexport const PasswordInputContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n`;\r\n\r\nexport const EyeIconContainer = styled.div`\r\n    z-index: 10;\r\n    position: absolute;\r\n    height: calc(100% - .7rem);\r\n    width: 3rem;\r\n    top: 0;\r\n    right: 0;\r\n    color: ${theme.defaultFontColor};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;","import * as React from 'react';\r\nimport { animated } from 'react-spring';\r\nimport Input, { IInputProps } from '../styles/input';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { EyeIconContainer, PasswordInputContainer } from './styles';\r\nimport { faEye, faEyeSlash } from '@fortawesome/free-regular-svg-icons';\r\n\r\ninterface IPasswordInput { }\r\n\r\nconst PasswordInput: React.FC<IPasswordInput & React.InputHTMLAttributes<HTMLInputElement> & IInputProps> = ({ style, ...rest }) => {\r\n\r\n    const [showPW, setShowPW] = React.useState<boolean>(false);\r\n\r\n    return (\r\n        <PasswordInputContainer style={{ ...style }}>\r\n            <EyeIconContainer>\r\n                {!showPW\r\n                    ? <FontAwesomeIcon icon={faEye} style={{ width: '1.5rem', height: '1.5rem' }} onClick={() => setShowPW(true)} />\r\n                    : <FontAwesomeIcon icon={faEyeSlash} style={{ width: '1.5rem', height: '1.5rem' }} onClick={() => setShowPW(false)} />\r\n                }\r\n            </EyeIconContainer>\r\n            <Input type={showPW ? 'text' : 'password'} {...rest} />\r\n        </PasswordInputContainer>\r\n    );\r\n}\r\n\r\nexport default animated(PasswordInput);","import * as React from 'react';\r\nimport { Route, RouteProps, Redirect } from 'react-router-dom';\r\n\r\ninterface IAuthenticatedRouteProps {\r\n    userLoggedIn: boolean;\r\n    screen: JSX.Element;\r\n}\r\n\r\nconst AuthenticatedRoute: React.FC<IAuthenticatedRouteProps & RouteProps> = ({ userLoggedIn, screen, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={() => userLoggedIn\r\n                ? screen\r\n                : <Redirect to={'/welcome'} />\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default AuthenticatedRoute;\r\n","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\ninterface IButtonProps {\r\n    variant: ('default' | 'primary');\r\n}\r\n\r\nconst Button = styled.button<IButtonProps>`\r\n    all: unset;\r\n    box-sizing: border-box;\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 5.5vh;\r\n    background-color: ${({ variant }) => variant === 'default' ? theme.defaultColor : theme.primaryColor};\r\n    color: ${theme.defaultFontColor};\r\n    text-transform: uppercase;\r\n    margin-bottom: 1.2vh;\r\n    font-weight: 700;\r\n    box-shadow: ${({ variant }) => variant === 'default' ? 'none' : '4px 4px 20px rgba(0,0,0,0.6)'}\r\n`;\r\n\r\nexport default animated(Button);","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\n\r\nconst SocialMediaButton = styled.button`\r\n    all: unset;\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 3rem;\r\n    height: 3rem;\r\n    border: 3px solid ${theme.defaultFontColor};\r\n    border-radius: 50%;\r\n    background: transparent;\r\n    color: ${theme.defaultFontColor};\r\n    margin: 0 .75rem;\r\n`;\r\n\r\nexport default SocialMediaButton;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './components';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { NotificationStoreProvider } from './stores';\r\n\r\nReactDOM.render(\r\n    <NotificationStoreProvider>\r\n        <App />\r\n    </NotificationStoreProvider>,\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}