{"version":3,"sources":["utils/theme.ts","constants/firebase-config.ts","utils/use-firebase.ts","utils/use-previous.ts","screens/home/styles.ts","interfaces/notification.interface.ts","stores/auth/index.tsx","stores/notification/notification.actions.ts","stores/notification/notification.reducer.ts","stores/loader-banner/loader-banner.actions.ts","stores/notification/index.tsx","stores/loader-banner/loader-banner.reducer.ts","stores/loader-banner/index.tsx","screens/home/index.tsx","screens/login/hooks/use-animation.ts","screens/welcome/styles.ts","screens/login/styles.ts","screens/login/index.tsx","screens/welcome/hooks/use-animation.ts","screens/welcome/index.tsx","screens/register/hooks/use-animation.ts","screens/register/styles.ts","screens/register/index.tsx","components/app/styles.ts","components/app/index.tsx","components/notification/styles.ts","components/notification/index.tsx","components/loader-banner/styles.ts","components/loader-banner/index.tsx","components/styles/input.ts","components/password-input/styles.ts","components/password-input/index.tsx","components/authorized-route/index.tsx","components/unauthorized-route/index.tsx","components/styles/button.ts","components/styles/social-media-button.ts","serviceWorker.ts","index.tsx"],"names":["theme","vw","document","documentElement","clientWidth","vh","clientHeight","baseHeight","fontSize","defaultFontColor","primaryFontColor","successFontColor","dangerFontColor","warningFontColor","primaryColor","defaultColor","dark","dark06","darker","darker06","successColor","dangerColor","successBorderColor","dangerBorderColor","warningBorderColor","successBackgroundColor","dangerBackgroundColor","warningBackgroundColor","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","auth","db","isInitialized","Promise","resolve","onAuthStateChanged","login","email","password","signInWithEmailAndPassword","logout","signOut","register","username","a","createUserWithEmailAndPassword","currentUser","updateProfile","displayName","sendPasswordResetEmail","loginSocialMedia","platform","provider","firebase","FacebookAuthProvider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","initializeApp","this","firestore","useFirebase","usePrevious","value","ref","React","current","NotificationType","_HomeContainer","styled","div","_TitleContainer","_H1","h1","_TitleIcon","_SubTitle","h2","H1","animated","HomeContainer","NotificationActions","AuthContext","AuthStoreProvider","children","setCurrentUser","unsubscribe","user","Provider","useAuthStore","LoaderBannerActions","notificationReducer","state","action","type","ADD","payload","RESET","DELETE","filter","noti","id","Error","initialState","NotificationStoreContext","notifications","dispatchNotification","NotificationStoreProvider","useNotificationStore","loaderBannerReducer","START","isLoading","text","STOP","undefined","LoaderBannerContext","loaderBanner","dispatchIsLoading","LoaderBannerStoreProvider","useLoaderBannerStore","Home","setUsername","placeholder","onChange","e","target","variant","onClick","then","uuid","timeStamp","Date","now","Success","message","useAnimation","titleAnimation","useSpring","opacity","from","delay","subTitleAnimation","transform","emailFieldAnimation","pwFieldAnimation","loginButtonAnimation","socialMediaAnimation","titleIconAnimation","_WelcomeContainer","_WelcomeCircle","_ControlsContainer","_P","p","_SocialMediaContainer","P","TitleIcon","WelcomeCircle","TitleContainer","WelcomeContainer","ControlsContainer","SocialMediaContainer","_LoginContainer","_ForgotPassword","SubTitle","LoginContainer","validationSchema","yup","shape","required","min","Login","formController","useFormik","initialValues","onSubmit","resetForm","catch","Danger","isSubmitting","isValid","key","errors","setTimeout","_loginWithSocialMedia","style","icon","faSignInAlt","width","height","name","values","handleChange","touched","isInvalid","handleSubmit","faFacebookF","size","faGoogle","faGithub","defaultButtonTransform","primaryButtonTransform","socialMediaContainerTransform","titleIconScale","Welcome","history","useHistory","set","moveTo","path","push","faTrophy","usernameFieldAnimation","confirmPWFieldAnimation","registerButtonAnimation","RegisterContainer","max","matches","confirmPassword","oneOf","Register","faUserPlus","AppContainer","ScreensContainer","BottomCircle","TopCircle","InnerCircle","App","firebaseInitialized","setFirebaseInitialized","forceShow","basename","exact","screen","NotificationContainer","NotificationText","strLenght","IconContainer","DeleteIconContainer","button","AIconContainer","ANotificationContainer","Notification","notificationAnimations","useTransition","map","n","index","y","leave","enter","update","config","default","friction","prevNotifications","length","newNotification","find","prevNoti","indexOf","notification","item","props","faExclamation","Warning","faInfo","faCheck","faTimes","Banner","LoaderContainer","Text","loaderAnimation","keyframes","Loader","innerLoaderAnimation","InnerLoader","ALoaderContainer","LoaderBanner","stlye","Input","input","PasswordInputContainer","EyeIconContainer","label","rest","showPW","setShowPW","htmlFor","faEyeSlash","faEye","AuthorizedRoute","render","to","UnauthorizedRoute","Button","SocialMediaButton","Boolean","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wLA+BeA,EA/BD,CACVC,GAAIC,SAASC,gBAAgBC,YAC7BC,GAAIH,SAASC,gBAAgBG,aAE7BC,WAAY,OAEZC,SAAU,OACVC,iBAAkB,OAClBC,iBAAkB,UAClBC,iBAAkB,UAClBC,gBAAiB,UACjBC,iBAAkB,UAElBC,aAAc,UACdC,aAAc,yBACdC,KAAM,mBACNC,OAAQ,qBACRC,OAAQ,mBACRC,SAAU,qBACVC,aAAc,UACdC,YAAa,UAGbC,mBAAoB,UACpBC,kBAAmB,UACnBC,mBAAoB,UACpBC,uBAAwB,UACxBC,sBAAuB,UACvBC,uBAAwB,W,2DCjBbC,G,OAXQ,CACnBC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBC0CbC,EAAmB,IAzCrB,aAAsB,IAAD,gCAHdC,UAGc,OAFdC,QAEc,OAMdC,cAAgB,WACnB,OAAO,IAAIC,SAAQ,SAAAC,GACf,EAAKJ,KAAKK,mBAAmBD,OARhB,KAYdE,MAAQ,SAACC,EAAeC,GAC3B,OAAO,EAAKR,KAAKS,2BAA2BF,EAAOC,IAblC,KAgBdE,OAAS,WACZ,OAAO,EAAKV,KAAKW,WAjBA,KAoBdC,SApBc,uCAoBH,WAAOC,EAAkBN,EAAeC,GAAxC,eAAAM,EAAA,sEACR,EAAKd,KAAKe,+BAA+BR,EAAOC,GADxC,0CAEP,EAAKR,KAAKgB,mBAFH,aAEP,EAAuBC,cAAc,CACxCC,YAAaL,KAHH,2CApBG,+DA2BdM,uBAAyB,SAACZ,GAC7B,OAAO,EAAKP,KAAKmB,uBAAuBZ,IA5BvB,KA+Bda,iBAAmB,SAACC,GACvB,IAAMC,EAAwB,aAAbD,EACX,IAAIE,IAASvB,KAAKwB,qBACL,WAAbH,EACI,IAAIE,IAASvB,KAAKyB,mBAClB,IAAIF,IAASvB,KAAK0B,mBAC5B,OAAO,EAAK1B,KAAK2B,gBAAgBL,IApCjCC,IAASK,cAActC,GACvBuC,KAAK7B,KAAOuB,IAASvB,OACrB6B,KAAK5B,GAAKsB,IAASO,aA0CZC,EAFK,kBAAMhC,GC1CXiC,EARK,SAAgBC,GAChC,IAAMC,EAAMC,WAIZ,OAHAA,aAAgB,WACZD,EAAIE,QAAUH,IACf,CAACA,IACGC,EAAIE,S,uoCCHf,ICAYC,EDANC,EAAiBC,IAAOC,IAAV,KAWdC,EAAkBF,IAAOC,IAAV,KAOfE,EAAMH,IAAOI,GAAV,IAEIjF,EAAMS,kBAQbyE,EAAaL,IAAOC,IAAV,IAKH9E,EAAMS,kBAGb0E,EAAYN,IAAOO,GAAV,IAEFpF,EAAMU,kBAQN2E,EAAKC,YAASN,GAGdO,GAFWD,YAASH,GACRG,YAASJ,GACLI,YAASV,IACRU,YAASP,I,SClD3BJ,K,gBAAAA,E,kBAAAA,E,mBAAAA,M,KCAL,ICJKa,EDICC,EAAchB,gBAAkD,CAAEnB,YAAa,OAE/EoC,EAAkC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAEvBlB,WAA4B,MAFL,mBAEtDnB,EAFsD,KAEzCsC,EAFyC,KAGrDtD,EAAS+B,IAAT/B,KAQR,OANAmC,aAAgB,WACZ,IAAMoB,EAAcvD,EAAKK,oBAAmB,SAAAmD,GAAI,OAAIF,EAAeE,MACnE,OAAO,kBAAMD,OAEd,IAGC,gBAACJ,EAAYM,SAAb,CAAsBxB,MAAO,CAAEjB,gBAC1BqC,IAKAK,EAAe,kBAAMvB,aAAiBgB,I,kBCxBvCD,K,UAAAA,E,cAAAA,E,iBAAAA,M,KCIL,ICJKS,EDICC,EAAsB,SAACC,EAAwBC,GACxD,OAAQA,EAAOC,MACX,KAAKb,EAAoBc,IACrB,OAAIF,EAAOG,QACD,CACFH,EAAOG,SADX,mBAEOJ,IAGN,YAAWA,GAEpB,KAAKX,EAAoBgB,MACrB,MAAO,GAEX,KAAKhB,EAAoBiB,OACrB,OAAO,YACAN,EAAMO,QAAO,SAAAC,GAAI,aAAIA,EAAKC,MAAL,UAAYR,EAAOG,eAAnB,aAAY,EAAgBK,QAG5D,QACI,MAAM,IAAIC,MAAJ,iCAAoCT,EAAOC,SEpBvDS,EAAgC,GAEhCC,EAA2BtC,gBAA0C,CAAEuC,cAAeF,EAAcG,qBAAsB,eAEnHC,EAA0C,SAAC,GAAkB,IAAhBvB,EAAe,EAAfA,SAAe,EACvBlB,aAAiByB,EAAqBY,GADf,mBAC9DE,EAD8D,KAC/CC,EAD+C,KAGrE,OACI,gBAACF,EAAyBhB,SAA1B,CAAmCxB,MAAO,CAAEyC,gBAAeC,yBACtDtB,IAKAwB,EAAuB,kBAAM1C,aAAiBsC,K,SDlB/Cd,K,YAAAA,E,eAAAA,M,KEIL,IAAMmB,EAAsB,SAACjB,EAAsBC,GACtD,OAAQA,EAAOC,MACX,KAAKJ,EAAoBoB,MACrB,MAAO,CACHC,WAAW,EACXC,KAAMnB,EAAOG,QAAQgB,MAAQ,cAGrC,KAAKtB,EAAoBuB,KACrB,MAAO,CACHF,WAAW,GAGnB,QACI,MAAM,IAAIT,MAAJ,iCAAoCT,EAAOC,SCdvDS,EAA8B,CAChCS,UAAME,EACNH,WAAW,GAGTI,EAAsBjD,gBAA0C,CAAEkD,aAAcb,EAAcc,kBAAmB,eAE1GC,EAA0C,SAAC,GAAkB,IAAhBlC,EAAe,EAAfA,SAAe,EAC3BlB,aAAiB2C,EAAqBN,GADX,mBAC9Da,EAD8D,KAChDC,EADgD,KAGrE,OACI,gBAACF,EAAoB3B,SAArB,CAA8BxB,MAAO,CAAEoD,eAAcC,sBAChDjC,IAKAmC,EAAuB,kBAAMrD,aAAiBiD,ICwC5CK,GAnDoB,WAAO,IAE9B/E,EAAWqB,IAAXrB,OACAM,EAAgB0C,IAAhB1C,YACA2D,EAAyBE,IAAzBF,qBAJ6B,EAqBLxC,WAAA,OAAuBnB,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAaE,aArB/B,mBAqB9BL,EArB8B,KAqBpB6E,EArBoB,KAuBrC,cAAI1E,QAAJ,IAAIA,OAAJ,EAAIA,EAAaE,aAET,gBAAC+B,EAAD,KACI,gBAACF,EAAD,+BAAiB/B,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAaE,YAA9B,MACA,gBAAC,GAAD,CACI6C,KAAM,OACN9B,MAAOpB,EACP8E,YAAa,kBACbC,SAAU,SAACC,GAAD,OAAYH,EAAYG,EAAEC,OAAO7D,UAE/C,gBAAC,GAAD,CACI8D,QAAS,UACTC,QAAS,kBAAMhF,EAAYC,cAAc,CAAEC,YAAaL,MAEvD,mBAEL,gBAAC,GAAD,CACImF,QAlCA,WACZtF,IACKuF,MAAK,WACFtB,EAAqB,CACjBZ,KAAMb,EAAoBc,IAC1BC,QAAS,CACLK,GAAI4B,iBACJC,UAAWC,KAAKC,MAChBtC,KAAM1B,EAAiBiE,QACvBC,QAAS,gDA0BbR,QAAS,WAER,WAKL,kC,kBCRDS,GAhDM,WAAO,IACPC,EAAmBC,YAAU,CAC1CC,QAAS,EACTC,KAAM,CAAED,QAAS,GACjBE,MAAO,IAHHF,QAKWG,EAAsBJ,YAAU,CAC/CK,UAAW,6BACXH,KAAM,CAAEG,UAAW,gCACnBF,MAAO,KAHHE,UAKWC,EAAwBN,YAAU,CACjDK,UAAW,6BACXH,KAAM,CAAEG,UAAW,gCACnBF,MAAO,MAHHE,UAKWE,EAAqBP,YAAU,CAC9CK,UAAW,6BACXH,KAAM,CAAEG,UAAW,gCACnBF,MAAO,MAHHE,UAKWG,EAAyBR,YAAU,CAClDK,UAAW,6BACXH,KAAM,CAAEG,UAAW,gCACnBF,MAAO,MAHHE,UAKWI,EAAyBT,YAAU,CAClDK,UAAW,6BACXH,KAAM,CAAEG,UAAW,gCACnBF,MAAO,MAHHE,UAWR,MAAO,CACHN,iBACAQ,mBACAH,oBACAM,mBAVsCV,YAAU,CAChDK,UAAW,WACXH,KAAM,CAAEG,UAAW,YACnBF,MAAO,MAHHE,UAWJC,sBACAE,uBACAC,yB,0oEC1CR,IAAME,GAAoB9E,IAAOC,IAAV,MAYjB8E,GAAiB/E,IAAOC,IAAV,KAGP9E,EAAMC,GAAKD,EAAMK,GAAK,QAAU,QAC/BL,EAAMC,GAAKD,EAAMK,GAAK,QAAU,QAItBL,EAAMc,cAWxBkE,GAAMH,IAAOI,GAAV,KAEIjF,EAAMS,kBAUbsE,GAAkBF,IAAOC,IAAV,MAOfI,GAAaL,IAAOC,IAAV,KAKH9E,EAAMS,kBAOboJ,GAAqBhF,IAAOC,IAAV,MAQlBgF,GAAKjF,IAAOkF,EAAV,KAIK/J,EAAMS,kBAMbuJ,GAAwBnF,IAAOC,IAAV,MAOdmF,GAAI3E,YAASwE,IACbzE,GAAKC,YAASN,IACdkF,GAAY5E,YAASJ,IACrBiF,GAAgB7E,YAASsE,IACzBQ,GAAiB9E,YAASP,IAC1BsF,GAAmB/E,YAASqE,IAC5BW,GAAoBhF,YAASuE,IAC7BU,GAAuBjF,YAAS0E,I,66CC9F7C,IAAMQ,GAAkB3F,IAAOC,IAAV,MAYfC,GAAkBF,IAAOC,IAAV,MAOfE,GAAMH,IAAOI,GAAV,KAEIjF,EAAMS,kBAQbyE,GAAaL,IAAOC,IAAV,KAKH9E,EAAMS,kBAGb0E,GAAYN,IAAOO,GAAV,KAEFpF,EAAMU,kBAQb+J,GAAkB5F,IAAOkF,EAAV,KAIR/J,EAAMS,kBAON4E,GAAKC,YAASN,IACd0F,GAAWpF,YAASH,IACpB+E,GAAY5E,YAASJ,IACrBkF,GAAiB9E,YAASP,IAC1B4F,GAAiBrF,YAASkF,I,IACTlF,YAASmF,I,OCpDjCG,GAAmBC,OAAaC,MAAM,CACxCjI,MAAOgI,OACFE,SAAS,sBACTlI,MAAM,uBACXC,SAAU+H,OACLE,SAAS,yBACTC,IAAI,EAAG,6CAmKDC,GAzJsB,WAAO,IAAD,EAEH5G,IAA5BzB,EAF+B,EAE/BA,MAAOc,EAFwB,EAExBA,iBACPkE,EAAsBE,IAAtBF,kBACAX,EAAyBE,IAAzBF,qBAJ+B,EAcnC6B,KAPAC,EAPmC,EAOnCA,eACAQ,EARmC,EAQnCA,iBACAH,EATmC,EASnCA,kBACAM,EAVmC,EAUnCA,mBACAJ,EAXmC,EAWnCA,oBACAG,EAZmC,EAYnCA,qBACAD,EAbmC,EAanCA,qBAGE0B,EAAiBC,aAAuB,CAC1CC,cAAe,CACXvI,MAAO,GACPC,SAAU,IAEduI,SAAU,YAA0B,IAAvBxI,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAChB8E,EAAkB,CAAEvB,KAAMJ,EAAoBoB,MAAOd,QAAS,CAAEe,WAAW,EAAMC,KAAM,mBACvF3E,EAAMC,EAAOC,GACRyF,MAAK,WACFX,EAAkB,CAAEvB,KAAMJ,EAAoBuB,KAAMjB,QAAS,CAAEe,WAAW,KAC1E4D,EAAeI,YACfrE,EAAqB,CACjBZ,KAAMb,EAAoBc,IAC1BC,QAAS,CACLK,GAAI4B,iBACJC,UAAWC,KAAKC,MAChBtC,KAAM1B,EAAiBiE,QACvBC,QAAS,8CAIpB0C,OAAM,YAAkB,IAAf1C,EAAc,EAAdA,QACNjB,EAAkB,CAAEvB,KAAMJ,EAAoBuB,KAAMjB,QAAS,CAAEe,WAAW,KAC1EL,EAAqB,CACjBZ,KAAMb,EAAoBc,IAC1BC,QAAS,CACLsC,UACAjC,GAAI4B,iBACJC,UAAWC,KAAKC,MAChBtC,KAAM1B,EAAiB6G,cAK3CZ,sBAGJnG,aAAgB,WACZ,IAAKyG,EAAeO,eAAiBP,EAAeQ,QAAS,CAAC,IAAD,WAC9CC,GACDT,EAAeU,OAAOD,IACxBE,YAAW,WACP5E,EAAqB,CACjBZ,KAAMb,EAAoBc,IAC1BC,QAAS,CACLK,GAAI4B,iBACJC,UAAWC,KAAKC,MAChBtC,KAAM1B,EAAiB6G,OACvB3C,QAASqC,EAAeU,OAAOD,UATnD,IAAK,IAAMA,KAAOT,EAAeU,OAAS,EAA/BD,MAiBhB,CAACT,EAAeO,eAEnB,IAAMK,EAAwB,SAACnI,GAC3BiE,EAAkB,CAAEvB,KAAMJ,EAAoBoB,MAAOd,QAAS,CAAEe,WAAW,EAAMC,KAAK,mBAAD,OAAqB5D,EAArB,UACrFD,EAAiBC,GACZ4E,MAAK,WACFX,EAAkB,CAAEvB,KAAMJ,EAAoBuB,KAAMjB,QAAS,CAAEe,WAAW,KAC1EL,EAAqB,CACjBZ,KAAMb,EAAoBc,IAC1BC,QAAS,CACLK,GAAI4B,iBACJC,UAAWC,KAAKC,MAChBtC,KAAM1B,EAAiBiE,QACvBC,QAAQ,6CAAD,OAA+ClF,EAA/C,WAIlB4H,OAAM,YAAkB,IAAf1C,EAAc,EAAdA,QACNjB,EAAkB,CAAEvB,KAAMJ,EAAoBuB,KAAMjB,QAAS,CAAEe,WAAW,KAC1EL,EAAqB,CACjBZ,KAAMb,EAAoBc,IAC1BC,QAAS,CACLsC,UACAjC,GAAI4B,iBACJC,UAAWC,KAAKC,MAChBtC,KAAM1B,EAAiB6G,cAM3C,OACI,gBAACb,GAAD,KACI,gBAAC,GAAD,KACI,gBAAC,GAAD,CAAIoB,MAAO,CAAE9C,QAASF,IAAmB,gBACzC,gBAAC,GAAD,CAAWgD,MAAO,CAAE1C,UAAWK,IAC3B,gBAAC,KAAD,CAAiBsC,KAAMC,KAAaF,MAAO,CAAEG,MAAO,OAAQC,OAAQ,YAG5E,gBAAC,GAAD,CAAUJ,MAAO,CAAE1C,UAAWD,IAAsB,YACpD,gBAAC,GAAD,CACIgD,KAAM,QACNnE,YAAa,QACb1D,MAAO2G,EAAemB,OAAOxJ,MAC7BqF,SAAUgD,EAAeoB,aACzBP,MAAO,CAAE1C,UAAWC,GACpBoC,WAAYR,EAAeqB,QAAQ1J,OAAUqI,EAAeU,OAAO/I,OACnE2J,aAActB,EAAeqB,QAAQ1J,QAAWqI,EAAeU,OAAO/I,SAE1E,gBAAC,GAAD,CACIuJ,KAAM,WACNnE,YAAa,WACb1D,MAAO2G,EAAemB,OAAOvJ,SAC7BoF,SAAUgD,EAAeoB,aACzBP,MAAO,CAAE1C,UAAWE,GACpBmC,WAAYR,EAAeqB,QAAQzJ,UAAaoI,EAAeU,OAAO9I,UACtE0J,aAActB,EAAeqB,QAAQzJ,WAAcoI,EAAeU,OAAO9I,YAE7E,gBAAC,GAAD,CACIuF,QAAS,UACTC,QAAS4C,EAAeuB,aACxBV,MAAO,CAAE1C,UAAWG,IAEnB,SAEL,gBAACS,GAAD,CAAG8B,MAAO,CAAE1C,UAAWI,IAAyB,+BAChD,gBAACc,GAAD,CAAsBwB,MAAO,CAAE1C,UAAWI,IACtC,gBAAC,GAAD,CAAmBnB,QAAS,kBAAMwD,EAAsB,cACpD,gBAAC,KAAD,CAAiBE,KAAMU,KAAaC,KAAM,QAE9C,gBAAC,GAAD,CAAmBrE,QAAS,kBAAMwD,EAAsB,YACpD,gBAAC,KAAD,CAAiBE,KAAMY,KAAUD,KAAM,QAE3C,gBAAC,GAAD,CAAmBrE,QAAS,kBAAMwD,EAAsB,YACpD,gBAAC,KAAD,CAAiBE,KAAMa,KAAUF,KAAM,WC9I5C7D,GAjCM,WAAO,IACLgE,EAA2B9D,YAAU,CACpDK,UAAW,6BACXH,KAAM,CAAEG,UAAW,+BACnBF,MAAO,MAHHE,UAMW0D,EAA2B/D,YAAU,CACpDK,UAAW,6BACXH,KAAM,CAAEG,UAAW,+BACnBF,MAAO,MAHHE,UAMW2D,EAAkChE,YAAU,CAC3DK,UAAW,6BACXH,KAAM,CAAEG,UAAW,+BACnBF,MAAO,MAHHE,UAYR,MAAO,CACH4D,eAPkCjE,YAAU,CAC5CK,UAAW,WACXH,KAAM,CAAEG,UAAW,YACnBF,MAAO,MAHHE,UAQJyD,yBACAC,yBACAC,kCCwEOE,GAvF0B,WAErC,IAAMC,EAAUC,cACR1J,EAAqBW,IAArBX,iBACAkE,EAAsBE,IAAtBF,kBACAX,EAAyBE,IAAzBF,qBAEA5G,EAAWL,EAAXK,GAAIJ,EAAOD,EAAPC,GAP+B,EAcvC6I,KAJAmE,EAVuC,EAUvCA,eACAH,EAXuC,EAWvCA,uBACAC,EAZuC,EAYvCA,uBACAC,EAbuC,EAavCA,8BAbuC,EAgBLhE,aAAU,iBAAO,CAAEK,UAAU,iBAAD,OAAmBpJ,EAAKI,EAAK,SAAW,SAAxC,OAAuD4I,QAAS,MAhBvF,0BAgBlCI,EAhBkC,EAgBlCA,UAAWJ,EAhBuB,EAgBvBA,QAAWoE,EAhBY,KAiB3CA,EAAI,CAAEhE,UAAU,iBAAD,OAAmBpJ,EAAKI,EAAK,QAAU,QAAvC,SAEf,IAAMiN,EAAS,SAACC,GACZF,EAAI,CAAEhE,UAAU,iBAAD,OAAmBpJ,EAAKI,EAAK,SAAW,SAAxC,OAAuD4I,QAAS,IAC/E4C,YAAW,kBAAMsB,EAAQK,KAAKD,KAAO,MAGnCzB,EAAwB,SAACnI,GAC3BiE,EAAkB,CAAEvB,KAAMJ,EAAoBoB,MAAOd,QAAS,CAAEe,WAAW,EAAMC,KAAK,mBAAD,OAAqB5D,EAArB,UACrFD,EAAiBC,GACZ4E,MAAK,WACFX,EAAkB,CAAEvB,KAAMJ,EAAoBuB,KAAMjB,QAAS,CAAEe,WAAW,KAC1EL,EAAqB,CACjBZ,KAAMb,EAAoBc,IAC1BC,QAAS,CACLK,GAAI4B,iBACJC,UAAWC,KAAKC,MAChBtC,KAAM1B,EAAiBiE,QACvBC,QAAQ,6CAAD,OAA+ClF,EAA/C,WAIlB4H,OAAM,YAAkB,IAAf1C,EAAc,EAAdA,QACNjB,EAAkB,CAAEvB,KAAMJ,EAAoBuB,KAAMjB,QAAS,CAAEe,WAAW,KAC1EL,EAAqB,CACjBZ,KAAMb,EAAoBc,IAC1BC,QAAS,CACLsC,UACAjC,GAAI4B,iBACJC,UAAWC,KAAKC,MAChBtC,KAAM1B,EAAiB6G,cAM3C,OACI,gBAACnB,GAAD,KACI,gBAACF,GAAD,CAAe4B,MAAO,CAAE1C,cACpB,gBAAC,GAAD,KACI,gBAAC,GAAD,KAAK,aACL,gBAAC,GAAD,CAAW0C,MAAO,CAAE1C,UAAW4D,IAC3B,gBAAC,KAAD,CAAiBjB,KAAMyB,KAAU1B,MAAO,CAAEG,MAAO,OAAQC,OAAQ,aAI7E,gBAAC7B,GAAD,CAAmByB,MAAO,CAAE9C,YACxB,gBAAC,GAAD,CAAQZ,QAAS,UAAW0D,MAAO,CAAE1C,UAAWyD,GAA0BxE,QAAS,kBAAMgF,EAAO,YAC3F,SAEL,gBAAC,GAAD,CAAQjF,QAAS,UAAW0D,MAAO,CAAE1C,UAAW0D,GAA0BzE,QAAS,kBAAMgF,EAAO,eAC3F,kBAEL,gBAACrD,GAAD,CAAG8B,MAAO,CAAE1C,UAAW2D,IAAkC,+BACzD,gBAACzC,GAAD,CAAsBwB,MAAO,CAAE1C,UAAW2D,IACtC,gBAAC,GAAD,CAAmB1E,QAAS,kBAAMwD,EAAsB,cACpD,gBAAC,KAAD,CAAiBE,KAAMU,KAAaC,KAAM,QAE9C,gBAAC,GAAD,CAAmBrE,QAAS,kBAAMwD,EAAsB,YACpD,gBAAC,KAAD,CAAiBE,KAAMY,KAAUD,KAAM,QAE3C,gBAAC,GAAD,CAAmBrE,QAAS,kBAAMwD,EAAsB,YACpD,gBAAC,KAAD,CAAiBE,KAAMa,KAAUF,KAAM,YCvChD7D,GAtDM,WAAO,IACPC,EAAmBC,YAAU,CAC1CC,QAAS,EACTC,KAAM,CAAED,QAAS,GACjBE,MAAO,IAHHF,QAKWG,EAAsBJ,YAAU,CAC/CK,UAAW,6BACXH,KAAM,CAAEG,UAAW,gCACnBF,MAAO,KAHHE,UAKWqE,EAA2B1E,YAAU,CACpDK,UAAW,6BACXH,KAAM,CAAEG,UAAW,gCACnBF,MAAO,MAHHE,UAKWC,EAAwBN,YAAU,CACjDK,UAAW,6BACXH,KAAM,CAAEG,UAAW,gCACnBF,MAAO,MAHHE,UAKWE,EAAqBP,YAAU,CAC9CK,UAAW,6BACXH,KAAM,CAAEG,UAAW,gCACnBF,MAAO,MAHHE,UAKWsE,EAA4B3E,YAAU,CACrDK,UAAW,6BACXH,KAAM,CAAEG,UAAW,gCACnBF,MAAO,MAHHE,UAKWuE,EAA4B5E,YAAU,CACrDK,UAAW,6BACXH,KAAM,CAAEG,UAAW,gCACnBF,MAAO,MAHHE,UAWR,MAAO,CACHN,iBACAQ,mBACAH,oBACAM,mBAVsCV,YAAU,CAChDK,UAAW,WACXH,KAAM,CAAEG,UAAW,YACnBF,MAAO,MAHHE,UAWJC,sBACAoE,yBACAC,0BACAC,4B,qTClDD,IAAMC,GAAoBhJ,IAAOC,IAAV,MCYxB8F,GAAmBC,OAAaC,MAAM,CACxC3H,SAAU0H,OACLE,SAAS,yBACTC,IAAI,EAAG,2CACP8C,IAAI,GAHC,6CAILC,QAAQ,uCAAwC,0BACrDlL,MAAOgI,OACFE,SAAS,sBACTlI,MAAM,uBACXC,SAAU+H,OACLE,SAAS,yBACTC,IAAI,EAAG,2CACZgD,gBAAiBnD,OACZE,SAAS,iCACTkD,MAAM,CAACpD,KAAQ,aAAc,2BAoJvBqD,GAvI4B,WAAO,IAEtChL,EAAamB,IAAbnB,SACA0E,EAAsBE,IAAtBF,kBACAX,EAAyBE,IAAzBF,qBAJqC,EAezC6B,KARAC,EAPyC,EAOzCA,eACAQ,EARyC,EAQzCA,iBACAH,EATyC,EASzCA,kBACAM,EAVyC,EAUzCA,mBACAJ,EAXyC,EAWzCA,oBACAoE,EAZyC,EAYzCA,uBACAC,EAbyC,EAazCA,wBACAC,EAdyC,EAczCA,wBAGE1C,EAAiBC,aAAuB,CAC1CC,cAAe,CACXjI,SAAU,GACVN,MAAO,GACPC,SAAU,GACVkL,gBAAiB,IAErB3C,SAAU,YAAoC,IAAjClI,EAAgC,EAAhCA,SAAUN,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC1B8E,EAAkB,CAAEvB,KAAMJ,EAAoBoB,MAAOd,QAAS,CAAEe,WAAW,EAAMC,KAAM,oBACvFrE,EAASC,EAAUN,EAAOC,GACrByF,MAAK,WACFX,EAAkB,CAAEvB,KAAMJ,EAAoBuB,KAAMjB,QAAS,CAAEe,WAAW,KAC1E4D,EAAeI,YACfrE,EAAqB,CACjBZ,KAAMb,EAAoBc,IAC1BC,QAAS,CACLK,GAAI4B,iBACJC,UAAWC,KAAKC,MAChBtC,KAAM1B,EAAiBiE,QACvBC,QAAS,+CAIpB0C,OAAM,YAAkB,IAAf1C,EAAc,EAAdA,QACNjB,EAAkB,CAAEvB,KAAMJ,EAAoBuB,KAAMjB,QAAS,CAAEe,WAAW,KAC1EL,EAAqB,CACjBZ,KAAMb,EAAoBc,IAC1BC,QAAS,CACLsC,UACAjC,GAAI4B,iBACJC,UAAWC,KAAKC,MAChBtC,KAAM1B,EAAiB6G,cAK3CZ,sBA0BJ,OAtBAnG,aAAgB,WACZ,IAAKyG,EAAeO,eAAiBP,EAAeQ,QAAS,CAAC,IAAD,WAC9CC,GACDT,EAAeU,OAAOD,IACxBE,YAAW,WACP5E,EAAqB,CACjBZ,KAAMb,EAAoBc,IAC1BC,QAAS,CACLK,GAAI4B,iBACJC,UAAWC,KAAKC,MAChBtC,KAAM1B,EAAiB6G,OACvB3C,QAASqC,EAAeU,OAAOD,UATnD,IAAK,IAAMA,KAAOT,EAAeU,OAAS,EAA/BD,MAiBhB,CAACT,EAAeO,eAIf,gBAACoC,GAAD,KACI,gBAAC,GAAD,KACI,gBAAC,GAAD,CAAI9B,MAAO,CAAE9C,QAASF,IAAmB,cACzC,gBAAC,GAAD,CAAWgD,MAAO,CAAE1C,UAAWK,IAC3B,gBAAC,KAAD,CAAiBsC,KAAMmC,KAAYpC,MAAO,CAAEG,MAAO,OAAQC,OAAQ,YAG3E,gBAAC,GAAD,CAAUJ,MAAO,CAAE1C,UAAWD,IAAsB,gBACpD,gBAAC,GAAD,CACIgD,KAAM,WACNnE,YAAa,WACb1D,MAAO2G,EAAemB,OAAOlJ,SAC7B+E,SAAUgD,EAAeoB,aACzBP,MAAO,CAAE1C,UAAWqE,GACpBhC,WAAYR,EAAeqB,QAAQpJ,UAAa+H,EAAeU,OAAOzI,UACtEqJ,aAActB,EAAeqB,QAAQpJ,WAAc+H,EAAeU,OAAOzI,YAE7E,gBAAC,GAAD,CACIiJ,KAAM,QACNnE,YAAa,QACb1D,MAAO2G,EAAemB,OAAOxJ,MAC7BqF,SAAUgD,EAAeoB,aACzBP,MAAO,CAAE1C,UAAWC,GACpBoC,WAAYR,EAAeqB,QAAQ1J,OAAUqI,EAAeU,OAAO/I,OACnE2J,aAActB,EAAeqB,QAAQ1J,QAAWqI,EAAeU,OAAO/I,SAE1E,gBAAC,GAAD,CACIuJ,KAAM,WACNnE,YAAa,WACb1D,MAAO2G,EAAemB,OAAOvJ,SAC7BoF,SAAUgD,EAAeoB,aACzBP,MAAO,CAAE1C,UAAWE,GACpBmC,WAAYR,EAAeqB,QAAQzJ,UAAaoI,EAAeU,OAAO9I,UACtE0J,aAActB,EAAeqB,QAAQzJ,WAAcoI,EAAeU,OAAO9I,YAE7E,gBAAC,GAAD,CACIsJ,KAAM,kBACNnE,YAAa,mBACbC,SAAUgD,EAAeoB,aACzB/H,MAAO2G,EAAemB,OAAO2B,gBAC7BjC,MAAO,CAAE1C,UAAWsE,GACpBjC,WAAYR,EAAeqB,QAAQyB,iBAAoB9C,EAAeU,OAAOoC,iBAC7ExB,aAActB,EAAeqB,QAAQyB,kBAAqB9C,EAAeU,OAAOoC,mBAEpF,gBAAC,GAAD,CACI3F,QAAS,UACTC,QAAS4C,EAAeuB,aACxBV,MAAO,CAAE1C,UAAWuE,IAEnB,c,i8CCvKV,IAAMQ,GAAevJ,IAAOC,IAAV,KAID9E,EAAMgB,MAIjBqN,GAAmBxJ,IAAOC,IAAV,MAMhBwJ,GAAezJ,IAAOC,IAAV,KAOD9E,EAAMmB,UAYjBoN,GAAY1J,IAAOC,IAAV,KAOE9E,EAAMmB,UAYjBqN,GAAc3J,IAAOC,IAAV,KAIA9E,EAAMgB,MCJfyN,GA7CkB,WAAO,IAE5BjM,EAAkB6B,IAAlB7B,cAF2B,EAGmBiC,YAAwB,GAH3C,mBAG5BiK,EAH4B,KAGPC,EAHO,KAWnC,OANAlK,aAAgB,WACZjC,IACK+F,MAAK,kBAAMoG,GAAuB,QAExC,IAGC,gBAAC,EAAD,KACI,gBAAC,EAAD,KACI,gBAAC,EAAD,KACI,gBAACP,GAAD,KACI,gBAAC,GAAD,CAAcQ,WAAYF,IAC1B,gBAAC,GAAD,MACA,gBAACH,GAAD,KACI,gBAACC,GAAD,OAEJ,gBAACF,GAAD,KACI,gBAACE,GAAD,OAEJ,gBAACH,GAAD,KACKK,EACK,gBAAC,IAAD,CAAYG,SAAS,KACnB,gBAAC,IAAD,KACI,gBAAC,GAAD,CAAiBC,OAAO,EAAMvB,KAAM,QAASwB,OAAQ,gBAAC,GAAD,QACrD,gBAAC,GAAD,CAAmBD,OAAO,EAAMvB,KAAM,IAAKwB,OAAQ,gBAAC,GAAD,QACnD,gBAAC,GAAD,CAAmBD,OAAO,EAAMvB,KAAM,SAAUwB,OAAQ,gBAAC,GAAD,QACxD,gBAAC,GAAD,CAAmBD,OAAO,EAAMvB,KAAM,YAAawB,OAAQ,gBAAC,GAAD,UAGjE,uC,mkCCnClC,IAAMC,GAAwBnK,IAAOC,IAAV,MAOT,gBAAGuB,EAAH,EAAGA,KAAH,OAAcA,IAAS1B,EAAiB6G,OAChDxL,EAAM0B,sBACN2E,IAAS1B,EAAiBiE,QACtB5I,EAAMyB,uBACNzB,EAAM2B,0BAGA,gBAAG0E,EAAH,EAAGA,KAAH,OAAcA,IAAS1B,EAAiB6G,OAClDxL,EAAMuB,kBACN8E,IAAS1B,EAAiBiE,QACtB5I,EAAMsB,mBACNtB,EAAMwB,sBACP,gBAAG6E,EAAH,EAAGA,KAAH,OAAcA,IAAS1B,EAAiB6G,OAC3CxL,EAAMY,gBACNyF,IAAS1B,EAAiBiE,QACtB5I,EAAMW,iBACNX,EAAMa,oBAOdoO,GAAmBpK,IAAOkF,EAAV,MACL,qBAAGmF,UAA4B,GAAK,SAAW,UAG1DC,GAAgBtK,IAAOC,IAAV,MAOC,gBAAGuB,EAAH,EAAGA,KAAH,OAAcA,IAAS1B,EAAiB6G,OAClDxL,EAAMY,gBACNyF,IAAS1B,EAAiBiE,QACtB5I,EAAMW,iBACNX,EAAMa,oBAGP,gBAAGwF,EAAH,EAAGA,KAAH,OAAcA,IAAS1B,EAAiB6G,OAC3CxL,EAAMY,gBACNyF,IAAS1B,EAAiBiE,QACtB5I,EAAMW,iBACNX,EAAMa,oBAIduO,GAAsBvK,IAAOwK,OAAV,MAUnBC,GAAiBhK,YAAS6J,IAG1BI,IAFoBjK,YAAS2J,IACN3J,YAAS8J,IACP9J,YAAS0J,KCHzBQ,GA7DoC,WAAO,IAAD,EAELrI,IAAxCH,EAF6C,EAE7CA,cAAeC,EAF8B,EAE9BA,qBAEjBwI,EAAyBC,YAC1B1I,EAAc2I,KAAI,SAACC,EAAGC,GAAJ,OAAeA,EATF,EASC,gBAA0CD,EAA1C,CAA6CE,EAAW,EAARD,IAAe,QAAMnJ,QAAO,SAAAkJ,GAAC,QAAMA,MACpH,SAAAA,GAAC,OAAIA,EAAEhJ,KACP,CACIsC,KAAM,CAAED,QAAS,EAAGI,UAAU,0BAC9B0G,MAAO,CAAE9G,QAAS,GAClB+G,MAAO,gBAAGF,EAAH,EAAGA,EAAH,MAAY,CAAE7G,QAAS,EAAGI,UAAU,mBAAD,OAAqByG,EAArB,UAC1CG,OAAQ,gBAAGH,EAAH,EAAGA,EAAH,MAAY,CAAE7G,QAAS,EAAGI,UAAU,mBAAD,OAAqByG,EAArB,UAC3CI,OAAO,gBAAMA,IAAOC,QAAd,CAAuBC,SAAU,OAIzCC,EAAoB/L,EAAY0C,GAUtC,OARAvC,aAAgB,WAAO,IAAD,EAClB,IAAI,UAAC4L,SAAD,eAA8BC,SAA9B,OAAuCtJ,QAAvC,IAAuCA,OAAvC,EAAuCA,EAAesJ,QAAQ,CAC9D,IAAMC,EAAkBvJ,EAAcwJ,MAAK,SAAA7J,GAAI,OAA0E,KAArD,OAAjB0J,QAAiB,IAAjBA,OAAA,EAAAA,EAAmBV,KAAI,SAAAc,GAAQ,OAAIA,EAAS7J,MAAI8J,QAAQ/J,EAAKC,QAChHiF,YAAW,kBAAM5E,EAAqB,CAAEZ,KAAMb,EAAoBiB,OAAQF,QAASgK,MAAoB,SAG5G,CAACvJ,IAGA,gCACKyI,EAAuBE,KAAI,YAAoC,IAAD,EAA1BgB,EAA0B,EAAhCC,KAAoBC,EAAY,EAAZA,MACvC5H,EAAuB4H,EAAvB5H,QAASI,EAAcwH,EAAdxH,UACjB,OACI,gBAACkG,GAAD,CAAwB5D,IAAKgF,EAAa/J,GAAIP,KAAMsK,EAAatK,KAAM0F,MAAO,CAAE1C,YAAWJ,YACvF,gBAACqG,GAAD,CAAgBjJ,KAAMsK,EAAatK,MAC/B,gBAAC,KAAD,CACI2F,KACI2E,EAAatK,OAAS1B,EAAiB6G,OACjCsF,KACAH,EAAatK,OAAS1B,EAAiBoM,QACnCC,KACAC,QAItB,gBAAChC,GAAD,CAAkBC,UAAS,UAAEyB,EAAa9H,eAAf,aAAE,EAAsByH,QAASK,EAAa9H,SACzE,gBAACuG,GAAD,KACI,gBAAC,KAAD,CACIzC,KAAM,KACNX,KAAMkF,KACN5I,QAAS,kBAAMrB,EAAqB,CAChCZ,KAAMb,EAAoBiB,OAC1BF,QAASoK,c,otDC5D7C,IAAMQ,GAAStM,IAAOC,IAAV,MAaNsM,GAAkBvM,IAAOC,IAAV,MAQfuM,GAAOxM,IAAOkF,EAAV,MASJuH,GAAkBC,YAAH,MASfC,GAAS3M,IAAOC,IAAV,KASKwM,IAGXG,GAAuBF,YAAH,MASpBG,GAAc7M,IAAOC,IAAV,KAQC9E,EAAMc,aACP2Q,IAMXE,IAHUrM,YAAS6L,IACT7L,YAASkM,IACJlM,YAASoM,IACLpM,YAAS8L,KC/CnBQ,GAvBoC,SAAC,GAAmB,IAAjBhD,EAAgB,EAAhBA,UAE1C3F,EAAYD,YAAU,CAC1BC,QAAS,EACTC,KAAM,CAAED,QAAS,KAFbA,QAKAtB,EAAiBG,IAAjBH,aAER,OAAIA,EAAaL,WAAasH,EAEtB,gBAACuC,GAAD,KACI,gBAACQ,GAAD,CAAkBE,MAAO,CAAE5I,YACvB,gBAACuI,GAAD,MACA,gBAACE,GAAD,OAEJ,gBAACL,GAAD,KAAO1J,EAAaJ,MAAQ,eAI5B,M,qfCpBhB,IAAMuK,GAAQjN,IAAOkN,MAAV,MAMU,kBAAuB,aAAvB,EAAG1L,KAAiC,OAAS,SAEpDrG,EAAMO,WACPP,EAAMS,iBAEKT,EAAMe,cAEV,gBAAG2K,EAAH,EAAGA,QAASc,EAAZ,EAAYA,UAAZ,OAA4Bd,EAAU1L,EAAMoB,aAAeoL,EAAYxM,EAAMqB,YAAc,gBAI9FrB,EAAMS,kBAKR6E,eAASwM,I,oZC5BjB,IAAME,GAAyBnN,IAAOC,IAAV,MAKtBmN,GAAmBpN,IAAOqN,MAAV,KAOhBlS,EAAMS,kB,SCiBJ6E,gBAvB6F,SAAC,GAAwB,IAAtByG,EAAqB,EAArBA,MAAUoG,EAAW,4BAEpG1N,YAAwB,GAF4E,mBAEzH2N,EAFyH,KAEjHC,EAFiH,KAIhI,OACI,gBAACL,GAAD,CAAwBjG,MAAK,gBAAOA,IAChC,gBAACkG,GAAD,CAAkBK,QAASH,EAAK/F,KAAM9D,QAAS,kBAAM+J,GAAWD,KAC1DA,EAKI,gBAAC,KAAD,CACEpG,KAAMuG,KACNxG,MAAO,CAAEG,MAAO,SAAUC,OAAQ,YANpC,gBAAC,KAAD,CACEH,KAAMwG,KACNzG,MAAO,CAAEG,MAAO,SAAUC,OAAQ,aAQ9C,gBAAC,GAAD,eAAOvF,GAAIuL,EAAK/F,KAAM/F,KAAM+L,EAAS,OAAS,YAAgBD,QCJ3DM,GAfuD,SAAC,GAAyB,IAAvB1D,EAAsB,EAAtBA,OAAWoD,EAAW,2BACnF7O,EAAgB0C,IAAhB1C,YAER,OACI,gBAAC,IAAD,iBACQ6O,EADR,CAEIO,OACI,kBAAQpP,EACFyL,EACA,gBAAC,IAAD,CAAU4D,GAAI,WCMrBC,GAf2D,SAAC,GAAyB,IAAvB7D,EAAsB,EAAtBA,OAAWoD,EAAW,2BACvF7O,EAAgB0C,IAAhB1C,YAER,OACI,gBAAC,IAAD,iBACQ6O,EADR,CAEIO,OACI,kBAAQpP,EACF,gBAAC,IAAD,CAAUqP,GAAI,UACd5D,O,iZCTtB,IAAM8D,GAAShO,IAAOwK,OAAV,KAQErP,EAAMO,YACI,kBAA6B,YAA7B,EAAG8H,QAAsCrI,EAAMe,aAAef,EAAMc,eAC/Ed,EAAMS,kBAID,kBAA6B,YAA7B,EAAG4H,QAAsC,OAAS,kCAGrD/C,eAASuN,I,4VCrBxB,IAAMC,GAAoBjO,IAAOwK,OAAV,KAQCrP,EAAMS,iBAGjBT,EAAMS,kBAIJ6E,eAASwN,ICPJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASV,OACL,kBAAC,GAAD,MACAxS,SAASmT,eAAe,SDmItB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjL,MAAK,SAAAkL,GACjCA,EAAaC,iB","file":"static/js/main.1f7d9786.chunk.js","sourcesContent":["const theme = {\r\n    vw: document.documentElement.clientWidth,\r\n    vh: document.documentElement.clientHeight,\r\n\r\n    baseHeight: '3rem',   \r\n\r\n    fontSize: '16px',\r\n    defaultFontColor: '#fff',\r\n    primaryFontColor: '#0e9aa7',\r\n    successFontColor: '#155724',\r\n    dangerFontColor: '#721c24',\r\n    warningFontColor: '#856404',\r\n\r\n    primaryColor: '#3da4ab',\r\n    defaultColor: 'rgba(255,255,255,0.15)',\r\n    dark: 'rgba(48,48,48,1)',\r\n    dark06: 'rgba(48,48,48,0.6)',\r\n    darker: 'rgba(30,30,30,1)',\r\n    darker06: 'rgba(30,30,30,0.6)',\r\n    successColor: '#28a745',\r\n    dangerColor: '#dc3545',\r\n\r\n    // Notification theme\r\n    successBorderColor: '#c3e6cb',\r\n    dangerBorderColor: '#f5c6cb',\r\n    warningBorderColor: '#ffeeba',\r\n    successBackgroundColor: '#d4edda',\r\n    dangerBackgroundColor: '#f8d7da',\r\n    warningBackgroundColor: '#fff3cd',\r\n};\r\n\r\nexport default theme;","const firebaseConfig = {\r\n    apiKey: \"AIzaSyBs1gAvHKjBf9-qaZCkdstMTD0kRkH2QKU\",\r\n    authDomain: \"homiescup-89859.firebaseapp.com\",\r\n    databaseURL: \"https://homiescup-89859.firebaseio.com\",\r\n    projectId: \"homiescup-89859\",\r\n    storageBucket: \"homiescup-89859.appspot.com\",\r\n    messagingSenderId: \"300391296614\",\r\n    appId: \"1:300391296614:web:a5b1fb5a473994912887a7\",\r\n    measurementId: \"G-SEM8Q31KR9\"\r\n};\r\n\r\nexport default firebaseConfig;","import 'firebase/auth';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firebase-firestore';\r\nimport { firebaseConfig } from '../constants';\r\n\r\nclass Firebase {\r\n    public auth: firebase.auth.Auth;\r\n    public db: firebase.firestore.Firestore;\r\n\r\n    public constructor() {\r\n        firebase.initializeApp(firebaseConfig);\r\n        this.auth = firebase.auth();\r\n        this.db = firebase.firestore();\r\n    }\r\n\r\n    public isInitialized = () => {\r\n        return new Promise(resolve => {\r\n            this.auth.onAuthStateChanged(resolve);\r\n        });\r\n    }\r\n\r\n    public login = (email: string, password: string) => {\r\n        return this.auth.signInWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    public logout = () => {\r\n        return this.auth.signOut();\r\n    }\r\n\r\n    public register = async (username: string, email: string, password: string) => {\r\n        await this.auth.createUserWithEmailAndPassword(email, password);\r\n        return this.auth.currentUser?.updateProfile({\r\n            displayName: username\r\n        });\r\n    }\r\n\r\n    public sendPasswordResetEmail = (email: string) => {\r\n        return this.auth.sendPasswordResetEmail(email);\r\n    }\r\n\r\n    public loginSocialMedia = (platform: ('Facebook' | 'GitHub' | 'Google')) => {\r\n        const provider = platform === 'Facebook'\r\n            ? new firebase.auth.FacebookAuthProvider()\r\n            : platform === 'Google'\r\n                ? new firebase.auth.GoogleAuthProvider()\r\n                : new firebase.auth.GithubAuthProvider();\r\n        return this.auth.signInWithPopup(provider);\r\n    }\r\n};\r\n\r\nconst firebaseInstance = new Firebase();\r\n\r\nconst useFirebase = () => firebaseInstance;\r\n\r\nexport default useFirebase;","import * as React from 'react';\r\n\r\nconst usePrevious = <T extends any>(value: T) => {\r\n    const ref = React.useRef<T>();\r\n    React.useEffect(() => {\r\n        ref.current = value;\r\n    }, [value]);\r\n    return ref.current;\r\n};\r\n\r\nexport default usePrevious;","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\nconst _HomeContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 15vh 10vw 1vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n`;\r\n\r\nconst _TitleContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 15vh;\r\n`;\r\n\r\nconst _H1 = styled.h1`\r\n    font-size: 1.6rem;\r\n    color: ${theme.defaultFontColor};\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    margin-bottom: 1rem;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _TitleIcon = styled.div`\r\n    height: 4rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: ${theme.defaultFontColor};\r\n`;\r\n\r\nconst _SubTitle = styled.h2`\r\n    font-size: 1.6rem;\r\n    color: ${theme.primaryFontColor};\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    margin-bottom: 1rem;\r\n    font-weight: 600;\r\n`;\r\n\r\nexport const H1 = animated(_H1);\r\nexport const SubTitle = animated(_SubTitle);\r\nexport const TitleIcon = animated(_TitleIcon);\r\nexport const HomeContainer = animated(_HomeContainer);\r\nexport const TitleContainer = animated(_TitleContainer);","import * as React from 'react';\r\nimport { IAction } from './action.interface';\r\nimport { NotificationActions } from '../stores/notification/notification.actions';\r\n\r\nexport enum NotificationType {\r\n    Danger = 'Danger',\r\n    Warning = 'Warning',\r\n    Success = 'Success',\r\n}\r\n\r\nexport interface INotification {\r\n    id: string;\r\n    message: string;\r\n    timeStamp: number;\r\n    type: NotificationType;\r\n}\r\n\r\nexport interface INotificationContext {\r\n    notifications: INotification[];\r\n    dispatchNotification: React.Dispatch<IAction<NotificationActions, INotification | undefined>>;\r\n}","import * as React from 'react';\r\nimport { User } from 'firebase';\r\nimport { useFirebase } from '../../utils';\r\n\r\nexport const AuthContext = React.createContext<{ currentUser: User | null }>({ currentUser: null });\r\n\r\nexport const AuthStoreProvider: React.FC<{}> = ({ children }) => {\r\n\r\n    const [currentUser, setCurrentUser] = React.useState<User | null>(null);\r\n    const { auth } = useFirebase();\r\n\r\n    React.useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => setCurrentUser(user));\r\n        return () => unsubscribe();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ currentUser }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useAuthStore = () => React.useContext(AuthContext);","export enum NotificationActions {\r\n    ADD = 'ADD',\r\n    RESET = 'RESET',\r\n    DELETE = 'DELETE',\r\n};","import { IAction } from '../../interfaces/action.interface';\r\nimport { NotificationActions } from './notification.actions';\r\nimport { INotification } from '../../interfaces/notification.interface';\r\n\r\nexport const notificationReducer = (state: INotification[], action: IAction<NotificationActions, INotification | undefined>): INotification[] => {\r\n    switch (action.type) {\r\n        case NotificationActions.ADD:\r\n            if (action.payload) {\r\n                return [\r\n                    action.payload,\r\n                    ...state\r\n                ]\r\n            }\r\n            else return [...state];\r\n\r\n        case NotificationActions.RESET:\r\n            return [];\r\n\r\n        case NotificationActions.DELETE:\r\n            return [\r\n                ...state.filter(noti => noti.id !== action.payload?.id)\r\n            ];\r\n\r\n        default:\r\n            throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n}","export enum LoaderBannerActions {\r\n    STOP = 'STOP',\r\n    START = 'START',\r\n};","import * as React from 'react';\r\nimport { notificationReducer } from './notification.reducer';\r\nimport { INotification, INotificationContext } from '../../interfaces/notification.interface';\r\n\r\nconst initialState: INotification[] = [];\r\n\r\nconst NotificationStoreContext = React.createContext<INotificationContext>({ notifications: initialState, dispatchNotification: () => { } });\r\n\r\nexport const NotificationStoreProvider: React.FC<{}> = ({ children }) => {\r\n    const [notifications, dispatchNotification] = React.useReducer(notificationReducer, initialState);\r\n\r\n    return (\r\n        <NotificationStoreContext.Provider value={{ notifications, dispatchNotification }}>\r\n            {children}\r\n        </NotificationStoreContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useNotificationStore = () => React.useContext(NotificationStoreContext);\r\n\r\nexport * from './notification.actions';","import { IAction } from '../../interfaces/action.interface';\r\nimport { LoaderBannerActions } from './loader-banner.actions';\r\nimport { ILoaderBanner } from '../../interfaces/loader-banner.interface';\r\n\r\nexport const loaderBannerReducer = (state: ILoaderBanner, action: IAction<LoaderBannerActions, ILoaderBanner>): ILoaderBanner => {\r\n    switch (action.type) {\r\n        case LoaderBannerActions.START:\r\n            return {\r\n                isLoading: true,\r\n                text: action.payload.text || 'Loading...'\r\n            };\r\n\r\n        case LoaderBannerActions.STOP:\r\n            return {\r\n                isLoading: false,\r\n            }\r\n\r\n        default:\r\n            throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n}","import * as React from 'react';\r\nimport { loaderBannerReducer } from './loader-banner.reducer';\r\nimport { ILoaderBannerContext, ILoaderBanner } from '../../interfaces/loader-banner.interface';\r\n\r\nconst initialState: ILoaderBanner = {\r\n    text: undefined,\r\n    isLoading: false,\r\n};\r\n\r\nconst LoaderBannerContext = React.createContext<ILoaderBannerContext>({ loaderBanner: initialState, dispatchIsLoading: () => { } });\r\n\r\nexport const LoaderBannerStoreProvider: React.FC<{}> = ({ children }) => {\r\n    const [loaderBanner, dispatchIsLoading] = React.useReducer(loaderBannerReducer, initialState);\r\n\r\n    return (\r\n        <LoaderBannerContext.Provider value={{ loaderBanner, dispatchIsLoading }}>\r\n            {children}\r\n        </LoaderBannerContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useLoaderBannerStore = () => React.useContext(LoaderBannerContext);\r\n\r\nexport * from './loader-banner.actions';","import { uuid } from 'uuidv4';\r\nimport * as React from 'react';\r\nimport { useFirebase } from '../../utils';\r\nimport { HomeContainer, H1 } from './styles';\r\nimport { Button, Input } from '../../components';\r\nimport { NotificationType } from '../../interfaces/notification.interface';\r\nimport { useNotificationStore, NotificationActions, useAuthStore } from '../../stores';\r\n\r\ninterface IHomeProps { }\r\n\r\nconst Home: React.FC<IHomeProps> = () => {\r\n\r\n    const { logout } = useFirebase();\r\n    const { currentUser } = useAuthStore();\r\n    const { dispatchNotification } = useNotificationStore();\r\n\r\n    const _logout = () => {\r\n        logout()\r\n            .then(() => {\r\n                dispatchNotification({\r\n                    type: NotificationActions.ADD,\r\n                    payload: {\r\n                        id: uuid(),\r\n                        timeStamp: Date.now(),\r\n                        type: NotificationType.Success,\r\n                        message: 'You have been successfully logged out!'\r\n                    }\r\n                });\r\n            });\r\n    }\r\n\r\n    const [username, setUsername] = React.useState<string>(currentUser?.displayName as string);\r\n\r\n    if (currentUser?.displayName) {\r\n        return (\r\n            <HomeContainer>\r\n                <H1>{`Welcome, ${currentUser?.displayName}!`}</H1>\r\n                <Input\r\n                    type={'text'}\r\n                    value={username}\r\n                    placeholder={'Change username'}\r\n                    onChange={(e: any) => setUsername(e.target.value)}\r\n                />\r\n                <Button\r\n                    variant={'primary'}\r\n                    onClick={() => currentUser.updateProfile({ displayName: username })}\r\n                >\r\n                    {'Change username'}\r\n                </Button>\r\n                <Button\r\n                    onClick={_logout}\r\n                    variant={'default'}\r\n                >\r\n                    {'Logout'}\r\n                </Button>\r\n            </HomeContainer>\r\n        );\r\n    }\r\n    else return <></>;\r\n}\r\n\r\nexport default Home;","import { useSpring } from 'react-spring';\r\n\r\nconst useAnimation = () => {\r\n    const { opacity: titleAnimation } = useSpring({\r\n        opacity: 1,\r\n        from: { opacity: 0 },\r\n        delay: 0,\r\n    });\r\n    const { transform: subTitleAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 50\r\n    });\r\n    const { transform: emailFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 100\r\n    });\r\n    const { transform: pwFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 150\r\n    });\r\n    const { transform: loginButtonAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 200\r\n    });\r\n    const { transform: socialMediaAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 250\r\n    });\r\n    const { transform: titleIconAnimation } = useSpring({\r\n        transform: 'scale(1)',\r\n        from: { transform: 'scale(0)' },\r\n        delay: 300,\r\n    });\r\n\r\n    return {\r\n        titleAnimation,\r\n        pwFieldAnimation,\r\n        subTitleAnimation,\r\n        titleIconAnimation,\r\n        emailFieldAnimation,\r\n        loginButtonAnimation,\r\n        socialMediaAnimation,\r\n    };\r\n}\r\n\r\nexport default useAnimation;","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\nconst _WelcomeContainer = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: flex-end;\r\n    min-height: 600px;\r\n    height: 100%;\r\n    overflow-x: hidden;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst _WelcomeCircle = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    width: ${theme.vw > theme.vh ? '100vw' : '100vh'};\r\n    height: ${theme.vw > theme.vh ? '100vw' : '100vh'};\r\n    padding-bottom: 5%;\r\n    border-radius: 50%;\r\n    box-shadow: inset -1px -1px 10px rgba(0,0,0,0.6), 5px 5px 25px rgba(0,0,0,0.6), -5px -5px 25px rgba(0,0,0,0.6);\r\n    background-color: ${theme.primaryColor};\r\n    background-image: linear-gradient(rgba(255,255,255,0.4), rgba(255,255,255,0));\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: center;\r\n\r\n    @media (max-width: 700px) {\r\n        padding-bottom: 20%;\r\n    }\r\n`;\r\n\r\nconst _H1 = styled.h1`\r\n    font-size: 3.5rem;\r\n    color: ${theme.defaultFontColor};\r\n    text-align: center;\r\n        letter-spacing: 2px;\r\n        margin-bottom: 2.5vh;\r\n\r\n        @media (max-width: 700px) {\r\n            font-size: 2.5rem;\r\n        }\r\n`;\r\n\r\nconst _TitleContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n`;\r\n\r\nconst _TitleIcon = styled.div`\r\n    height: 5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: ${theme.defaultFontColor};\r\n\r\n    @media (max-width: 700px) {\r\n        height: 5rem;\r\n    }\r\n`;\r\n\r\nconst _ControlsContainer = styled.div`\r\n    width: 100%;\r\n    padding: 0 10vw 10vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nconst _P = styled.p`\r\n    font-size: 0.8rem;\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    color: ${theme.defaultFontColor};\r\n    margin: 1.5rem 0;\r\n    letter-spacing: 1px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _SocialMediaContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const P = animated(_P);\r\nexport const H1 = animated(_H1);\r\nexport const TitleIcon = animated(_TitleIcon);\r\nexport const WelcomeCircle = animated(_WelcomeCircle);\r\nexport const TitleContainer = animated(_TitleContainer);\r\nexport const WelcomeContainer = animated(_WelcomeContainer);\r\nexport const ControlsContainer = animated(_ControlsContainer);\r\nexport const SocialMediaContainer = animated(_SocialMediaContainer);","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\nconst _LoginContainer = styled.div`\r\n    position: relative;\r\n    padding: 15vh 10vw 5vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    overflow-x: hidden;\r\n    overflow-y: scroll;\r\n    min-height: 100%;\r\n`;\r\n\r\nconst _TitleContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 15vh;\r\n`;\r\n\r\nconst _H1 = styled.h1`\r\n    font-size: 1.6rem;\r\n    color: ${theme.defaultFontColor};\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    margin-bottom: 1rem;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _TitleIcon = styled.div`\r\n    height: 4rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: ${theme.defaultFontColor};\r\n`;\r\n\r\nconst _SubTitle = styled.h2`\r\n    font-size: 1.6rem;\r\n    color: ${theme.primaryFontColor};\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    margin-bottom: 1rem;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _ForgotPassword = styled.p`\r\n    font-size: 0.8rem;\r\n    font-weight: 500;\r\n    text-transform: uppercase;\r\n    color: ${theme.defaultFontColor};\r\n    margin-bottom: 1.5rem;\r\n    letter-spacing: 1px;\r\n    text-align: center;\r\n    align-self: flex-end;\r\n`;\r\n\r\nexport const H1 = animated(_H1);\r\nexport const SubTitle = animated(_SubTitle);\r\nexport const TitleIcon = animated(_TitleIcon);\r\nexport const TitleContainer = animated(_TitleContainer);\r\nexport const LoginContainer = animated(_LoginContainer);\r\nexport const ForgotPassword = animated(_ForgotPassword);","import * as yup from 'yup';\r\nimport { uuid } from 'uuidv4';\r\nimport * as React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { useAnimation } from './hooks';\r\nimport { useFirebase } from '../../utils';\r\nimport { SocialMediaContainer, P } from '../welcome/styles';\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { NotificationType } from '../../interfaces/notification.interface';\r\nimport { LoginContainer, H1, SubTitle, TitleIcon, TitleContainer } from './styles';\r\nimport { Button, Input, SocialMediaButton, PasswordInput } from '../../components';\r\nimport { faGoogle, faFacebookF, faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { useNotificationStore, NotificationActions, useLoaderBannerStore, LoaderBannerActions } from '../../stores';\r\n\r\nconst validationSchema = yup.object().shape({\r\n    email: yup.string()\r\n        .required('Email is required!')\r\n        .email('Email is not valid!'),\r\n    password: yup.string()\r\n        .required('Password is required!')\r\n        .min(6, 'Password must be at least 6 characters!'),\r\n});\r\n\r\ninterface IFormValues {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ninterface ILoginProps { }\r\n\r\nconst Login: React.FC<ILoginProps> = () => {\r\n\r\n    const { login, loginSocialMedia } = useFirebase();\r\n    const { dispatchIsLoading } = useLoaderBannerStore();\r\n    const { dispatchNotification } = useNotificationStore();\r\n\r\n    const {\r\n        titleAnimation,\r\n        pwFieldAnimation,\r\n        subTitleAnimation,\r\n        titleIconAnimation,\r\n        emailFieldAnimation,\r\n        socialMediaAnimation,\r\n        loginButtonAnimation,\r\n    } = useAnimation();\r\n\r\n    const formController = useFormik<IFormValues>({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n        onSubmit: ({ email, password }) => {\r\n            dispatchIsLoading({ type: LoaderBannerActions.START, payload: { isLoading: true, text: 'Logging in...' } });\r\n            login(email, password)\r\n                .then(() => {\r\n                    dispatchIsLoading({ type: LoaderBannerActions.STOP, payload: { isLoading: false } });\r\n                    formController.resetForm();\r\n                    dispatchNotification({\r\n                        type: NotificationActions.ADD,\r\n                        payload: {\r\n                            id: uuid(),\r\n                            timeStamp: Date.now(),\r\n                            type: NotificationType.Success,\r\n                            message: 'You have been successfully logged in!'\r\n                        }\r\n                    });\r\n                })\r\n                .catch(({ message }) => {\r\n                    dispatchIsLoading({ type: LoaderBannerActions.STOP, payload: { isLoading: false } });\r\n                    dispatchNotification({\r\n                        type: NotificationActions.ADD,\r\n                        payload: {\r\n                            message,\r\n                            id: uuid(),\r\n                            timeStamp: Date.now(),\r\n                            type: NotificationType.Danger,\r\n                        }\r\n                    });\r\n                });\r\n        },\r\n        validationSchema,\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        if (!formController.isSubmitting && !formController.isValid) {\r\n            for (const key in formController.errors) {\r\n                if (!!formController.errors[key]) {\r\n                    setTimeout(() => {\r\n                        dispatchNotification({\r\n                            type: NotificationActions.ADD,\r\n                            payload: {\r\n                                id: uuid(),\r\n                                timeStamp: Date.now(),\r\n                                type: NotificationType.Danger,\r\n                                message: formController.errors[key] as string,\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [formController.isSubmitting]);\r\n\r\n    const _loginWithSocialMedia = (platform: ('Facebook' | 'GitHub' | 'Google')) => {\r\n        dispatchIsLoading({ type: LoaderBannerActions.START, payload: { isLoading: true, text: `Logging in with ${platform}...` } });\r\n        loginSocialMedia(platform)\r\n            .then(() => {\r\n                dispatchIsLoading({ type: LoaderBannerActions.STOP, payload: { isLoading: false } });\r\n                dispatchNotification({\r\n                    type: NotificationActions.ADD,\r\n                    payload: {\r\n                        id: uuid(),\r\n                        timeStamp: Date.now(),\r\n                        type: NotificationType.Success,\r\n                        message: `You have been successfully logged in with ${platform}!`,\r\n                    }\r\n                });\r\n            })\r\n            .catch(({ message }) => {\r\n                dispatchIsLoading({ type: LoaderBannerActions.STOP, payload: { isLoading: false } });\r\n                dispatchNotification({\r\n                    type: NotificationActions.ADD,\r\n                    payload: {\r\n                        message,\r\n                        id: uuid(),\r\n                        timeStamp: Date.now(),\r\n                        type: NotificationType.Danger,\r\n                    }\r\n                });\r\n            });\r\n    }\r\n\r\n    return (\r\n        <LoginContainer>\r\n            <TitleContainer>\r\n                <H1 style={{ opacity: titleAnimation }}>{'welcome back'}</H1>\r\n                <TitleIcon style={{ transform: titleIconAnimation }}>\r\n                    <FontAwesomeIcon icon={faSignInAlt} style={{ width: '100%', height: '100%' }} />\r\n                </TitleIcon>\r\n            </TitleContainer>\r\n            <SubTitle style={{ transform: subTitleAnimation }}>{'login in'}</SubTitle>\r\n            <Input\r\n                name={'email'}\r\n                placeholder={'email'}\r\n                value={formController.values.email}\r\n                onChange={formController.handleChange}\r\n                style={{ transform: emailFieldAnimation }}\r\n                isValid={!!(formController.touched.email && !formController.errors.email)}\r\n                isInvalid={!!(formController.touched.email && !!formController.errors.email)}\r\n            />\r\n            <PasswordInput\r\n                name={'password'}\r\n                placeholder={'password'}\r\n                value={formController.values.password}\r\n                onChange={formController.handleChange}\r\n                style={{ transform: pwFieldAnimation }}\r\n                isValid={!!(formController.touched.password && !formController.errors.password)}\r\n                isInvalid={!!(formController.touched.password && !!formController.errors.password)}\r\n            />\r\n            <Button\r\n                variant={'primary'}\r\n                onClick={formController.handleSubmit}\r\n                style={{ transform: loginButtonAnimation }}\r\n            >\r\n                {'Login'}\r\n            </Button>\r\n            <P style={{ transform: socialMediaAnimation }}>{'or login using social media'}</P>\r\n            <SocialMediaContainer style={{ transform: socialMediaAnimation }}>\r\n                <SocialMediaButton onClick={() => _loginWithSocialMedia('Facebook')}>\r\n                    <FontAwesomeIcon icon={faFacebookF} size={'2x'} />\r\n                </SocialMediaButton>\r\n                <SocialMediaButton onClick={() => _loginWithSocialMedia('Google')}>\r\n                    <FontAwesomeIcon icon={faGoogle} size={'2x'} />\r\n                </SocialMediaButton>\r\n                <SocialMediaButton onClick={() => _loginWithSocialMedia('GitHub')}>\r\n                    <FontAwesomeIcon icon={faGithub} size={'2x'} />\r\n                </SocialMediaButton>\r\n            </SocialMediaContainer>\r\n        </LoginContainer>\r\n    );\r\n}\r\n\r\nexport default Login;","import { useSpring } from 'react-spring';\r\n\r\nconst useAnimation = () => {\r\n    const { transform: defaultButtonTransform } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px,600px, 0px)' },\r\n        delay: 200,\r\n    });\r\n\r\n    const { transform: primaryButtonTransform } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px,600px, 0px)' },\r\n        delay: 250,\r\n    });\r\n\r\n    const { transform: socialMediaContainerTransform } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px,600px, 0px)' },\r\n        delay: 300,\r\n    });\r\n\r\n    const { transform: titleIconScale } = useSpring({\r\n        transform: 'scale(1)',\r\n        from: { transform: 'scale(0)' },\r\n        delay: 450,\r\n    });\r\n\r\n    return {\r\n        titleIconScale,\r\n        defaultButtonTransform,\r\n        primaryButtonTransform,\r\n        socialMediaContainerTransform,\r\n    };\r\n}\r\n\r\nexport default useAnimation;","import { uuid } from 'uuidv4';\r\nimport * as React from 'react';\r\nimport { useAnimation } from './hooks';\r\nimport { useSpring } from 'react-spring';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { theme, useFirebase } from '../../utils';\r\nimport { faTrophy } from '@fortawesome/free-solid-svg-icons';\r\nimport { Button, SocialMediaButton } from '../../components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { NotificationType } from '../../interfaces/notification.interface';\r\nimport { faGoogle, faFacebookF, faGithub } from '@fortawesome/free-brands-svg-icons'\r\nimport { useNotificationStore, NotificationActions, useLoaderBannerStore, LoaderBannerActions } from '../../stores';\r\nimport { WelcomeContainer, WelcomeCircle, H1, ControlsContainer, P, SocialMediaContainer, TitleContainer, TitleIcon } from './styles';\r\n\r\ninterface IWelcomeProps { }\r\n\r\nconst Welcome: React.FC<IWelcomeProps> = () => {\r\n\r\n    const history = useHistory();\r\n    const { loginSocialMedia } = useFirebase();\r\n    const { dispatchIsLoading } = useLoaderBannerStore();\r\n    const { dispatchNotification } = useNotificationStore();\r\n\r\n    const { vh, vw } = theme;\r\n\r\n    const {\r\n        titleIconScale,\r\n        defaultButtonTransform,\r\n        primaryButtonTransform,\r\n        socialMediaContainerTransform,\r\n    } = useAnimation();\r\n\r\n    const [{ transform, opacity }, set] = useSpring(() => ({ transform: `translate3d(0,${vw > vh ? '-150vw' : '-150vh'},0)`, opacity: 1 }));\r\n    set({ transform: `translate3d(0,${vw > vh ? '-75vw' : '-50vh'},0)` });\r\n\r\n    const moveTo = (path: string) => {\r\n        set({ transform: `translate3d(0,${vw > vh ? '-120vw' : '-120vh'},0)`, opacity: 0 });\r\n        setTimeout(() => history.push(path), 400);\r\n    };\r\n\r\n    const _loginWithSocialMedia = (platform: ('Facebook' | 'GitHub' | 'Google')) => {\r\n        dispatchIsLoading({ type: LoaderBannerActions.START, payload: { isLoading: true, text: `Logging in with ${platform}...` } });\r\n        loginSocialMedia(platform)\r\n            .then(() => {\r\n                dispatchIsLoading({ type: LoaderBannerActions.STOP, payload: { isLoading: false } });\r\n                dispatchNotification({\r\n                    type: NotificationActions.ADD,\r\n                    payload: {\r\n                        id: uuid(),\r\n                        timeStamp: Date.now(),\r\n                        type: NotificationType.Success,\r\n                        message: `You have been successfully logged in with ${platform}!`,\r\n                    }\r\n                });\r\n            })\r\n            .catch(({ message }) => {\r\n                dispatchIsLoading({ type: LoaderBannerActions.STOP, payload: { isLoading: false } });\r\n                dispatchNotification({\r\n                    type: NotificationActions.ADD,\r\n                    payload: {\r\n                        message,\r\n                        id: uuid(),\r\n                        timeStamp: Date.now(),\r\n                        type: NotificationType.Danger,\r\n                    }\r\n                });\r\n            });\r\n    }\r\n\r\n    return (\r\n        <WelcomeContainer>\r\n            <WelcomeCircle style={{ transform }}>\r\n                <TitleContainer>\r\n                    <H1>{'HOMiESCUP'}</H1>\r\n                    <TitleIcon style={{ transform: titleIconScale }}>\r\n                        <FontAwesomeIcon icon={faTrophy} style={{ width: '100%', height: '100%' }} />\r\n                    </TitleIcon>\r\n                </TitleContainer>\r\n            </WelcomeCircle>\r\n            <ControlsContainer style={{ opacity }}>\r\n                <Button variant={'default'} style={{ transform: defaultButtonTransform }} onClick={() => moveTo('/login')}>\r\n                    {'Login'}\r\n                </Button>\r\n                <Button variant={'primary'} style={{ transform: primaryButtonTransform }} onClick={() => moveTo('/register')}>\r\n                    {'Create account'}\r\n                </Button>\r\n                <P style={{ transform: socialMediaContainerTransform }}>{'or login using social media'}</P>\r\n                <SocialMediaContainer style={{ transform: socialMediaContainerTransform }}>\r\n                    <SocialMediaButton onClick={() => _loginWithSocialMedia('Facebook')}>\r\n                        <FontAwesomeIcon icon={faFacebookF} size={'2x'} />\r\n                    </SocialMediaButton>\r\n                    <SocialMediaButton onClick={() => _loginWithSocialMedia('Google')}>\r\n                        <FontAwesomeIcon icon={faGoogle} size={'2x'} />\r\n                    </SocialMediaButton>\r\n                    <SocialMediaButton onClick={() => _loginWithSocialMedia('GitHub')}>\r\n                        <FontAwesomeIcon icon={faGithub} size={'2x'} />\r\n                    </SocialMediaButton>\r\n                </SocialMediaContainer>\r\n            </ControlsContainer>\r\n        </WelcomeContainer>\r\n    );\r\n}\r\n\r\nexport default Welcome;","import { useSpring } from 'react-spring';\r\n\r\nconst useAnimation = () => {\r\n    const { opacity: titleAnimation } = useSpring({\r\n        opacity: 1,\r\n        from: { opacity: 0 },\r\n        delay: 0,\r\n    });\r\n    const { transform: subTitleAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 50\r\n    });\r\n    const { transform: usernameFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 100\r\n    });\r\n    const { transform: emailFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 150\r\n    });\r\n    const { transform: pwFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 200\r\n    });\r\n    const { transform: confirmPWFieldAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 250\r\n    });\r\n    const { transform: registerButtonAnimation } = useSpring({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        from: { transform: 'translate3d(0px, 600px, 0px)' },\r\n        delay: 300\r\n    });\r\n    const { transform: titleIconAnimation } = useSpring({\r\n        transform: 'scale(1)',\r\n        from: { transform: 'scale(0)' },\r\n        delay: 350,\r\n    });\r\n\r\n    return {\r\n        titleAnimation,\r\n        pwFieldAnimation,\r\n        subTitleAnimation,\r\n        titleIconAnimation,\r\n        emailFieldAnimation,\r\n        usernameFieldAnimation,\r\n        confirmPWFieldAnimation,\r\n        registerButtonAnimation,\r\n    };\r\n}\r\n\r\nexport default useAnimation;","import styled from 'styled-components';\r\n\r\nexport const RegisterContainer = styled.div`\r\n    position: relative;\r\n    padding: 15vh 10vw 5vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    overflow-x: hidden;\r\n    overflow-y: scroll;\r\n    min-height: 100%;\r\n`;","import * as yup from 'yup';\r\nimport { uuid } from 'uuidv4';\r\nimport * as React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { useAnimation } from './hooks';\r\nimport { useFirebase } from '../../utils';\r\nimport { RegisterContainer } from './styles';\r\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { Button, Input, PasswordInput } from '../../components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { H1, TitleContainer, TitleIcon, SubTitle } from '../login/styles';\r\nimport { NotificationType } from '../../interfaces/notification.interface';\r\nimport { useNotificationStore, NotificationActions, LoaderBannerActions, useLoaderBannerStore } from '../../stores';\r\n\r\nconst validationSchema = yup.object().shape({\r\n    username: yup.string()\r\n        .required('Username is required!')\r\n        .min(6, 'Username must be at least 6 characters!')\r\n        .max(18, `Username must be less than 18 characters!`)\r\n        .matches(/^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/, 'Username is not valid!'),\r\n    email: yup.string()\r\n        .required('Email is required!')\r\n        .email('Email is not valid!'),\r\n    password: yup.string()\r\n        .required('Password is required!')\r\n        .min(6, 'Password must be at least 6 characters!'),\r\n    confirmPassword: yup.string()\r\n        .required('Confirm Password is required!')\r\n        .oneOf([yup.ref('password')], 'Passwords must match!')\r\n\r\n});\r\n\r\ninterface IFormValues {\r\n    username: string;\r\n    email: string;\r\n    password: string;\r\n    confirmPassword: string;\r\n}\r\n\r\ninterface IRegisterProps { }\r\n\r\nconst Register: React.FC<IRegisterProps> = () => {\r\n\r\n    const { register } = useFirebase();\r\n    const { dispatchIsLoading } = useLoaderBannerStore();\r\n    const { dispatchNotification } = useNotificationStore();\r\n\r\n    const {\r\n        titleAnimation,\r\n        pwFieldAnimation,\r\n        subTitleAnimation,\r\n        titleIconAnimation,\r\n        emailFieldAnimation,\r\n        usernameFieldAnimation,\r\n        confirmPWFieldAnimation,\r\n        registerButtonAnimation,\r\n    } = useAnimation();\r\n\r\n    const formController = useFormik<IFormValues>({\r\n        initialValues: {\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n        },\r\n        onSubmit: ({ username, email, password }) => {\r\n            dispatchIsLoading({ type: LoaderBannerActions.START, payload: { isLoading: true, text: 'Registering...' } });\r\n            register(username, email, password)\r\n                .then(() => {\r\n                    dispatchIsLoading({ type: LoaderBannerActions.STOP, payload: { isLoading: false } });\r\n                    formController.resetForm();\r\n                    dispatchNotification({\r\n                        type: NotificationActions.ADD,\r\n                        payload: {\r\n                            id: uuid(),\r\n                            timeStamp: Date.now(),\r\n                            type: NotificationType.Success,\r\n                            message: 'You have been successfully registered!'\r\n                        }\r\n                    });\r\n                })\r\n                .catch(({ message }) => {\r\n                    dispatchIsLoading({ type: LoaderBannerActions.STOP, payload: { isLoading: false } });\r\n                    dispatchNotification({\r\n                        type: NotificationActions.ADD,\r\n                        payload: {\r\n                            message,\r\n                            id: uuid(),\r\n                            timeStamp: Date.now(),\r\n                            type: NotificationType.Danger,\r\n                        }\r\n                    });\r\n                });\r\n        },\r\n        validationSchema,\r\n    });\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (!formController.isSubmitting && !formController.isValid) {\r\n            for (const key in formController.errors) {\r\n                if (!!formController.errors[key]) {\r\n                    setTimeout(() => {\r\n                        dispatchNotification({\r\n                            type: NotificationActions.ADD,\r\n                            payload: {\r\n                                id: uuid(),\r\n                                timeStamp: Date.now(),\r\n                                type: NotificationType.Danger,\r\n                                message: formController.errors[key] as string,\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [formController.isSubmitting]);\r\n\r\n\r\n    return (\r\n        <RegisterContainer>\r\n            <TitleContainer>\r\n                <H1 style={{ opacity: titleAnimation }}>{'great idea'}</H1>\r\n                <TitleIcon style={{ transform: titleIconAnimation }}>\r\n                    <FontAwesomeIcon icon={faUserPlus} style={{ width: '100%', height: '100%' }} />\r\n                </TitleIcon>\r\n            </TitleContainer>\r\n            <SubTitle style={{ transform: subTitleAnimation }}>{'register now'}</SubTitle>\r\n            <Input\r\n                name={'username'}\r\n                placeholder={'username'}\r\n                value={formController.values.username}\r\n                onChange={formController.handleChange}\r\n                style={{ transform: usernameFieldAnimation }}\r\n                isValid={!!(formController.touched.username && !formController.errors.username)}\r\n                isInvalid={!!(formController.touched.username && !!formController.errors.username)}\r\n            />\r\n            <Input\r\n                name={'email'}\r\n                placeholder={'email'}\r\n                value={formController.values.email}\r\n                onChange={formController.handleChange}\r\n                style={{ transform: emailFieldAnimation }}\r\n                isValid={!!(formController.touched.email && !formController.errors.email)}\r\n                isInvalid={!!(formController.touched.email && !!formController.errors.email)}\r\n            />\r\n            <PasswordInput\r\n                name={'password'}\r\n                placeholder={'password'}\r\n                value={formController.values.password}\r\n                onChange={formController.handleChange}\r\n                style={{ transform: pwFieldAnimation }}\r\n                isValid={!!(formController.touched.password && !formController.errors.password)}\r\n                isInvalid={!!(formController.touched.password && !!formController.errors.password)}\r\n            />\r\n            <PasswordInput\r\n                name={'confirmPassword'}\r\n                placeholder={'confirm password'}\r\n                onChange={formController.handleChange}\r\n                value={formController.values.confirmPassword}\r\n                style={{ transform: confirmPWFieldAnimation }}\r\n                isValid={!!(formController.touched.confirmPassword && !formController.errors.confirmPassword)}\r\n                isInvalid={!!(formController.touched.confirmPassword && !!formController.errors.confirmPassword)}\r\n            />\r\n            <Button\r\n                variant={'primary'}\r\n                onClick={formController.handleSubmit}\r\n                style={{ transform: registerButtonAnimation }}\r\n            >\r\n                {'register'}\r\n            </Button>\r\n        </RegisterContainer>\r\n    );\r\n}\r\n\r\nexport default Register;","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\n\r\nexport const AppContainer = styled.div`\r\n    position: relative;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-color: ${theme.dark};\r\n    background-image: linear-gradient(135deg, rgba(48,48,48,1) 0%, rgba(255,255,255,.05) 100%);\r\n`;\r\n\r\nexport const ScreensContainer = styled.div`\r\n    height: 100%;\r\n    width: 100%;\r\n    overflow-y: auto;\r\n`;\r\n\r\nexport const BottomCircle = styled.div`\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: -50vh;\r\n    width: 100vh;\r\n    height: 100vh;\r\n    border-radius: 50%;\r\n    background-color: ${theme.darker06};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    @media (min-width: 700px) {\r\n        width: 900px;\r\n        height: 900px;\r\n        bottom: -450px;\r\n    }\r\n`;\r\n\r\nexport const TopCircle = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: -50vh;\r\n    width: 100vh;\r\n    height: 100vh;\r\n    border-radius: 50%;\r\n    background-color: ${theme.darker06};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    @media (min-width: 700px) {\r\n        width: 900px;\r\n        height: 900px;\r\n        bottom: -450px;\r\n    }\r\n`;\r\n\r\nexport const InnerCircle = styled.div`\r\n    width: 70vh;\r\n    height: 70vh;\r\n    border-radius: 50%;\r\n    background-color: ${theme.dark};\r\n\r\n    @media (min-width: 700px) {\r\n        width: 600px;\r\n        height: 600px;\r\n    }\r\n`;","import * as React from 'react';\r\nimport { useFirebase } from '../../utils';\r\nimport { HashRouter, Switch } from 'react-router-dom';\r\nimport { Login, Home, Register, Welcome } from '../../screens';\r\nimport { AuthorizedRoute, UnauthorizedRoute, Notification, LoaderBanner } from '../';\r\nimport { AppContainer, BottomCircle, InnerCircle, TopCircle, ScreensContainer } from './styles';\r\nimport { NotificationStoreProvider, LoaderBannerStoreProvider, AuthStoreProvider } from '../../stores';\r\n\r\ninterface IAppProps { }\r\n\r\nconst App: React.FC<IAppProps> = () => {\r\n\r\n    const { isInitialized } = useFirebase();\r\n    const [firebaseInitialized, setFirebaseInitialized] = React.useState<boolean>(false);\r\n\r\n    React.useEffect(() => {\r\n        isInitialized()\r\n            .then(() => setFirebaseInitialized(true));\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <AuthStoreProvider>\r\n            <LoaderBannerStoreProvider>\r\n                <NotificationStoreProvider>\r\n                    <AppContainer>\r\n                        <LoaderBanner forceShow={!firebaseInitialized} />\r\n                        <Notification />\r\n                        <TopCircle>\r\n                            <InnerCircle />\r\n                        </TopCircle>\r\n                        <BottomCircle>\r\n                            <InnerCircle />\r\n                        </BottomCircle>\r\n                        <ScreensContainer>\r\n                            {firebaseInitialized\r\n                                ? <HashRouter basename=\"/\">\r\n                                    <Switch>\r\n                                        <AuthorizedRoute exact={true} path={'/home'} screen={<Home />} />\r\n                                        <UnauthorizedRoute exact={true} path={'/'} screen={<Welcome />} />\r\n                                        <UnauthorizedRoute exact={true} path={'/login'} screen={<Login />} />\r\n                                        <UnauthorizedRoute exact={true} path={'/register'} screen={<Register />} />\r\n                                    </Switch>\r\n                                </HashRouter>\r\n                                : <></>\r\n                            }\r\n                        </ScreensContainer>\r\n                    </AppContainer>\r\n                </NotificationStoreProvider>\r\n            </LoaderBannerStoreProvider>\r\n        </AuthStoreProvider>\r\n    );\r\n}\r\n\r\n\r\nexport default App;","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\nimport { NotificationType } from '../../interfaces/notification.interface';\r\n\r\ninterface INotificationContainerProps {\r\n    type: NotificationType;\r\n}\r\n\r\nconst NotificationContainer = styled.div<INotificationContainerProps>`\r\n    position: absolute;\r\n    z-index: 100;\r\n    top: .5rem;\r\n    left: 50%;\r\n    width: 94vw;\r\n    height: 3.5rem;\r\n    background: ${({ type }) => type === NotificationType.Danger\r\n        ? theme.dangerBackgroundColor\r\n        : type === NotificationType.Success\r\n            ? theme.successBackgroundColor\r\n            : theme.warningBackgroundColor};\r\n    border-radius: 5px;\r\n    border: 2px solid;\r\n    border-color: ${({ type }) => type === NotificationType.Danger\r\n        ? theme.dangerBorderColor\r\n        : type === NotificationType.Success\r\n            ? theme.successBorderColor\r\n            : theme.warningBorderColor};\r\n    color: ${({ type }) => type === NotificationType.Danger\r\n        ? theme.dangerFontColor\r\n        : type === NotificationType.Success\r\n            ? theme.successFontColor\r\n            : theme.warningFontColor};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    padding-right: 2rem;\r\n`;\r\n\r\nconst NotificationText = styled.p<{ strLenght: number }>`\r\n    font-size: ${({ strLenght }) => strLenght > 27 ? '.75rem' : '1rem'};\r\n`;\r\n\r\nconst IconContainer = styled.div<INotificationContainerProps>`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    min-width: 1.8rem;\r\n    min-height: 1.8rem;\r\n    border: 2px solid;\r\n    border-color: ${({ type }) => type === NotificationType.Danger\r\n        ? theme.dangerFontColor\r\n        : type === NotificationType.Success\r\n            ? theme.successFontColor\r\n            : theme.warningFontColor};\r\n    border-radius: 50%;\r\n    background: transparent;\r\n    color: ${({ type }) => type === NotificationType.Danger\r\n        ? theme.dangerFontColor\r\n        : type === NotificationType.Success\r\n            ? theme.successFontColor\r\n            : theme.warningFontColor};\r\n    margin: 0 .5rem 0 .3rem;\r\n`;\r\n\r\nconst DeleteIconContainer = styled.button`\r\n    all: unset;\r\n    cursor: pointer;\r\n    position: absolute;\r\n    top: 50%;\r\n    right: 1px;\r\n    border-radius: 50%;\r\n    transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst AIconContainer = animated(IconContainer);\r\nconst ANotificationText = animated(NotificationText);\r\nconst ADeleteIconContainer = animated(DeleteIconContainer);\r\nconst ANotificationContainer = animated(NotificationContainer);\r\n\r\nexport {\r\n    IconContainer,\r\n    AIconContainer,\r\n    NotificationText,\r\n    ANotificationText,\r\n    DeleteIconContainer,\r\n    ADeleteIconContainer,\r\n    NotificationContainer,\r\n    ANotificationContainer,\r\n};","import * as React from 'react';\r\nimport { usePrevious } from '../../utils';\r\nimport { useNotificationStore } from '../../stores';\r\nimport { config, useTransition } from 'react-spring';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { NotificationType } from '../../interfaces/notification.interface';\r\nimport { NotificationActions } from '../../stores/notification/notification.actions';\r\nimport { faCheck, faInfo, faExclamation, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { ANotificationContainer, NotificationText, AIconContainer, DeleteIconContainer } from './styles';\r\n\r\nconst NOTIFICATIONS_MAX_COUNT: number = 4;\r\n\r\ninterface INotificationProps { }\r\n\r\nconst Notification: React.FC<INotificationProps> = () => {\r\n\r\n    const { notifications, dispatchNotification } = useNotificationStore();\r\n\r\n    const notificationAnimations = useTransition(\r\n        (notifications.map((n, index) => (index < NOTIFICATIONS_MAX_COUNT) ? ({ ...n, y: index * 4 }) : null).filter(n => !!n) as any[]),\r\n        n => n.id,\r\n        {\r\n            from: { opacity: 0, transform: `translate(-50%, -4rem)` },\r\n            leave: { opacity: 0 },\r\n            enter: ({ y }) => ({ opacity: 1, transform: `translate(-50%, ${y}rem)` }),\r\n            update: ({ y }) => ({ opacity: 1, transform: `translate(-50%, ${y}rem)` }),\r\n            config: { ...config.default, friction: 16 }\r\n        }\r\n    );\r\n\r\n    const prevNotifications = usePrevious(notifications);\r\n\r\n    React.useEffect(() => {\r\n        if ((prevNotifications as any[])?.length < notifications?.length) {\r\n            const newNotification = notifications.find(noti => prevNotifications?.map(prevNoti => prevNoti.id).indexOf(noti.id) === -1);\r\n            setTimeout(() => dispatchNotification({ type: NotificationActions.DELETE, payload: newNotification }), 3500);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [notifications]);\r\n\r\n    return (\r\n        <>\r\n            {notificationAnimations.map(({ item: notification, props }) => {\r\n                const { opacity, transform } = props;\r\n                return (\r\n                    <ANotificationContainer key={notification.id} type={notification.type} style={{ transform, opacity }}>\r\n                        <AIconContainer type={notification.type}>\r\n                            <FontAwesomeIcon\r\n                                icon={\r\n                                    notification.type === NotificationType.Danger\r\n                                        ? faExclamation\r\n                                        : notification.type === NotificationType.Warning\r\n                                            ? faInfo\r\n                                            : faCheck\r\n                                }\r\n                            />\r\n                        </AIconContainer>\r\n                        <NotificationText strLenght={notification.message?.length}>{notification.message}</NotificationText>\r\n                        <DeleteIconContainer>\r\n                            <FontAwesomeIcon\r\n                                size={'lg'}\r\n                                icon={faTimes}\r\n                                onClick={() => dispatchNotification({\r\n                                    type: NotificationActions.DELETE,\r\n                                    payload: notification\r\n                                })}\r\n                            />\r\n                        </DeleteIconContainer>\r\n                    </ANotificationContainer>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Notification;","import styled, { keyframes } from 'styled-components';\r\nimport { animated } from 'react-spring';\r\nimport { theme } from '../../utils';\r\n\r\nconst Banner = styled.div`\r\n    position: absolute;\r\n    z-index: 100;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background: transparent;\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: flex-start;\r\n`;\r\n\r\nconst LoaderContainer = styled.div`\r\n    position: relative;\r\n    width: 1.8rem;\r\n    height: 1.8rem;\r\n    margin: .5rem;\r\n    margin-right: 5px;\r\n`;\r\n\r\nconst Text = styled.p`\r\n    height: 1.6rem;\r\n    font-weight: 600;\r\n    font-size: .9rem;\r\n    text-transform: uppercase;\r\n    color: rgba(255,255,255,.3);\r\n    margin-bottom: .25rem;\r\n`;\r\n\r\nconst loaderAnimation = keyframes`\r\n    from {\r\n        transform: rotate(0deg) translate(-50%, -50%);\r\n    }\r\n    to {\r\n        transform: rotate(360deg) translate(-50%, -50%);\r\n    }\r\n`;\r\n\r\nconst Loader = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: 1.6rem;\r\n    height: 1.6rem;\r\n    border-radius: 5px;\r\n    transform-origin: top left;\r\n    background: rgba(255,255,255,.3);\r\n    animation: ${loaderAnimation} 1s ease infinite;\r\n`;\r\n\r\nconst innerLoaderAnimation = keyframes`\r\n    0% {\r\n        transform: rotate(0deg) translate(-50%, -50%);\r\n    }\r\n    100% {\r\n        transform: rotate(-360deg) translate(-50%, -50%);\r\n    }\r\n`;\r\n\r\nconst InnerLoader = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: 1rem;\r\n    height: 1rem;\r\n    border-radius: 5px;\r\n    transform-origin: top left;\r\n    background: ${theme.primaryColor};\r\n    animation: ${innerLoaderAnimation} 1s ease infinite;\r\n`;\r\n\r\nconst ABanner = animated(Banner);\r\nconst ALoader = animated(Loader);\r\nconst AInnerLoader = animated(InnerLoader);\r\nconst ALoaderContainer = animated(LoaderContainer);\r\n\r\nexport {\r\n    Text,\r\n    Banner,\r\n    ABanner,\r\n    Loader,\r\n    ALoader,\r\n    InnerLoader,\r\n    AInnerLoader,\r\n    LoaderContainer,\r\n    ALoaderContainer,\r\n};","import * as React from 'react';\r\nimport { useSpring } from 'react-spring';\r\nimport { useLoaderBannerStore } from '../../stores';\r\nimport { Banner, Loader, InnerLoader, ALoaderContainer, Text } from './styles';\r\n\r\ninterface ILoaderBannerProps {\r\n    forceShow?: boolean;\r\n}\r\n\r\nconst LoaderBanner: React.FC<ILoaderBannerProps> = ({ forceShow }) => {\r\n\r\n    const { opacity } = useSpring({\r\n        opacity: 1,\r\n        from: { opacity: 0 },\r\n    });\r\n\r\n    const { loaderBanner } = useLoaderBannerStore();\r\n\r\n    if (loaderBanner.isLoading || forceShow) {\r\n        return (\r\n            <Banner>\r\n                <ALoaderContainer stlye={{ opacity }}>\r\n                    <Loader />\r\n                    <InnerLoader />\r\n                </ALoaderContainer>\r\n                <Text>{loaderBanner.text || 'Loading...'}</Text>\r\n            </Banner>\r\n        );\r\n    }\r\n    else return null;\r\n};\r\n\r\nexport default LoaderBanner;","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\nexport interface IInputProps {\r\n    isValid?: boolean;\r\n    isInvalid?: boolean;\r\n}\r\n\r\nconst Input = styled.input<IInputProps>`\r\n    all: unset;\r\n    position: relative;\r\n    box-sizing: border-box;\r\n    padding: .5rem;\r\n    padding-left: 1rem;\r\n    padding-right: ${({ type }) => type === 'password' ? '3rem' : '1rem'};\r\n    width: 100%;\r\n    height: ${theme.baseHeight};\r\n    color: ${theme.defaultFontColor};\r\n    margin-bottom: .7rem;\r\n    background-color: ${theme.defaultColor};\r\n    border: 1px solid;\r\n    border-color: ${({ isValid, isInvalid }) => isValid ? theme.successColor : isInvalid ? theme.dangerColor : 'transparent'};\r\n    \r\n    ::placeholder {\r\n        text-transform: uppercase;\r\n        color: ${theme.defaultFontColor};\r\n        letter-spacing: 1px;\r\n    }\r\n`;\r\n\r\nexport default animated(Input);","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\n\r\nexport const PasswordInputContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n`;\r\n\r\nexport const EyeIconContainer = styled.label`\r\n    z-index: 10;\r\n    position: absolute;\r\n    height: calc(100% - .7rem);\r\n    width: 3rem;\r\n    top: 0;\r\n    right: 0;\r\n    color: ${theme.defaultFontColor};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;","import * as React from 'react';\r\nimport { animated } from 'react-spring';\r\nimport Input, { IInputProps } from '../styles/input';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { EyeIconContainer, PasswordInputContainer } from './styles';\r\nimport { faEye, faEyeSlash } from '@fortawesome/free-regular-svg-icons';\r\n\r\ninterface IPasswordInput { }\r\n\r\nconst PasswordInput: React.FC<IPasswordInput & React.InputHTMLAttributes<HTMLInputElement> & IInputProps> = ({ style, ...rest }) => {\r\n\r\n    const [showPW, setShowPW] = React.useState<boolean>(false);\r\n\r\n    return (\r\n        <PasswordInputContainer style={{ ...style }}>\r\n            <EyeIconContainer htmlFor={rest.name} onClick={() => setShowPW(!showPW)}>\r\n                {!showPW\r\n                    ? <FontAwesomeIcon\r\n                        icon={faEye}\r\n                        style={{ width: '1.5rem', height: '1.5rem' }}\r\n                    />\r\n                    : <FontAwesomeIcon\r\n                        icon={faEyeSlash}\r\n                        style={{ width: '1.5rem', height: '1.5rem' }}\r\n                    />\r\n                }\r\n            </EyeIconContainer>\r\n            <Input id={rest.name} type={showPW ? 'text' : 'password'} {...rest} />\r\n        </PasswordInputContainer>\r\n    );\r\n}\r\n\r\nexport default animated(PasswordInput);","import * as React from 'react';\r\nimport { useAuthStore } from '../../stores';\r\nimport { Route, RouteProps, Redirect } from 'react-router-dom';\r\n\r\ninterface IAuthorizedRouteProps {\r\n    screen: JSX.Element;\r\n}\r\n\r\nconst AuthorizedRoute: React.FC<IAuthorizedRouteProps & RouteProps> = ({ screen, ...rest }) => {\r\n    const { currentUser } = useAuthStore();\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={\r\n                () => !!currentUser\r\n                    ? screen\r\n                    : <Redirect to={'/'} />\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default AuthorizedRoute;","import * as React from 'react';\r\nimport { useAuthStore } from '../../stores';\r\nimport { Route, RouteProps, Redirect } from 'react-router-dom';\r\n\r\ninterface IUnauthorizedRouteProps {\r\n    screen: JSX.Element;\r\n}\r\n\r\nconst UnauthorizedRoute: React.FC<IUnauthorizedRouteProps & RouteProps> = ({ screen, ...rest }) => {\r\n    const { currentUser } = useAuthStore();\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={\r\n                () => !!currentUser\r\n                    ? <Redirect to={'/home'} />\r\n                    : screen\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default UnauthorizedRoute;","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\ninterface IButtonProps {\r\n    variant: ('default' | 'primary');\r\n}\r\n\r\nconst Button = styled.button<IButtonProps>`\r\n    all: unset;\r\n    box-sizing: border-box;\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: ${theme.baseHeight};\r\n    background-color: ${({ variant }) => variant === 'default' ? theme.defaultColor : theme.primaryColor};\r\n    color: ${theme.defaultFontColor};\r\n    text-transform: uppercase;\r\n    margin-bottom: 1.2vh;\r\n    font-weight: 700;\r\n    box-shadow: ${({ variant }) => variant === 'default' ? 'none' : '4px 4px 20px rgba(0,0,0,0.6)'}\r\n`;\r\n\r\nexport default animated(Button);","import { theme } from '../../utils';\r\nimport styled from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\nconst SocialMediaButton = styled.button`\r\n    all: unset;\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 3rem;\r\n    height: 3rem;\r\n    border: 3px solid ${theme.defaultFontColor};\r\n    border-radius: 50%;\r\n    background: transparent;\r\n    color: ${theme.defaultFontColor};\r\n    margin: 0 .75rem;\r\n`;\r\n\r\nexport default animated(SocialMediaButton);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './components';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}